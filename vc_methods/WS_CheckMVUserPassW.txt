//%attributes = {"publishedSoap":true,"publishedWsdl":true,"lang":"en"} comment added and reserved by 4D.

// ----------------------------------------------------
// User name (OS): robert.richardson
// Date and time: 23/04/11, 14:33:26
// ----------------------------------------------------
// Method: WS_CheckMVUserPassW
// Description
// 
// This method is called by a Storman Client, and/or 
// web to check that a user exists at MV, and the attempted 
// password is correct.
//
// Parameters
// ----------------------------------------------------

C_LONGINT($i)//WS_AccessLevel;

SOAP DECLARATION(WS_ORFacilityCode;Is string var;SOAP input;"WS_ORFacilityCode")
SOAP DECLARATION(WS_Username;Is string var;SOAP input;"WS_Username")
SOAP DECLARATION(WS_Password;Is string var;SOAP input;"WS_Password")
SOAP DECLARATION(WS_WebServicePassword;Is text;SOAP input)

SOAP DECLARATION(WS_Permissions;Is text;SOAP output;"WS_Permissions")
SOAP DECLARATION(WS_UserID;Is string var;SOAP output;"WS_UserID")
SOAP DECLARATION(WS_GroupName;Text array;SOAP output;"WS_GroupName")
SOAP DECLARATION(WS_GroupID;String array;SOAP output;"WS_GroupID")
SOAP DECLARATION(WS_UserGroupID;String array;SOAP output;"WS_UserGroupID")
SOAP DECLARATION(WS_GroupUserID;String array;SOAP output;"WS_GroupUserID")
SOAP DECLARATION(WS_GroupCC;Boolean array;SOAP output;"WS_GroupCC")
SOAP DECLARATION(WS_GroupOverride;Boolean array;SOAP output;"WS_GroupOverride")
SOAP DECLARATION(WS_GroupPerm;Text array;SOAP output;"WS_GroupPerm")
SOAP DECLARATION(WS_Names;String array;SOAP output;"WS_Names")
SOAP DECLARATION(WS_StaffPins;String array;SOAP output;"WS_StaffPins")
SOAP DECLARATION(WS_UserNo;Integer array;SOAP output;"WS_UserNo")
SOAP DECLARATION(WS_Timezone;Integer array;SOAP output;"WS_Timezone")
SOAP DECLARATION(WS_PasswordChangeDate;Is date;SOAP output;"WS_PasswordChangeDate")
SOAP DECLARATION(WS_ActualName;Is string var;SOAP output;"WS_ActualName")
SOAP DECLARATION(WS_Buttons;Text array;SOAP output;"WS_Buttons")
SOAP DECLARATION(WS_SalesPerson;Is Boolean;SOAP output)
SOAP DECLARATION(WS_Language;Is text;SOAP output)

SOAP DECLARATION(WS_ORSuccess;Is Boolean;SOAP output)
SOAP DECLARATION(WS_ORErrorCode;Is integer;SOAP output)
SOAP DECLARATION(WS_ORErrorDescription;Is string var;SOAP output)

$String:="Start WS_CheckMVUserPassW"+Char(13)
$String:=$String+"WS_ORFacilityCode: "+WS_ORFacilityCode+Char(13)
$String:=$String+"WS_Username: "+WS_Username+Char(13)
C_TEXT($pass)
$pass:=WS_WebServicePassword
$pass:=Replace string($pass;Substring($pass;1;Length($pass)-2);"X"*(Length($pass)-2))
$String:=$String+"WS_WebServicePassword: "+$pass+Char(13)
WSRecordLog ($String)

WS_Permissions:="X"
WS_UserID:="X_X_X"

QUERY([Facility];[Facility]FacilityCode=WS_ORFacilityCode)

If (Records in selection([Facility])=1)

If (WS_WebServicePassword=[Facility]ODBCPassword) & ([Facility]ODBCPassword#"")

QUERY([UserLogins];[UserLogins]Name=WS_Username)

If (Records in selection([UserLogins])>0)

If (WS_Password=[UserLogins]Password)

WS_Permissions:=[UserLogins]Permissions
WS_UserID:=[UserLogins]UserID
WS_PasswordChangeDate:=[UserLogins]PasswordChangeDate
WS_ActualName:=[UserLogins]ActualName
WS_SalesPerson:=[UserLogins]SalesPerson
WS_Language:=[UserLogins]Language

If ([UserLogins]AccessFacility="ALL@")
WS_ORSuccess:=True
WS_ORErrorCode:=0
WS_ORErrorDescription:=""
Else 
$i:=Position(WS_ORFacilityCode;[UserLogins]AccessFacility)
If ($i>0)
WS_ORSuccess:=True
WS_ORErrorCode:=0
WS_ORErrorDescription:=""
Else 
WS_ORSuccess:=False
WS_ORErrorCode:=1056
WS_ORErrorDescription:="Access denied for requested Facility."
End if 
End if 

QUERY([UserLogins];[UserLogins]AccessFacility="@"+WS_ORFacilityCode+"@";*)
QUERY([UserLogins]; | ;[UserLogins]AccessFacility="All@";*)
QUERY([UserLogins]; & ;[UserLogins]PinCode>"")

SELECTION TO ARRAY([UserLogins]Name;WS_Names;[UserLogins]PinCode;WS_StaffPins;[UserLogins]UserNo;WS_UserNo;[UserLogins]Timezone;WS_Timezone)
ALL RECORDS([Groups])
SELECTION TO ARRAY([Groups]Name;WS_GroupName;[Groups]GroupID;WS_GroupID;[Groups]CallCentre;WS_GroupCC;[Groups]Override;WS_GroupOverride;[Groups]Permissions;WS_GroupPerm;[Groups]Buttons;WS_Buttons)
ALL RECORDS([UserGroup])
SELECTION TO ARRAY([UserGroup]GroupID;WS_UserGroupID;[UserGroup]UserID;WS_GroupUserID)

Else 
WS_ORSuccess:=False
WS_ORErrorCode:=1055
WS_ORErrorDescription:="Invalid Username or Password."
End if 
Else 
WS_ORSuccess:=False
WS_ORErrorCode:=1055
WS_ORErrorDescription:="Invalid Username or Password."
End if 
Else 
WS_ORSuccess:=False
WS_ORErrorCode:=1099
WS_ORErrorDescription:="Web Service Password is incorrect."
End if 
Else 
WS_ORSuccess:=False
WS_ORErrorCode:=1001
WS_ORErrorDescription:="Facility record not found in database Storman."
End if 

$String:="End WS_CheckMVUserPassW"+Char(13)
//$vlElem:=1
//$sizeofarray:=Size of array(WS_UserGroupID)
//For ($vlElem;1;$sizeofarray)
//$String:=$String+"WS_UserGroupID("+String($vlElem)+"):"+WS_UserGroupID{$vlElem}+Char(13)
//End for 
//$vlElem:=1
//$sizeofarray:=Size of array(WS_GroupUserID)
//For ($vlElem;1;$sizeofarray)
//$String:=$String+"WS_GroupCC("+String($vlElem)+"):"+String(WS_GroupCC{$vlElem})+Char(13)
//End for 
//$vlElem:=1
//$sizeofarray:=Size of array(WS_GroupOverride)
//For ($vlElem;1;$sizeofarray)
//$String:=$String+"WS_GroupOverride("+String($vlElem)+"):"+String(WS_GroupOverride{$vlElem})+Char(13)
//End for 
//$vlElem:=1
//$sizeofarray:=Size of array(WS_GroupPerm)
//For ($vlElem;1;$sizeofarray)
//$String:=$String+"WS_GroupPerm("+String($vlElem)+"):"+WS_GroupPerm{$vlElem}+Char(13)
//End for 
//$vlElem:=1
//$sizeofarray:=Size of array(WS_Names)
//For ($vlElem;1;$sizeofarray)
//$String:=$String+"WS_Names("+String($vlElem)+"):"+WS_Names{$vlElem}+Char(13)
//End for 
//$vlElem:=1
//$sizeofarray:=Size of array(WS_StaffPins)
//For ($vlElem;1;$sizeofarray)
//$String:=$String+"WS_StaffPins("+String($vlElem)+"):"+WS_StaffPins{$vlElem}+Char(13)
//End for 
//$vlElem:=1
//$sizeofarray:=Size of array(WS_UserNo)
//For ($vlElem;1;$sizeofarray)
//$String:=$String+"WS_UserNo("+String($vlElem)+"):"+String(WS_UserNo{$vlElem})+Char(13)
//End for 
//$vlElem:=1
//$sizeofarray:=Size of array(WS_Timezone)
//For ($vlElem;1;$sizeofarray)
//$String:=$String+"WS_Timezone("+String($vlElem)+"):"+String(WS_Timezone{$vlElem})+Char(13)
//End for 
//$vlElem:=1
//$sizeofarray:=Size of array(WS_Buttons)
//For ($vlElem;1;$sizeofarray)
//$String:=$String+"WS_Buttons("+String($vlElem)+"):"+String(WS_Buttons{$vlElem})+Char(13)
//End for 
//$vlElem:=1
//$sizeofarray:=Size of array(WS_GroupName)
//For ($vlElem;1;$sizeofarray)
//$String:=$String+"WS_GroupName("+String($vlElem)+"):"+String(WS_GroupName{$vlElem})+Char(13)
//End for 
//$vlElem:=1
//$sizeofarray:=Size of array(WS_GroupID)
//For ($vlElem;1;$sizeofarray)
//$String:=$String+"WS_GroupID("+String($vlElem)+"):"+String(WS_GroupID{$vlElem})+Char(13)
//End for 

//$String:=$String+"WS_Permissions: "+WS_Permissions+Char(13)
//$String:=$String+"WS_UserID: "+WS_UserID+Char(13)
//$String:=$String+"WS_PasswordChangeDate: "+String(WS_PasswordChangeDate)+Char(13)
//$String:=$String+"WS_ActualName: "+WS_ActualName+Char(13)
//$String:=$String+"WS_SalesPerson: "+String(WS_SalesPerson)+Char(13)
//$String:=$String+"WS_Language: "+WS_Language+Char(13)
$String:=$String+"WS_ORSuccess: "+String(WS_ORSuccess)+Char(13)
$String:=$String+"WS_ORErrorCode: "+String(WS_ORErrorCode)+Char(13)
$String:=$String+"WS_ORErrorDescription: "+WS_ORErrorDescription+Char(13)
WSRecordLog ($String)


ReadOnlyAll 
UnloadAll 



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Johnno - Original Method FB10041////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//C_LONGINT($i)  //WS_AccessLevel;

//WS_FacilityOK:=False
//WS_Password:="Invalid"
//WS_Permissions:="X"
//WS_UserID:="X_X_X"
//  //WS_AccessGroup:="NNNNNNNNNN"
//  //WS_AccessLevel:=1
//SOAP DECLARATION(WS_FacilityCode;Is string var;SOAP input;"WS_FacilityCode")
//SOAP DECLARATION(WS_Username;Is string var;SOAP input;"WS_Username")

//ALL RECORDS([Facility])
//QUERY([UserLogins];[UserLogins]AccessFacility="@"+WS_FacilityCode+"@";*)
//QUERY([UserLogins]; | ;[UserLogins]AccessFacility="All@";*)
//QUERY([UserLogins]; & ;[UserLogins]PinCode>"")
//SELECTION TO ARRAY([UserLogins]Name;WS_Names;[UserLogins]PinCode;WS_StaffPins;[UserLogins]UserNo;WS_UserNo;[UserLogins]Timezone;WS_Timezone)
//ALL RECORDS([Groups])
//SELECTION TO ARRAY([Groups]Name;WS_GroupName;[Groups]GroupID;WS_GroupID;[Groups]CallCentre;WS_GroupCC;[Groups]Override;WS_GroupOverride;[Groups]Permissions;WS_GroupPerm;[Groups]Buttons;WS_Buttons)
//ALL RECORDS([UserGroup])
//SELECTION TO ARRAY([UserGroup]GroupID;WS_UserGroupID;[UserGroup]UserID;WS_GroupUserID)
//QUERY([UserLogins];[UserLogins]Name=WS_Username)
//If (Records in selection([UserLogins])>0)
//WS_Password:=EncryptIt2 ([UserLogins]Password;True)
//WS_Permissions:=[UserLogins]Permissions
//  //QUERY([UserGroup];[UserGroup]UserID=[UserLogins]UserID)
//  //For ($i;1;Size of array(<>asUserPermissions))
//  //$Override:=False
//  //FIRST RECORD([UserGroup])
//  //For ($j;1;Records in selection([UserGroup]))
//  //QUERY([Groups];[Groups]GroupID=[UserGroup]GroupID)
//  //If ([Groups]Override=True) | (Substring(WS_Permissions;$i;1)#"Y")
//  //Case of 
//  //: ($Override=True) & ([Groups]Override=True)
//  //If (Substring([Groups]Permissions;$i;1)="Y")
//  //WS_Permissions:=Substring(WS_Permissions;1;$i-1)+"Y"+Substring(WS_Permissions;$i+1)
//  //End if 
//  //: ($Override=True) & ([Groups]Override=False)
//  //: ($Override=False) & ([Groups]Override=True)
//  //If (Substring([Groups]Permissions;$i;1)="Y")
//  //WS_Permissions:=Substring(WS_Permissions;1;$i-1)+"Y"+Substring(WS_Permissions;$i+1)
//  //Else 
//  //WS_Permissions:=Substring(WS_Permissions;1;$i-1)+"N"+Substring(WS_Permissions;$i+1)
//  //End if 
//  //Else 
//  //If (Substring([Groups]Permissions;$i;1)="Y")
//  //WS_Permissions:=Substring(WS_Permissions;1;$i-1)+"Y"+Substring(WS_Permissions;$i+1)
//  //End if 
//  //End case 
//  //If ([Groups]Override=True)
//  //$Override:=True
//  //End if 
//  //End if 
//  //NEXT RECORD([UserGroup])
//  //End for 
//  //End for 
//WS_UserID:=[UserLogins]UserID
//WS_PasswordChangeDate:=[UserLogins]PasswordChangeDate
//WS_ActualName:=[UserLogins]ActualName
//WS_SalesPerson:=[UserLogins]SalesPerson
//WS_Language:=[UserLogins]Language
//  //WS_AccessGroup:=[UserLogins]AccessGroup
//  //WS_AccessLevel:=[UserLogins]AccessLevel
//If ([UserLogins]AccessFacility="ALL@")
//WS_FacilityOK:=True
//Else 
//$i:=Position(WS_FacilityCode;[UserLogins]AccessFacility)
//If ($i>0)
//WS_FacilityOK:=True
//End if 
//End if 
//End if 
//SOAP DECLARATION(WS_Password;Is text;SOAP output;"WS_Password")
//SOAP DECLARATION(WS_Permissions;Is text;SOAP output;"WS_Permissions")
//SOAP DECLARATION(WS_UserID;Is string var;SOAP output;"WS_UserID")
//  //SOAP DECLARATION(WS_AccessGroup;Is String Var ;SOAP Output ;"WS_AccessGroup")
//  //SOAP DECLARATION(WS_AccessLevel;Is Integer ;SOAP Output ;"WS_AccessLevel")
//SOAP DECLARATION(WS_GroupName;Text array;SOAP output;"WS_GroupName")
//SOAP DECLARATION(WS_GroupID;String array;SOAP output;"WS_GroupID")
//SOAP DECLARATION(WS_UserGroupID;String array;SOAP output;"WS_UserGroupID")
//SOAP DECLARATION(WS_GroupUserID;String array;SOAP output;"WS_GroupUserID")
//SOAP DECLARATION(WS_GroupCC;Boolean array;SOAP output;"WS_GroupCC")
//SOAP DECLARATION(WS_GroupOverride;Boolean array;SOAP output;"WS_GroupOverride")
//SOAP DECLARATION(WS_GroupPerm;Text array;SOAP output;"WS_GroupPerm")
//SOAP DECLARATION(WS_FacilityOK;Is Boolean;SOAP output;"WS_FacilityOK")
//SOAP DECLARATION(WS_Names;String array;SOAP output;"WS_Names")
//SOAP DECLARATION(WS_StaffPins;String array;SOAP output;"WS_StaffPins")
//SOAP DECLARATION(WS_UserNo;Integer array;SOAP output;"WS_UserNo")
//SOAP DECLARATION(WS_Timezone;Integer array;SOAP output;"WS_Timezone")
//SOAP DECLARATION(WS_PasswordChangeDate;Is date;SOAP output;"WS_PasswordChangeDate")
//SOAP DECLARATION(WS_ActualName;Is string var;SOAP output;"WS_ActualName")
//SOAP DECLARATION(WS_Buttons;Text array;SOAP output;"WS_Buttons")
//SOAP DECLARATION(WS_SalesPerson;Is Boolean;SOAP output)
//SOAP DECLARATION(WS_Language;Is text;SOAP output)













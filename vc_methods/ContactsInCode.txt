//%attributes = {"lang":"en"} comment added and reserved by 4D.
C_LONGINT($i)
If (Form event=On Load)
READ WRITE([Letters])
READ WRITE([NotesHistory])
READ WRITE([Quote])
C_TEXT(vtSalesInfoLine;vtKSSIntroLine)
//SetColours 
LoadGradients 
LoadBackground 
If ([Facility]PhoneFormat>"")
OBJECT SET FORMAT([Contacts]ContactPhone;[Facility]PhoneFormat)
OBJECT SET FORMAT([Contacts]PhoneBus;[Facility]PhoneFormat)
OBJECT SET FORMAT([Contacts]FaxNumber;[Facility]PhoneFormat)
End if 
If (<>bFormatMobile=True) & ([Facility]MobileFormat>"")
OBJECT SET FORMAT([Contacts]MobilePhone;[Facility]MobileFormat)
End if 
vNoteHistBody:=""
vPostCode:=<>tPostCode
If (<>bEnglishSpelling=False)
vSalesEnquiry:=Get localized string("Sales Inquiry")
OBJECT SET TITLE(bDeclined;Get localized string("Sales Inquiry Declined"))
OBJECT SET TITLE(bRestore;Get localized string("Reactive Sales Inquiry"))
Else 
vSalesEnquiry:=Get localized string("Sales Enquiry")
End if 
vCountyState:=<>tCountyState
vtAlertNote:=[Contacts]Comments
If ([Contacts]OutComeDate#!00-00-00!)
vActive:=Get localized string("Inactive")
OBJECT SET VISIBLE(bRestore;True)
If (PermissionsControl (163;False)=False)
OBJECT SET ENABLED(bRestore;False)
End if 
Else 
vActive:=Get localized string("Active")
OBJECT SET VISIBLE(bRestore;False)
End if 
//End if 

vCustom5:=[Facility]MarketingTypeTitle
vCustom6:=[Facility]CustomerTypeTitle

vText:=[Contacts]ContactNo+", "+[Contacts]ContactName

If ([Contacts]ThreatLevel>0)
vThreatLevel:="Threat Level: "+String([Contacts]ThreatLevel)
If ([Contacts]ThreatLevel>=[Facility]ThreatLevelAlert)
OBJECT SET RGB COLORS(vThreatLevel;0x00FF0000;0x00FF0000)
Else 
OBJECT SET RGB COLORS(vThreatLevel;0x00FFA500;0x00FFA500)
End if 
Else 
vThreatLevel:=""
End if 

Case of 
: (<>sProduct="@B")
varm1:=Get localized string("Arrival Date")+":"
varm2:=Get localized string("Anticipated Departure")+":"
varm3:=Get localized string("Use this screen to manage berths & other recurring charges on this customers agreement.")
varm4:=Get localized string("Berth charges")+"..."
varm5:=Get localized string("Use this screen to remove customer out of all berths on this agreement.")
varm6:=Get localized string("Departures")
varm7:=Get localized string("Departure Details")+"..."
varm8:=Get localized string("Departure notice given")+":"
varm9:=Get localized string("Expected Departure date")+":"
varm10:=Get localized string("Reason for Departure")+":"
varm11:=Get localized string("Note: The Departure Date is before the Last Bill Date for this agreement. For the refund calculation to be correct, please go back to the Transactions tab, click on the Undo Last Charges button and select the Undo Last Charges option - then return to "+"this screen to do the Departure Calculation.")
varm12:=Get localized string("Departure calculation")+":"
varm13:=Get localized string("Initiate Departure procedure")+"..."
varm14:=Get localized string("Departure summary")+":"
varm15:=Get localized string("Use these icons to add / delete berths")
varm16:=Get localized string("Boat Name")+":"
varm17:=Get localized string("Berth")
varm18:=Get localized string("Total Berths")+":"
vArm19:=Get localized string("Berths")+":"
OBJECT SET TITLE(bOut;Get localized string("Create Transactions & Depart"))
: (<>sProduct="@R")
varm1:=Get localized string("Rental Date")+":"
varm2:=Get localized string("Anticipated Return")+":"
varm3:=Get localized string("Use this screen to manage appliances & other recurring charges on this customers agreement.")
varm4:=Get localized string("Appliance charges")+"..."
varm5:=Get localized string("Use this screen to return all customers  appliances on this agreement.")
varm6:=Get localized string("Returns")
varm7:=Get localized string("Return Details")+"..."
varm8:=Get localized string("Return notice given")+":"
varm9:=Get localized string("Expected Return date")+":"
varm10:=Get localized string("Reason for Return")+":"
varm11:=Get localized string("Note: The Return Date is before the Last Bill Date for this agreement. For the refund calculation to be correct, please go back to the Transactions tab, click on the Undo Last Charges button and select the Undo Last Charges option - then return to thi"+"s screen to do the Return Calculation.")
varm12:=Get localized string("Return calculation")+":"
varm13:=Get localized string("Initiate Returns procedure")+"..."
varm14:=Get localized string("Return summary")+":"
varm15:=Get localized string("Use these icons to add / delete appliances")
varm16:=Get localized string("Contact Person")+":"
varm17:=Get localized string("Appliance")
varm18:=Get localized string("Total Appliances")+":"
vArm19:=Get localized string("Appliance")+":"
OBJECT SET TITLE(bOut;Get localized string("Create Transactions & Return Appliance"))
: (<>sFacility="ST@")
OBJECT MOVE(vCount;60;0;0;0)
varm1:=Get localized string("New Support Date")+":"
varm2:=Get localized string("Ant Support Removal")+":"
varm3:=Get localized string("Use this screen to manage support plans & other recurring charges on this customers agreement.")
varm4:=Get localized string("Support Plan charges")+"..."
varm5:=Get localized string("Use this screen to remove all support for this customer in all support plans on this agreement.")
varm6:=Get localized string("Removal")
varm7:=Get localized string("Support Removal Details")+"..."
varm8:=Get localized string("Removal notice given")+":"
varm9:=Get localized string("Expected Support Removal date")+":"
varm10:=Get localized string("Reason for Removal")+":"
varm11:=Get localized string("The Support Removal Date")
varm12:=Get localized string("Support Removal calculation")+":"
varm13:=Get localized string("Initiate Support Removal")+"..."
varm14:=Get localized string("Support Removal summary")+":"
varm15:=Get localized string("Use these icons to add / delete support plans")
varm16:=Get localized string("Contact Person")+":"
varm17:=Get localized string("Support Plan")
varm18:=Get localized string("Total Support Plans")+":"
vArm19:=Get localized string("Support Plans")+":"
OBJECT SET TITLE(bOut;Get localized string("Create Transactions & Remove Support"))
OBJECT SET TITLE(bOut;"Create Transactions & Remove Support")
: (<>sProduct="@C")
varm1:=Get localized string("Move In Date")+":"
varm2:=Get localized string("Anticipated Move Out")+":"
varm3:=Get localized string("Use this screen to manage spaces & other recurring charges on this customers agreement.")
varm4:=Get localized string("Space charges")+"..."
varm5:=Get localized string("Use this screen to move this customer out of all spaces on this agreement.")
varm6:=Get localized string("Move Out")
varm7:=Get localized string("Move Out Details")+"..."
varm8:=Get localized string("Move Out notice given")+":"
varm9:=Get localized string("Expected Move Out date")+":"
varm10:=Get localized string("Reason for Move Out")+":"
varm11:=Get localized string("Note: The Move Out Date is before the Last Bill Date for this agreement. For the refund calculation to be correct, please go back to the Transactions tab, click on the Undo Last Charges button and select the Undo Last Charges option - then return to t"+"his screen to do the Move Out Calculation.")
varm12:=Get localized string("Move Out calculation")+":"
varm13:=Get localized string("Initiate Move Out procedure")+"..."
varm14:=Get localized string("Move Out summary")+":"
varm15:=Get localized string("Use these icons to add / delete spaces")
varm16:=Get localized string("Contact Person")+":"
varm17:=Get localized string("Space")
varm18:=Get localized string("Total Spaces")+":"
vArm19:=Get localized string("Spaces1")+":"
Else 
varm1:=Get localized string("Move In Date")+":"
varm2:=Get localized string("Anticipated Move Out")+":"
varm3:=Get localized string("Use this screen to manage units & other recurring charges on this customers agreement.")
varm4:=Get localized string("Unit charges")+"..."
varm5:=Get localized string("Use this screen to move this customer out of all units on this agreement.")
varm6:=Get localized string("Move Out")
varm7:=Get localized string("Move Out Details")+"..."
varm8:=Get localized string("Move Out notice given")+":"
varm9:=Get localized string("Expected Move Out date")+":"
varm10:=Get localized string("Reason for Move Out")+":"
varm11:=Get localized string("Note: The Move Out Date is before the Last Bill Date for this agreement. For the refund calculation to be correct, please go back to the Transactions tab, click on the Undo Last Charges button and select the Undo Last Charges option - then return to t"+"his screen to do the Move Out Calculation.")
varm12:=Get localized string("Move Out calculation")+":"
varm13:=Get localized string("Initiate Move Out procedure")+"..."
varm14:=Get localized string("Move Out summary")+":"
varm15:=Get localized string("Use these icons to add / delete units")
varm16:=Get localized string("Contact Person")+":"
varm17:=Get localized string("Unit")
varm18:=Get localized string("Total Units")+":"
vArm19:=Get localized string("Units1")+":"
End case 
vFirstName:=Get localized string("First Name")+":"

Case of 
: (<>sProduct="@B")
OBJECT SET TITLE(bPrev;Get localized string("Check Available Berths"))
: (<>sProduct="@R")
OBJECT SET TITLE(bPrev;Get localized string("Check Available Appliances"))
: (<>sProduct="@C")
OBJECT SET TITLE(bPrev;Get localized string("Check Available Spaces"))
Else 
OBJECT SET TITLE(bPrev;Get localized string("Check Available Units"))
End case 

If ([Contacts]CallDate=!00-00-00!)
[Contacts]CallDate:=Current date
End if 
If ([Contacts]CallTime=?00:00:00?)
[Contacts]CallTime:=Current time
End if 
If ([Contacts]FollowUpDate=!00-00-00!) & ([Contacts]FollowUpDone=False)
[Contacts]FollowUpDate:=Current date+1
End if 
If ([Contacts]CallTakenBy="")
[Contacts]CallTakenBy:=<>sCurrentUser
End if 
If ([Contacts]ContactNo="")
READ WRITE([Facility])
LOAD RECORD([Facility])
If (<>sProduct="MV")
vOldContact:=500001
Else 
vOldContact:=[Facility]NextContactNo
End if 
$Continue:=False
If (Not(Semaphore("<>bNextSalesInqNo";1800)))
$Continue:=True
End if 
If ($Continue)

//10285
If (Application type=4D Remote mode)
GET PROCESS VARIABLE(-1;<>aiNextSalesInqNo;<>aiNextSalesInqNo)
GET PROCESS VARIABLE(-1;<>asAllSiteCodes;<>asAllSiteCodes)
End if 
$arraypos:=Find in array(<>asAllSiteCodes;[Facility]FacilityCode)

Repeat 
If (<>aiNextSalesInqNo{$arraypos}>vOldContact)
//If (<>sProduct#"MV")
//ConfirmTwo (Get localized string("It appears the next sales inquiry number of")+" "+String(vOldContact;"0000000000")+" "+Get localized string("is already in use. Do you wish to use the next number?");Get localized string("Yes");Get localized string("No"))
//Else 
//OK:=1
//End if 
//If (OK=1)
[Contacts]ContactNo:=<>sFacility+String(<>aiNextSalesInqNo{$arraypos};"0000000000")
vOldContact:=vOldContact+1
If (<>sProduct#"MV")
[Facility]NextContactNo:=<>aiNextSalesInqNo{$arraypos}+1
<>aiNextSalesInqNo{$arraypos}:=<>aiNextSalesInqNo{$arraypos}+1
Else 
<>aiNextSalesInqNo{$arraypos}:=<>aiNextSalesInqNo{$arraypos}+1
End if 
//Else 
//[Contacts]ContactNo:=<>sFacility+String(vOldContact;"0000000000")
//vOldContact:=vOldContact+1
//If (<>sProduct#"MV")
//[Facility]NextContactNo:=[Facility]NextContactNo+1
//<>aiNextSalesInqNo{$arraypos}:=vOldContact
//End if 
//End if 
Else 
[Contacts]ContactNo:=<>sFacility+String(vOldContact;"0000000000")
vOldContact:=vOldContact+1
If (<>sProduct#"MV")
[Facility]NextContactNo:=[Facility]NextContactNo+1
End if 
<>aiNextSalesInqNo{$arraypos}:=vOldContact
End if 
$Key:=[Contacts]ContactNo
$i:=Find in field([Contacts]ContactNo;$Key)
Until ($i<=0)
SAVE RECORD([Facility])
READ ONLY([Facility])
LOAD RECORD([Facility])
If (Application type=4D Remote mode)
VARIABLE TO VARIABLE(-1;<>aiNextSalesInqNo;<>aiNextSalesInqNo)
End if 
CLEAR SEMAPHORE("<>bNextSalesInqNo")
Else 
Repeat 
[Contacts]ContactNo:=<>sFacility+String(vOldContact;"0000000000")
vOldContact:=vOldContact+1
If (<>sProduct#"MV")
[Facility]NextContactNo:=[Facility]NextContactNo+1
End if 
$Key:=[Contacts]ContactNo
$i:=Find in field([Contacts]ContactNo;$Key)
Until ($i<=0)
SAVE RECORD([Facility])
READ ONLY([Facility])
LOAD RECORD([Facility])
End if 
[Contacts]Facility:=<>sFacility
[Contacts]MailCountryCode:=[Facility]Country
If (vWait=True)
[Contacts]OnWaitingList:=True
End if 

//Clear any Quotes that may be incorrectly assigned.
QUERY([Quote];[Quote]ContactNo=[Contacts]ContactNo)
If (Records in selection([Quote])>0)
DELETE SELECTION([Quote])
End if 

//Clear any notes that may be incorrectly assigned.
QUERY([NotesHistory];[NotesHistory]ContactNo=[Contacts]ContactNo;*)
QUERY([NotesHistory]; & ;[NotesHistory]CustomerCode="")
If (Records in selection([NotesHistory])>0)
DELETE SELECTION([NotesHistory])
End if 

QUERY([NotesHistory];[NotesHistory]ContactNo=[Contacts]ContactNo;*)
QUERY([NotesHistory]; & ;[NotesHistory]CustomerCode#"")
If (Records in selection([NotesHistory])>0)
APPLY TO SELECTION([NotesHistory];[NotesHistory]ContactNo:="")
End if 

//clear incorrect letters
//19/06/13 DAM Added the condition ([Contacts]ContactNo#"") to avoid deletion all letters if the record is lost

If ([Contacts]ContactNo#"")
QUERY([Letters];[Letters]ContactNo=[Contacts]ContactNo)
If (Records in selection([Letters])>0)
DELETE SELECTION([Letters])
End if 
End if 

Else 
If (Application type=4D Remote mode)
GET PROCESS VARIABLE(-1;<>aiNextSalesInqNo;<>aiNextSalesInqNo)
End if 
End if 
ARRAY TEXT(aPageInq;3)
aPageInq{1}:=Get localized string("Sales & Contact Details")
aPageInq{2}:=Get localized string("Quotes & Notices")
aPageInq{3}:=Get localized string("Notes & Alerts")
//If (<>sFacility="KE@") Removed till CC is active
//INSERT IN ARRAY(aPageInq;4)
//aPageInq{4}:="Responses & Story"
//End if 
For ($i;1;Size of array(asSigns))
asSigns{$i}:=""
End for 

If (Undefined(varShowMsgTmp))
varShowMsgTmp:=False
End if 

If ([Contacts]Alerts) & (Length([Contacts]Comments)>1) & (varShowMsgTmp=False)//**- varShowMsgTmp added by Hamid - 8360
varShowMsgTmp:=True//**- varShowMsgTmp added by Hamid - 8360
BEEP
//Open window(100;100;500;415;0;"Alert Message")
Open window((Screen width/2)-200;(Screen height/2)-158;(Screen width/2)+200;(Screen height/2)+158;4;Get localized string("Alert Message"))
DIALOG([Contacts];"AlertMessage")
CLOSE WINDOW
End if 
$Pos:=Find in array(asCountryCodes;[Contacts]MailCountryCode)
If ($Pos<1)
[Contacts]MailCountryCode:=[Facility]Country
$Pos:=Find in array(asCountryCodes;[Facility]Country)
End if 
If ($Pos>0)
asMailCountries:=$Pos
[Contacts]MailCountry:=asMailCountries{$Pos}
End if 

asList1:=Find in array(asList1;[Contacts]MarketSrce)
If (asList1<0)
QUERY([MarketingTypes];[MarketingTypes]ListCode="MS";*)
QUERY([MarketingTypes]; & ;[MarketingTypes]Facility=<>sFacility;*)
QUERY([MarketingTypes]; & ;[MarketingTypes]Description=[Contacts]MarketSrce)
If (Records in selection([MarketingTypes])>0)
APPEND TO ARRAY(asList1;[MarketingTypes]Description)
asList1:=Find in array(asList1;[Contacts]MarketSrce)
Else 
asList1:=0
End if 
End if 
asList2:=Find in array(asList2;[Contacts]CustType)
If (asList2<0)
QUERY([MarketingTypes];[MarketingTypes]ListCode="CT";*)
QUERY([MarketingTypes]; & ;[MarketingTypes]Facility=<>sFacility;*)
QUERY([MarketingTypes]; & ;[MarketingTypes]Description=[Contacts]CustType)
If (Records in selection([MarketingTypes])>0)
APPEND TO ARRAY(asList2;[MarketingTypes]Description)
asList2:=Find in array(asList2;[Contacts]CustType)
Else 
asList2:=0
End if 
End if 
asList3:=Find in array(asList3;[Contacts]Category)
If (asList3<0)
QUERY([MarketingTypes];[MarketingTypes]ListCode="CC";*)
QUERY([MarketingTypes]; & ;[MarketingTypes]Facility=<>sFacility;*)
QUERY([MarketingTypes]; & ;[MarketingTypes]Description=[Contacts]Category)
If (Records in selection([MarketingTypes])>0)
APPEND TO ARRAY(asList3;[MarketingTypes]Description)
asList3:=Find in array(asList3;[Contacts]Category)
Else 
asList3:=0
End if 
End if 
asList8:=Find in array(asList8;[Contacts]ReasonDeclined)
If (asList8<0)
QUERY([MarketingTypes];[MarketingTypes]ListCode="RD";*)
QUERY([MarketingTypes]; & ;[MarketingTypes]Facility=<>sFacility;*)
QUERY([MarketingTypes]; & ;[MarketingTypes]Description=[Contacts]ReasonDeclined)
If (Records in selection([MarketingTypes])>0)
APPEND TO ARRAY(asList8;[MarketingTypes]Description)
asList8:=Find in array(asList8;[Contacts]ReasonDeclined)
Else 
asList8:=0
End if 
End if 


//Set Marketing dropdowns to "<None>" if there is no value entered
If ([Contacts]MarketSrce="")
asList1:=1
End if 
If ([Contacts]CustType="")
asList2:=1
End if 
If ([Contacts]Category="")
asList3:=1
End if 
If ([Contacts]ReasonDeclined="")
asList8:=1
End if 
asNotesList:=1

aPageInq:=1
If ([Contacts]PriceQuoted=0)
asList4:=0
vTotal:=0
OBJECT SET VISIBLE(*;"@Old";False)
Else 
$i:=Find in array(aAgreeNos;[Contacts]SizeQuoted)
If ($i>0)
asList4:=$i
vTotal:=aTotal{$i}
Else 
asList4:=0
vTotal:=0
End if 
End if 
If (Size of array(asList1)=0)
OBJECT SET VISIBLE(asList1;False)
OBJECT SET VISIBLE(*;"Text106";False)
End if 
If (Size of array(asList2)=0)
OBJECT SET VISIBLE(asList2;False)
OBJECT SET VISIBLE(*;"Text107";False)
End if 
If (Size of array(asList3)=0)
OBJECT SET VISIBLE(asList3;False)
OBJECT SET VISIBLE(*;"Text108";False)
End if 
If (Size of array(asNotesList)=0) | (Size of array(asNotesList)=1)
OBJECT SET VISIBLE(asNotesList;False)
OBJECT SET VISIBLE(*;"Text164";False)
OBJECT SET VISIBLE(*;"textAsNotesSort";False)
OBJECT SET VISIBLE(*;"Picture15";False)
End if 
START TRANSACTION
ARRAY TEXT(asList7;3)
asList7{1}:=""
asList7{2}:="Yes"
asList7{3}:="No"
asList7:=[Contacts]StoredBefore+1

Case of 
: ([Contacts]PrimaryPhone=2)
vPhone:=[Contacts]PhoneBus
: ([Contacts]PrimaryPhone=3)
vPhone:=[Contacts]MobilePhone
Else 
vPhone:=[Contacts]ContactPhone
End case 

//If ([Contacts]EmailAddress>"") & (([Facility]UsePDFWriter) | (<>iPlatform=2))
//OBJECT SET ENABLED(bEmailQuote;true)
//OBJECT SET ENABLED(bAddEmail;true)
//Else 
//OBJECT SET ENABLED(bEmailQuote;false)
//OBJECT SET ENABLED(bAddEmail;false)
//End if 
If (Length([Facility]SMSAcctDetails)>5)
OBJECT SET VISIBLE(*;"@SMS";False)
Else 
OBJECT SET ENABLED(bSend;False)
End if 
If (PermissionsControl (154;False)=False)
OBJECT SET ENABLED(bAddQuote;False)
End if 
If (PermissionsControl (155;False)=False)
OBJECT SET ENABLED(bModQuote;False)
End if 
If (PermissionsControl (156;False)=False)
OBJECT SET ENABLED(bDelQuote;False)
End if 
If (PermissionsControl (157;False)=False)
OBJECT SET ENABLED(bPrinting;False)
End if 
If ([Contacts]Outcome>" ")
OBJECT SET VISIBLE(bRefund;False)
OBJECT SET VISIBLE(bAgree;False)
OBJECT SET VISIBLE(bDeclined;False)
End if 
If (Size of array(asFacilities)<2)
OBJECT SET VISIBLE(asFacilities;False)
End if 
If (BLOB size([Contacts]Email)>0)
BLOB PROPERTIES([Contacts]Email;$i)
If ($i>0)
EXPAND BLOB([Contacts]Email)
End if 
WR BLOB TO AREA (veEmail;[Contacts]Email)
End if 
If (BLOB size([Contacts]Letter)>0)
BLOB PROPERTIES([Contacts]Letter;$i)
If ($i>0)
EXPAND BLOB([Contacts]Letter)
End if 
WR BLOB TO AREA (veLetter;[Contacts]Letter)
End if 
vName:=[Contacts]ContactName
If (vName="")
GOTO OBJECT(vName)
End if 
If ([Contacts]OnWaitingList=True)
vWaitList:=Get localized string("On Waiting List")
Else 
vWaitList:=""
End if 
If (vWaitList="")
OBJECT SET VISIBLE(bRemoveWList;False)
OBJECT SET VISIBLE(bAddWList;True)
Else 
OBJECT SET VISIBLE(bRemoveWList;True)
OBJECT SET VISIBLE(bAddWList;False)
End if 
vtSalesInfoLine:=Get localized string("This enquiry taken by")+" "+[Contacts]CallTakenBy+" "+Get localized string("on1")+" "+String([Contacts]CallDate)+" "+Get localized string("at")+" "+String([Contacts]CallTime)
If ([UserLogins]Name#"Sync") & ([UserLogins]Name#<>sCurrentUser)
QUERY([UserLogins];[UserLogins]Name=<>sCurrentUser)
End if 
vtKSSIntroLine:="Welcome to Kennards Self Storage, this is "+[UserLogins]ActualName+", may I ask who I am speaking with?"
End if 
If (Form event=On Validate)
If ([Contacts]CustType#Old([Contacts]CustType))
EmailMarketing (True)
End if 
If (Size of array(asFacilities)<2)
[Contacts]Facility:=<>sFacility
Else 
[Contacts]Facility:=asSiteCodes{asFacilities}
End if 
$FollowUpDate:=[Contacts]FollowUpDate
If ([Contacts]FollowUpDone) | ([Contacts]Outcome>"")
$FollowUpDate:=!00-00-00!
End if 
UpdateCalendar ($FollowUpDate;Old([Contacts]FollowUpDate);"Contact "+[Contacts]ContactName+", Followup "+[Contacts]ContactPhone)

If (([Contacts]ContactName#Old([Contacts]ContactName)) | ([Contacts]ContactPhone#Old([Contacts]ContactPhone))) & (Old([Contacts]ContactNo)#"")
UpdateCalendar ($FollowUpDate;Old([Contacts]FollowUpDate);"Contact "+[Contacts]ContactName+", Followup "+[Contacts]ContactPhone;"Contact "+Old([Contacts]ContactName)+", Followup "+Old([Contacts]ContactPhone))
End if 

If (Old([Contacts]CallTime)=?00:00:00?) & (Old([Contacts]CallDate)=!00-00-00!)//Add Mode - Check if time already exists to avoid duplicates
SET QUERY DESTINATION(Into variable;$i)
Repeat 
QUERY([Contacts];[Contacts]Facility=[Contacts]Facility;*)
QUERY([Contacts]; & ;[Contacts]CallDate=[Contacts]CallDate;*)
QUERY([Contacts]; & ;[Contacts]CallTime=[Contacts]CallTime)
If ($i>0)
[Contacts]CallTime:=[Contacts]CallTime+?00:00:01?
End if 
Until ($i=0)
SET QUERY DESTINATION(Into current selection)
End if 
READ ONLY([NotesHistory])
READ ONLY([Letters])
READ ONLY([Quote])
UNLOAD RECORD([NotesHistory])
UNLOAD RECORD([Letters])
UNLOAD RECORD([Quote])
End if 
//%attributes = {"publishedSoap":true,"publishedWsdl":true,"lang":"en"} comment added and reserved by 4D.

// ----------------------------------------------------
// User name (OS): robert.richardson
// Date and time: 08/04/10, 15:14:18
// API Version: 1.0
// ----------------------------------------------------
// Method: WS_CustomerLogin1
// Description
// Sends customer details to web site
//
// Parameters
//Customer username & password
// ----------------------------------------------------


SOAP DECLARATION(WS_Inputname;Is string var;SOAP input;"WS_Inputname")
SOAP DECLARATION(WS_Password;Is text;SOAP input)
SOAP DECLARATION(WS_WebServicePassword;Is text;SOAP input)

SOAP DECLARATION(WS_Login;Is Boolean;SOAP output;"WS_Login")
SOAP DECLARATION(WS_asRAgreeNo;String array;SOAP output;"WS_asRAgreeNo")
SOAP DECLARATION(WS_aiDaytoBill;Integer array;SOAP output;"WS_aiDaytoBill")
SOAP DECLARATION(WS_abSendNotices;Boolean array;SOAP output;"WS_abSendNotices")
SOAP DECLARATION(WS_aiNoticeDaysPrior;Integer array;SOAP output;"WS_aiNoticeDaysPrior")
SOAP DECLARATION(WS_abSendNoticesEmail;Boolean array;SOAP output;"WS_abSendNoticesEmail")
SOAP DECLARATION(WS_abSendNoticeSMS;Boolean array;SOAP output;"WS_abSendNoticeSMS")
SOAP DECLARATION(WS_abAutoPay;Boolean array;SOAP output;"WS_abAutoPay")
SOAP DECLARATION(WS_arAutoPayAmt;Real array;SOAP output;"WS_arAutoPayAmt")
SOAP DECLARATION(WS_aiAutoPayType;Integer array;SOAP output;"WS_aiAutoPayType")
SOAP DECLARATION(WS_adAuthCCSigned;Date array;SOAP output;"WS_adAuthCCSigned")
SOAP DECLARATION(WS_adAuthCCExpiry;Date array;SOAP output;"WS_adAuthCCExpiry")
SOAP DECLARATION(WS_adOutNoticeDate;Date array;SOAP output;"WS_adOutNoticeDate")
SOAP DECLARATION(WS_adMoveOut;Date array;SOAP output;"WS_adMoveOut")
SOAP DECLARATION(WS_arRentAmt;Real array;SOAP output;"WS_arRentAmt")
SOAP DECLARATION(WS_arNewRentAmt;Real array;SOAP output;"WS_arNewRentAmt")
SOAP DECLARATION(WS_adNewRentFrom;Date array;SOAP output;"WS_adNewRentFrom")
SOAP DECLARATION(WS_asUTRUnitNo;String array;SOAP output;"WS_asUTRUnitNo")
SOAP DECLARATION(WS_asUTAgreeNo;String array;SOAP output;"WS_asUTAgreeNo")
SOAP DECLARATION(WS_arUTInsureVal;Real array;SOAP output;"WS_arUTInsureVal")
SOAP DECLARATION(WS_arUTRentedValue;Real array;SOAP output;"WS_arUTRentedValue")
SOAP DECLARATION(WS_arUTNewRentAmt;Real array;SOAP output;"WS_arUTNewRentAmt")
SOAP DECLARATION(WS_adUTIncreaseFrom;Date array;SOAP output;"WS_adUTIncreaseFrom")
SOAP DECLARATION(WS_asORCDescription;String array;SOAP output;"WS_asORCDescription")
SOAP DECLARATION(WS_asORCAnalysis;String array;SOAP output;"WS_asORCAnalysis")
SOAP DECLARATION(WS_arORCAmount;Real array;SOAP output;"WS_arORCAmount")
SOAP DECLARATION(WS_arORCNewAmount;Real array;SOAP output;"WS_arORCNewAmount")
SOAP DECLARATION(WS_adORCIncreaseFrom;Date array;SOAP output;"WS_adORCIncreaseFrom")
SOAP DECLARATION(WS_asORCAgreeNo;String array;SOAP output;"WS_asORCAgreeNo")
SOAP DECLARATION(WS_asRReserveNo;String array;SOAP output;"WS_asRReserveNo")
SOAP DECLARATION(WS_adExpMoveIn;Date array;SOAP output;"WS_adExpMoveIn")
SOAP DECLARATION(WS_asUTResRUnitNo;String array;SOAP output;"WS_asUTResRUnitNo")
SOAP DECLARATION(WS_asUTReservedTo;String array;SOAP output;"WS_asUTReservedTo")
SOAP DECLARATION(WS_arUTQuotedRate;Real array;SOAP output;"WS_arUTQuotedRate")
SOAP DECLARATION(WS_asPCName;String array;SOAP output;"WS_asPCName")
SOAP DECLARATION(WS_asPCPINCardNo;String array;SOAP output;"WS_asPCPINCardNo")
SOAP DECLARATION(WS_Organization;Is Boolean;SOAP output;"WS_Organization")
SOAP DECLARATION(WS_Title;Is string var;SOAP output;"WS_Title")
SOAP DECLARATION(WS_CustomerName;Is string var;SOAP output;"WS_CustomerName")
SOAP DECLARATION(WS_FirstName;Is string var;SOAP output;"WS_FirstName")
SOAP DECLARATION(WS_DateofBirth;Is date;SOAP output;"WS_DateofBirth")
SOAP DECLARATION(WS_Username;Is string var;SOAP output;"WS_Username")
SOAP DECLARATION(WS_ABNNo;Is string var;SOAP output;"WS_ABNNo")
SOAP DECLARATION(WS_MailAddress;Is text;SOAP output;"WS_MailAddress")
SOAP DECLARATION(WS_MailSuburb;Is string var;SOAP output;"WS_MailSuburb")
SOAP DECLARATION(WS_MailCity;Is string var;SOAP output;"WS_MailCity")
SOAP DECLARATION(WS_MailState;Is string var;SOAP output;"WS_MailState")
SOAP DECLARATION(WS_MailPostZIPCode;Is string var;SOAP output;"WS_MailPostZIPCode")
SOAP DECLARATION(WS_MailCountry;Is string var;SOAP output;"WS_MailCountry")
SOAP DECLARATION(WS_StreetAddress;Is text;SOAP output;"WS_StreetAddress")
SOAP DECLARATION(WS_StreetSuburb;Is string var;SOAP output;"WS_StreetSuburb")
SOAP DECLARATION(WS_StreetCity;Is string var;SOAP output;"WS_StreetCity")
SOAP DECLARATION(WS_StreetState;Is string var;SOAP output;"WS_StreetState")
SOAP DECLARATION(WS_StreetZIPCode;Is string var;SOAP output;"WS_StreetZIPCode")
SOAP DECLARATION(WS_Country;Is string var;SOAP output;"WS_Country")
SOAP DECLARATION(WS_PhonePrivate;Is string var;SOAP output;"WS_PhonePrivate")
SOAP DECLARATION(WS_PhoneBus;Is string var;SOAP output;"WS_PhoneBus")
SOAP DECLARATION(WS_PhoneBusExt;Is string var;SOAP output;"WS_PhoneBusExt")
SOAP DECLARATION(WS_MobilePhone;Is string var;SOAP output;"WS_MobilePhone")
SOAP DECLARATION(WS_PrimaryPhone;Is integer;SOAP output;"WS_PrimaryPhone")
SOAP DECLARATION(WS_EmailAddress;Is string var;SOAP output;"WS_EmailAddress")
SOAP DECLARATION(WS_Employer;Is string var;SOAP output;"WS_Employer")
SOAP DECLARATION(WS_LicenceNo;Is string var;SOAP output;"WS_LicenceNo")
SOAP DECLARATION(WS_LicenseState;Is string var;SOAP output;"WS_LicenseState")
SOAP DECLARATION(WS_Vehicle;Is string var;SOAP output;"WS_Vehicle")
SOAP DECLARATION(WS_CarRego;Is string var;SOAP output;"WS_CarRego")
SOAP DECLARATION(WS_MarketSrce;Is string var;SOAP output;"WS_MarketSrce")
SOAP DECLARATION(WS_CustType;Is string var;SOAP output;"WS_CustType")
SOAP DECLARATION(WS_BusType;Is string var;SOAP output;"WS_BusType")
SOAP DECLARATION(WS_ReasonRenting;Is string var;SOAP output;"WS_ReasonRenting")
SOAP DECLARATION(WS_MarketingOptOut;Is Boolean;SOAP output;"WS_MarketingOptOut")
SOAP DECLARATION(WS_AltContact;Is text;SOAP output;"WS_AltContact")
SOAP DECLARATION(WS_AltTitle;Is string var;SOAP output;"WS_AltTitle")
SOAP DECLARATION(WS_AlternateName;Is string var;SOAP output;"WS_AlternateName")
SOAP DECLARATION(WS_AlternateAddress;Is text;SOAP output;"WS_AlternateAddress")
SOAP DECLARATION(WS_AltSuburb;Is string var;SOAP output;"WS_AltSuburb")
SOAP DECLARATION(WS_AlternateCity;Is string var;SOAP output;"WS_AlternateCity")
SOAP DECLARATION(WS_AlternateState;Is string var;SOAP output;"WS_AlternateState")
SOAP DECLARATION(WS_AlternateZIPCode;Is string var;SOAP output;"WS_AlternateZIPCode")
SOAP DECLARATION(WS_AltCountry;Is string var;SOAP output;"WS_AltCountry")
SOAP DECLARATION(WS_AlternatePhone;Is string var;SOAP output;"WS_AlternatePhone")
SOAP DECLARATION(WS_AltBusiness;Is string var;SOAP output;"WS_AltBusiness")
SOAP DECLARATION(WS_AltBusExt;Is string var;SOAP output;"WS_AltBusExt")
SOAP DECLARATION(WS_AltMobile;Is string var;SOAP output;"WS_AltMobile")
SOAP DECLARATION(WS_AltEmail;Is string var;SOAP output;"WS_AltEmail")
SOAP DECLARATION(WS_AutoEmailCC;Is Boolean;SOAP output;"WS_AutoEmailCC")
SOAP DECLARATION(WS_AccessList;Is text;SOAP output;"WS_AccessList")
SOAP DECLARATION(WS_CustomerID;Is string var;SOAP output;"WS_CustomerID")
SOAP DECLARATION(WS_FaxNo;Is string var;SOAP output;"WS_FaxNo")
SOAP DECLARATION(WS_Custom1;Is string var;SOAP output;"WS_Custom1")
SOAP DECLARATION(WS_Custom2;Is string var;SOAP output;"WS_Custom2")
SOAP DECLARATION(WS_Custom3;Is string var;SOAP output;"WS_Custom3")
SOAP DECLARATION(WS_Custom4;Is string var;SOAP output;"WS_Custom4")
SOAP DECLARATION(WS_customerProfileID;Is string var;SOAP output;"WS_customerProfileID")
SOAP DECLARATION(WS_customerPaymentProfID;Is string var;SOAP output;"WS_customerPaymentProfID")
SOAP DECLARATION(WS_CCNo;Is string var;SOAP output;"WS_CCNo")
SOAP DECLARATION(WS_CCExpiry;Is string var;SOAP output;"WS_CCExpiry")
SOAP DECLARATION(WS_CCName;Is string var;SOAP output;"WS_CCName")
SOAP DECLARATION(WS_CCValidFrom;Is string var;SOAP output;"WS_CCValidFrom")
SOAP DECLARATION(WS_BankAccountName;Is string var;SOAP output;"WS_BankAccountName")
SOAP DECLARATION(WS_BankAcct;Is string var;SOAP output;"WS_BankAcct")
SOAP DECLARATION(WS_BankName;Is string var;SOAP output;"WS_BankName")
SOAP DECLARATION(WS_BSB;Is string var;SOAP output;"WS_BSB")
SOAP DECLARATION(WS_GatePIN;Is text;SOAP output)
SOAP DECLARATION(WS_WebID;Is text;SOAP output)
SOAP DECLARATION(WS_adPTD;Date array;SOAP output;"WS_adPTD")
SOAP DECLARATION(WS_adMoveIn;Date array;SOAP output;"WS_adMoveIn")
SOAP DECLARATION(WS_adUTMoveIn;Date array;SOAP output;"WS_adUTMoveIn")
SOAP DECLARATION(WS_adNextBillDate;Date array;SOAP output;"WS_adNextBillDate")
SOAP DECLARATION(WS_adLastBillDate;Date array;SOAP output;"WS_adLastBillDate")
SOAP DECLARATION(WS_adLastBillAmt;Real array;SOAP output;"WS_adLastBillAmt")
SOAP DECLARATION(WS_arBalOwing;Real array;SOAP output;"WS_arBalOwing")
SOAP DECLARATION(WS_adReservedDate;Date array;SOAP output;"WS_adReservedDate")
SOAP DECLARATION(WS_arBalance;Real array;SOAP output;"WS_arBalance")
SOAP DECLARATION(WS_adUTSize;Real array;SOAP output;"WS_adUTSize")

SOAP DECLARATION(WS_ORSuccess;Is Boolean;SOAP output)
SOAP DECLARATION(WS_ORErrorCode;Is integer;SOAP output)
SOAP DECLARATION(WS_ORErrorDescription;Is string var;SOAP output)
SOAP DECLARATION(WS_PhotoIDType;Is text;SOAP output)
SOAP DECLARATION(WS_SecondCust;Is text;SOAP output)


//Clear Variables before running method.
WS_ORSuccess:=True
WS_ORErrorCode:=0
WS_ORErrorDescription:=""

$String:="Start WS_CustomerLogin"+Char(13)
$String:=$String+"WS_Inputname: "+WS_Inputname+Char(13)
C_TEXT($pass)
$pass:=WS_WebServicePassword
$pass:=Replace string($pass;Substring($pass;1;Length($pass)-2);"X"*(Length($pass)-2))
$String:=$String+"WS_WebServicePassword: "+$pass+Char(13)
$String:=$String+"WS_Password: "+WS_Password+Char(13)
WSRecordLog ($String)


WS_Login:=False
WS_Organization:=False
WS_Title:=""
WS_CustomerName:=""
WS_FirstName:=""
WS_DateofBirth:=!00-00-00!
WS_Username:=""
WS_ABNNo:=""
WS_MailAddress:=""
WS_MailSuburb:=""
WS_MailCity:=""
WS_MailState:=""
WS_MailPostZIPCode:=""
WS_MailCountry:=""
WS_StreetAddress:=""
WS_StreetSuburb:=""
WS_StreetCity:=""
WS_StreetState:=""
WS_StreetZIPCode:=""
WS_Country:=""
WS_PhonePrivate:=""
WS_PhoneBus:=""
WS_PhoneBusExt:=""
WS_MobilePhone:=""
WS_PrimaryPhone:=0
WS_EmailAddress:=""
WS_Employer:=""
WS_LicenceNo:=""
WS_LicenseState:=""
WS_Vehicle:=""
WS_CarRego:=""
WS_MarketSrce:=""
WS_CustType:=""
WS_BusType:=""
WS_ReasonRenting:=""
WS_MarketingOptOut:=False
WS_AltContact:=""
WS_AltTitle:=""
WS_AlternateName:=""
WS_AlternateAddress:=""
WS_AltSuburb:=""
WS_AlternateCity:=""
WS_AlternateState:=""
WS_AlternateZIPCode:=""
WS_AltCountry:=""
WS_AlternatePhone:=""
WS_AltBusiness:=""
WS_AltBusExt:=""
WS_AltMobile:=""
WS_AltEmail:=""
WS_AutoEmailCC:=False
WS_AccessList:=""
WS_CustomerID:=""
WS_FaxNo:=""
WS_Custom1:=""
WS_Custom2:=""
WS_Custom3:=""
WS_Custom4:=""
WS_customerProfileID:=""
WS_customerPaymentProfID:=""
WS_CCNo:=""
WS_CCExpiry:=""
WS_CCName:=""
WS_CCValidFrom:=""
WS_BankAccountName:=""
WS_BankAcct:=""
WS_BankName:=""
WS_BSB:=""
WS_GatePIN:=""
WS_WebID:=""
WS_PhotoIDType:=""
WS_SecondCust:=False


QUERY([Facility];[Facility]FacilityCode=Substring(WS_Inputname;1;5))

If (([Facility]ODBCPassword=WS_WebServicePassword) & ([Facility]ODBCPassword#"")) | ([Facility]FacilityCode="ALASA")// second condition is for iPad to work on Onehunga All Secure

QUERY([Customer];[Customer]CustomerCode=WS_Inputname)

If (Records in selection([Customer])=1)
If ([Customer]Password=WS_Password)
WS_CustomerID:=[Customer]CustomerCode

//WS_OLD=WS_Login:=True
WS_ORSuccess:=True
WS_ORErrorCode:=0
WS_ORErrorDescription:=""
//WS_ORErrorDescription:="Customer successfully logged in."

QUERY([Agreement];[Agreement]CustomerCode=[Customer]CustomerCode;*)
QUERY([Agreement]; & ;[Agreement]ActiveAgreemt=True)
SELECTION TO ARRAY([Agreement]RAgreeNo;WS_asRAgreeNo;[Agreement]DaytoBill;WS_aiDaytoBill;[Agreement]SendNotices;\
WS_abSendNotices;[Agreement]NoticeDaysPrior;WS_aiNoticeDaysPrior;[Agreement]SendNoticesEmail;WS_abSendNoticesEmail;\
[Agreement]SendNoticeSMS;WS_abSendNoticeSMS;[Agreement]AutoPay;WS_abAutoPay;[Agreement]AutoPayAmt;WS_arAutoPayAmt;\
[Agreement]AutoPayType;WS_aiAutoPayType;[Agreement]AuthCCSigned;WS_adAuthCCSigned;[Agreement]AuthCCExpiry;WS_adAuthCCExpiry;\
[Agreement]OutNoticeDate;WS_adOutNoticeDate;[Agreement]MoveOut;WS_adMoveOut;[Agreement]RentAmt;WS_arRentAmt;\
[Agreement]NewRentAmt;WS_arNewRentAmt;[Agreement]NewRentFrom;WS_adNewRentFrom;[Agreement]PaidToDate;WS_adPTD;\
[Agreement]MoveIn;WS_adMoveIn;[Agreement]NextBillDate;WS_adNextBillDate;[Agreement]LastBillDate;WS_adLastBillDate;\
[Agreement]LastBillAmt;WS_adLastBillAmt;[Agreement]BalanceOwing;WS_arBalOwing)

For ($i;1;Size of array(WS_asRAgreeNo))

QUERY([Unit];[Unit]AgreeNo=WS_asRAgreeNo{$i})
For ($j;1;Records in selection([Unit]))
APPEND TO ARRAY(WS_asUTRUnitNo;[Unit]RUnitNo)
APPEND TO ARRAY(WS_asUTAgreeNo;[Unit]AgreeNo)
APPEND TO ARRAY(WS_arUTInsureVal;[Unit]InsureValue)
APPEND TO ARRAY(WS_arUTRentedValue;[Unit]RentedValue)
APPEND TO ARRAY(WS_arUTNewRentAmt;[Unit]NewRentAmt)
APPEND TO ARRAY(WS_adUTIncreaseFrom;[Unit]IncreaseFrom)
APPEND TO ARRAY(WS_adUTMoveIn;[Unit]MoveIn)
APPEND TO ARRAY(WS_adUTSize;[Unit]UnitSize)
NEXT RECORD([Unit])
End for 

QUERY([OtherChgs];[OtherChgs]AgreeNo=WS_asRAgreeNo{$i})
For ($k;1;Records in selection([OtherChgs]))
APPEND TO ARRAY(WS_asORCDescription;[OtherChgs]Description)
QUERY([Analysis];[Analysis]Code=[OtherChgs]AnalysisCode)
APPEND TO ARRAY(WS_asORCAnalysis;[Analysis]Description)
APPEND TO ARRAY(WS_arORCAmount;[OtherChgs]Amount)
APPEND TO ARRAY(WS_arORCNewAmount;[OtherChgs]NewAmount)
APPEND TO ARRAY(WS_adORCIncreaseFrom;[OtherChgs]IncreaseFrom)
APPEND TO ARRAY(WS_asORCAgreeNo;[OtherChgs]AgreeNo)
NEXT RECORD([OtherChgs])
End for 
WS_arNextDueAmt:=Round([Agreement]RentAmt+Sum([OtherChgs]Amount);2)

End for 

QUERY([Reservation];[Reservation]CustomerCode=[Customer]CustomerCode;*)
QUERY([Reservation]; & ;[Reservation]ActiveReserve=True)
SELECTION TO ARRAY([Reservation]RReserveNo;WS_asRReserveNo;[Reservation]ExpMoveIn;WS_adExpMoveIn;\
[Reservation]ReservedDate;WS_adReservedDate;[Reservation]Balance;WS_arBalance)

For ($i;1;Size of array(WS_asRReserveNo))
QUERY([Unit];[Unit]ReservedTo=WS_asRReserveNo{$i})

If (Records in selection([Unit])>0)
For ($j;1;Records in selection([Unit]))
APPEND TO ARRAY(WS_asUTResRUnitNo;[Unit]RUnitNo)
APPEND TO ARRAY(WS_asUTReservedTo;[Unit]ReservedTo)
APPEND TO ARRAY(WS_arUTQuotedRate;[Unit]QuotedRate)
NEXT RECORD([Unit])
End for 
Else 
APPEND TO ARRAY(WS_asUTResRUnitNo;"")
APPEND TO ARRAY(WS_asUTReservedTo;"")
APPEND TO ARRAY(WS_arUTQuotedRate;0)
End if 
End for 

QUERY([PhotosCards];[PhotosCards]Code=[Customer]CustomerCode;*)
QUERY([PhotosCards]; & ;[PhotosCards]Size=0)
SELECTION TO ARRAY([PhotosCards]Name;WS_asPCName;[PhotosCards]PINCardNo;WS_asPCPINCardNo)
WS_Organization:=[Customer]Organization
WS_Title:=[Customer]Title
WS_CustomerName:=[Customer]CustomerName
WS_FirstName:=[Customer]FirstName
WS_DateofBirth:=[Customer]DateofBirth
WS_Username:=[Customer]UserName
WS_ABNNo:=[Customer]ABNNo
WS_MailAddress:=[Customer]MailAddress
WS_MailSuburb:=[Customer]MailSuburb
WS_MailCity:=[Customer]MailCity
WS_MailState:=[Customer]MailState
WS_MailPostZIPCode:=[Customer]MailPostZIPCode
WS_MailCountry:=[Customer]MailCountryCode
WS_StreetAddress:=[Customer]StreetAddress
WS_StreetSuburb:=[Customer]StreetSuburb
WS_StreetCity:=[Customer]StreetCity
WS_StreetState:=[Customer]StreetState
WS_StreetZIPCode:=[Customer]StreetZIPCode
WS_Country:=[Customer]CountryCode
WS_PhonePrivate:=[Customer]PhonePrivate
WS_PhoneBus:=[Customer]PhoneBus
WS_PhoneBusExt:=[Customer]PhoneBusExt
WS_MobilePhone:=[Customer]MobilePhone
WS_PrimaryPhone:=[Customer]PrimaryPhone
WS_EmailAddress:=[Customer]EmailAddress
WS_Employer:=[Customer]Employer
WS_LicenceNo:=[Customer]LicenceNo
WS_LicenseState:=[Customer]LicenseState
WS_Vehicle:=[Customer]Vehicle
WS_CarRego:=[Customer]CarRego
WS_MarketSrce:=[Customer]MarketSrce
WS_CustType:=[Customer]CustType
WS_BusType:=[Customer]BusType
WS_ReasonRenting:=[Customer]ReasonRenting
WS_MarketingOptOut:=[Customer]MarketingOptOut
WS_AltContact:=[Customer]AltContact
WS_AltTitle:=[Customer]AltTitle
WS_AlternateName:=[Customer]AlternateName
WS_AlternateAddress:=[Customer]AlternateAddress
WS_AltSuburb:=[Customer]AltSuburb
WS_AlternateCity:=[Customer]AlternateCity
WS_AlternateState:=[Customer]AlternateState
WS_AlternateZIPCode:=[Customer]AlternateZIPCode
WS_AltCountry:=[Customer]AltCountryCode
WS_AlternatePhone:=[Customer]AlternatePhone
WS_AltBusiness:=[Customer]AltBusiness
WS_AltBusExt:=[Customer]AltBusExt
WS_AltMobile:=[Customer]AltMobile
WS_AltEmail:=[Customer]AltEmail
WS_AutoEmailCC:=[Customer]AutoEmailCC
WS_AccessList:=[Customer]AccessList
WS_FaxNo:=[Customer]FaxNo
WS_Custom1:=[Customer]Custom1
WS_Custom2:=[Customer]Custom2
WS_Custom3:=[Customer]Custom3
WS_Custom4:=[Customer]Custom4
WS_customerProfileID:=[Customer]customerProfileID
WS_customerPaymentProfID:=[Customer]custPaymentProfID
WS_CCNo:=Decode256 
//WS_CCNo:="000000000000"+Substring([Customer]CCNo;(Length([Customer]CCNo)-4))
//[Customer]CCNo:=Tokenizer ([Customer]CCNo;True)
WS_CCExpiry:=[Customer]CCExpiry
WS_CCName:=[Customer]CCName
WS_CCValidFrom:=[Customer]CCValidFrom
WS_BankAccountName:=[Customer]BankAccountName
WS_BankAcct:=[Customer]BankAcct
WS_BankName:=[Customer]BankName
WS_BSB:=[Customer]BSB
WS_GatePIN:=[Customer]GatePIN
WS_WebID:=[Customer]WebID
WS_PhotoIDType:=[Customer]IDType
WS_SecondCust:=[Customer]AltStatus
Else 
//WS_OLD=WS_CustomerID:="Invalid Customer Password"
//WS_OLD=WS_Login:=False
WS_ORSuccess:=False
WS_ORErrorCode:=1029
WS_ORErrorDescription:="Invalid Customer password."
End if 
Else 
//WS_OLD=WS_CustomerID:="Invalid Customer Code"
//WS_OLD=WS_Login:=False
WS_ORSuccess:=False
WS_ORErrorCode:=1012
WS_ORErrorDescription:="Customer record not found in database Storman."
End if 
Else 
//WS_OLD=WS_CustomerID:="Invalid Web Service Password"
//WS_OLD=WS_Login:=False
WS_ORSuccess:=False
WS_ORErrorCode:=1099
WS_ORErrorDescription:="Web Service Password is incorrect."
End if 

//11/07/13 DAM Added to release [Customer] record
READ ONLY([Customer])
UNLOAD RECORD([Customer])

WSRecordLog ("Locked= "+String(Locked([Customer]))+" Records in Selection= "+String(Records in selection([Customer])))
$String:="End WS_CustomerLogin"+Char(13)
$sizeofarray:=Size of array(WS_asRAgreeNo)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_asRAgreeNo("+String($vlElem)+"):"+WS_asRAgreeNo{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_aiDaytoBill)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_aiDaytoBill("+String($vlElem)+"):"+String(WS_aiDaytoBill{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_abSendNotices)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_abSendNotices("+String($vlElem)+"):"+String(WS_abSendNotices{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_aiNoticeDaysPrior)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_aiNoticeDaysPrior("+String($vlElem)+"):"+String(WS_aiNoticeDaysPrior{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_abSendNoticesEmail)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_abSendNoticesEmail("+String($vlElem)+"):"+String(WS_abSendNoticesEmail{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_abSendNoticeSMS)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_abSendNoticeSMS("+String($vlElem)+"):"+String(WS_abSendNoticeSMS{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_abAutoPay)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_abAutoPay("+String($vlElem)+"):"+String(WS_abAutoPay{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_arAutoPayAmt)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_arAutoPayAmt("+String($vlElem)+"):"+String(WS_arAutoPayAmt{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_aiAutoPayType)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_aiAutoPayType("+String($vlElem)+"):"+String(WS_aiAutoPayType{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_adAuthCCSigned)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_adAuthCCSigned("+String($vlElem)+"):"+String(WS_adAuthCCSigned{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_adAuthCCExpiry)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_adAuthCCExpiry("+String($vlElem)+"):"+String(WS_adAuthCCExpiry{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_adOutNoticeDate)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_adOutNoticeDate("+String($vlElem)+"):"+String(WS_adOutNoticeDate{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_adMoveOut)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_adMoveOut("+String($vlElem)+"):"+String(WS_adMoveOut{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_arRentAmt)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_arRentAmt("+String($vlElem)+"):"+String(WS_arRentAmt{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_arNewRentAmt)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_arNewRentAmt("+String($vlElem)+"):"+String(WS_arNewRentAmt{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_adNewRentFrom)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_adNewRentFrom("+String($vlElem)+"):"+String(WS_adNewRentFrom{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_asUTRUnitNo)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_asUTRUnitNo("+String($vlElem)+"):"+String(WS_asUTRUnitNo{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_asUTAgreeNo)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_asUTAgreeNo("+String($vlElem)+"):"+WS_asUTAgreeNo{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_arUTInsureVal)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_arUTInsureVal("+String($vlElem)+"):"+String(WS_arUTInsureVal{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_arUTRentedValue)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_arUTRentedValue("+String($vlElem)+"):"+String(WS_arUTRentedValue{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_arUTNewRentAmt)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_arUTNewRentAmt("+String($vlElem)+"):"+String(WS_arUTNewRentAmt{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_adUTIncreaseFrom)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_adUTIncreaseFrom("+String($vlElem)+"):"+String(WS_adUTIncreaseFrom{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_asORCDescription)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_asORCDescription("+String($vlElem)+"):"+WS_asORCDescription{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_asORCAnalysis)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_asORCAnalysis("+String($vlElem)+"):"+WS_asORCAnalysis{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_arORCAmount)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_arORCAmount("+String($vlElem)+"):"+String(WS_arORCAmount{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_arORCNewAmount)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_arORCNewAmount("+String($vlElem)+"):"+String(WS_arORCNewAmount{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_adORCIncreaseFrom)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_adORCIncreaseFrom("+String($vlElem)+"):"+String(WS_adORCIncreaseFrom{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_asORCAgreeNo)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_asORCAgreeNo("+String($vlElem)+"):"+WS_asORCAgreeNo{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_asRReserveNo)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_asRReserveNo("+String($vlElem)+"):"+WS_asRReserveNo{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_adExpMoveIn)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_adExpMoveIn("+String($vlElem)+"):"+String(WS_adExpMoveIn{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_asUTResRUnitNo)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_asUTResRUnitNo("+String($vlElem)+"):"+WS_asUTResRUnitNo{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_asUTReservedTo)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_asUTReservedTo("+String($vlElem)+"):"+WS_asUTReservedTo{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_arUTQuotedRate)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_arUTQuotedRate("+String($vlElem)+"):"+String(WS_arUTQuotedRate{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_asPCName)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_asPCName("+String($vlElem)+"):"+WS_asPCName{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_asPCPINCardNo)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_asPCPINCardNo("+String($vlElem)+"):"+WS_asPCPINCardNo{$vlElem}+Char(13)
End for 
$String:=$String+"WS_Organization :"+String(WS_Organization)+Char(13)

$String:=$String+"WS_Title: "+WS_Title+Char(13)
$String:=$String+"WS_CustomerName: "+WS_CustomerName+Char(13)
$String:=$String+"WS_FirstName: "+WS_FirstName+Char(13)
$String:=$String+"WS_DateofBirth: "+String(WS_DateofBirth)+Char(13)
$String:=$String+"WS_Username: "+WS_Username+Char(13)
$String:=$String+"WS_ABNNo: "+WS_ABNNo+Char(13)
$String:=$String+"WS_MailAddress: "+WS_MailAddress+Char(13)
$String:=$String+"WS_MailSuburb: "+WS_MailSuburb+Char(13)
$String:=$String+"WS_MailCity: "+WS_MailCity+Char(13)
$String:=$String+"WS_MailState: "+WS_MailState+Char(13)
$String:=$String+"WS_MailPostZIPCode: "+WS_MailPostZIPCode+Char(13)
$String:=$String+"WS_MailCountry: "+WS_MailCountry+Char(13)
$String:=$String+"WS_StreetAddress: "+WS_StreetAddress+Char(13)
$String:=$String+"WS_StreetSuburb: "+WS_StreetSuburb+Char(13)
$String:=$String+"WS_StreetCity: "+WS_StreetCity+Char(13)
$String:=$String+"WS_StreetState: "+WS_StreetState+Char(13)
$String:=$String+"WS_StreetZIPCode: "+WS_StreetZIPCode+Char(13)
$String:=$String+"WS_Country: "+WS_Country+Char(13)
$String:=$String+"WS_PhonePrivate: "+WS_PhonePrivate+Char(13)
$String:=$String+"WS_PhoneBus: "+WS_PhoneBus+Char(13)
$String:=$String+"WS_PhoneBusExt: "+WS_PhoneBusExt+Char(13)
$String:=$String+"WS_MobilePhone: "+WS_MobilePhone+Char(13)
$String:=$String+"WS_PrimaryPhone: "+String(WS_PrimaryPhone)+Char(13)
$String:=$String+"WS_EmailAddress: "+WS_EmailAddress+Char(13)
$String:=$String+"WS_Employer: "+WS_Employer+Char(13)
$String:=$String+"WS_LicenceNo: "+WS_LicenceNo+Char(13)
$String:=$String+"WS_LicenseState: "+WS_LicenseState+Char(13)
$String:=$String+"WS_Vehicle: "+WS_Vehicle+Char(13)
$String:=$String+"WS_CarRego: "+WS_CarRego+Char(13)
$String:=$String+"WS_MarketSrce: "+WS_MarketSrce+Char(13)
$String:=$String+"WS_CustType: "+WS_CustType+Char(13)
$String:=$String+"WS_BusType: "+WS_BusType+Char(13)
$String:=$String+"WS_ReasonRenting: "+WS_ReasonRenting+Char(13)
$String:=$String+"WS_MarketingOptOut: "+String(WS_MarketingOptOut)+Char(13)
$String:=$String+"WS_AltContact: "+WS_AltContact+Char(13)
$String:=$String+"WS_AltTitle: "+WS_AltTitle+Char(13)
$String:=$String+"WS_AlternateName: "+WS_AlternateName+Char(13)
$String:=$String+"WS_AlternateAddress: "+WS_AlternateAddress+Char(13)
$String:=$String+"WS_AltSuburb: "+WS_AltSuburb+Char(13)
$String:=$String+"WS_AlternateCity: "+WS_AlternateCity+Char(13)
$String:=$String+"WS_AlternateState: "+WS_AlternateState+Char(13)
$String:=$String+"WS_AlternateZIPCode: "+WS_AlternateZIPCode+Char(13)
$String:=$String+"WS_AltCountry: "+WS_AltCountry+Char(13)
$String:=$String+"WS_AlternatePhone: "+WS_AlternatePhone+Char(13)
$String:=$String+"WS_AltBusiness: "+WS_AltBusiness+Char(13)
$String:=$String+"WS_AltBusExt: "+WS_AltBusExt+Char(13)
$String:=$String+"WS_AltMobile: "+WS_AltMobile+Char(13)
$String:=$String+"WS_AltEmail: "+WS_AltEmail+Char(13)
$String:=$String+"WS_AutoEmailCC: "+String(WS_AutoEmailCC)+Char(13)
$String:=$String+"WS_AccessList: "+WS_AccessList+Char(13)
$String:=$String+"WS_CustomerID: "+WS_CustomerID+Char(13)
$String:=$String+"WS_FaxNo: "+WS_FaxNo+Char(13)
$String:=$String+"WS_Custom1: "+WS_Custom1+Char(13)
$String:=$String+"WS_Custom2: "+WS_Custom2+Char(13)
$String:=$String+"WS_Custom3: "+WS_Custom3+Char(13)
$String:=$String+"WS_Custom4: "+WS_Custom4+Char(13)
$String:=$String+"WS_customerProfileID: "+WS_customerProfileID+Char(13)
$String:=$String+"WS_customerPaymentProfID: "+WS_customerPaymentProfID+Char(13)
$String:=$String+"WS_CCNo: "+WS_CCNo+Char(13)
$String:=$String+"WS_CCExpiry: "+WS_CCExpiry+Char(13)
$String:=$String+"WS_CCName: "+WS_CCName+Char(13)
$String:=$String+"WS_CCValidFrom: "+WS_CCValidFrom+Char(13)
$String:=$String+"WS_BankAccountName: "+WS_BankAccountName+Char(13)
$String:=$String+"WS_BankAcct: "+WS_BankAcct+Char(13)
$String:=$String+"WS_BankName: "+WS_BankName+Char(13)
$String:=$String+"WS_BSB: "+WS_BSB+Char(13)
$String:=$String+"WS_GatePIN: "+WS_GatePIN+Char(13)
$String:=$String+"WS_WebID: "+WS_WebID+Char(13)
$vlElem:=1
$sizeofarray:=Size of array(WS_adPTD)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_adPTD("+String($vlElem)+"):"+String(WS_adPTD{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_adMoveIn)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_adMoveIn("+String($vlElem)+"):"+String(WS_adMoveIn{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_adUTMoveIn)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_adUTMoveIn("+String($vlElem)+"):"+String(WS_adUTMoveIn{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_adNextBillDate)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_adNextBillDate("+String($vlElem)+"):"+String(WS_adNextBillDate{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_adLastBillDate)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_adLastBillDate("+String($vlElem)+"):"+String(WS_adLastBillDate{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_adLastBillAmt)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_adLastBillAmt("+String($vlElem)+"):"+String(WS_adLastBillAmt{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_arBalOwing)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_arBalOwing("+String($vlElem)+"):"+String(WS_arBalOwing{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_adReservedDate)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_adReservedDate("+String($vlElem)+"):"+String(WS_adReservedDate{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_arBalance)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_arBalance("+String($vlElem)+"):"+String(WS_arBalance{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_adUTSize)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_adUTSize("+String($vlElem)+"):"+String(WS_adUTSize{$vlElem})+Char(13)
End for 
$String:=$String+"WS_ORSuccess: "+String(WS_ORSuccess)+Char(13)
$String:=$String+"WS_ORErrorCode: "+String(WS_ORErrorCode)+Char(13)
$String:=$String+"WS_ORErrorDescription: "+WS_ORErrorDescription+Char(13)
WSRecordLog ($String)


ReadOnlyAll 
UnloadAll 

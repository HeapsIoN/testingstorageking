//%attributes = {"lang":"en"} comment added and reserved by 4D.
SyncRecordLog ("Storman Update: AU_UpdateInstaller: Start";"UpdateLog")
// ----------------------------------------------------
// User name (OS): jonathon.wildon
// Date and time: 27/01/16, 14:07:30
// ----------------------------------------------------
// Method: AU_UpdateInstaller
// Description
// 
// This is the method that runs the actual updating process.
//
// FB10273
// Parameters
// ----------------------------------------------------

C_BOOLEAN($Continue;$1;$Overnight)

If (Records in selection([Facility])=0)
If (<>sFacility="ST@")
QUERY([Facility];[Facility]FacilityCode="STHOF")
Else 
SetFacility 
End if 
End if 


If (Count parameters=1)
//this has come logmonloop overnight so we want to be silent
$Overnight:=True
$Continue:=True
SyncRecordLog ("Storman Update: AU_UpdateInstaller: Overnight";"UpdateLog")
End if 


$UpdateFolder:="Storman"
$Result:=""
$Update:=""




If (AU_Backup (True))
$Continue:=True
Else 
//ConfirmTwo ("Storman was unable to complete the backup. It is strongly recommended to backup your data before updating. Would you like to update anyway?")
//If (ok=1)
//$Continue:=True
//SyncRecordLog ("Storman Update: AU_UpdateInstaller: Backup failed user continued";"UpdateLog")
//Else 
$Continue:=False
//SyncRecordLog ("Storman Update: AU_UpdateInstaller: Backup failed user aborted";"UpdateLog")
//End if 
End if 


//If (AU_VerifyDatabase )
//$Continue:=True
//Else 
//AlertMessage ("Storman was unable to verify your datafile, and it may need to be repaired. Please contact Storman Support.")
//$Continue:=False
//End if 



//If (Test path name([Facility]DownloadFolder)#Is a folder)
//$Continue:=False
//AlertMessage ("The Storman autoupdate folder could not be found, or is invalid. Automatic updates cannot be downloaded! Please check this in System Setup.")
//SyncRecordLog ("Storman Update: AU_UpdateInstaller - AU_AutoUpdate ERROR: Unable to create path for update";"UpdateLog")
//Else 
//$Continue:=True
//End if 


//$UpdateFolder:=Replace string([OLDFacility_PrintLogSettings]Name;"10017.zip";"")
//$UpdateFolder:="Storman"

If ($Continue=True)
$WinRef:=Open window(20;50;450;150;0;"Updating StorMan")
GOTO XY(2;2)
MESSAGE("Please wait while the update is extracted...")

If (<>tClient)
$Q:=Execute on server("AU_UnzipServer";400000;"AU_UnzipServer")
Else 
$Continue:=AU_Unzip 


If ($Continue)

Repeat 
//part 2
//need to add ability to cancel
Until (Test path name([Facility]DownloadFolder+$UpdateFolder)=Is a folder) | (Test path name([Facility]DownloadFolder+"Storman.4DC")=Is a document)

End if 
End if 

CLOSE WINDOW($WinRef)


If (Test path name([Facility]DownloadFolder+$UpdateFolder)=Is a folder)

SyncRecordLog ("Storman Update: AU_UpdateInstaller: Update extract success!";"UpdateLog")

If (Application type#4D Remote mode) & ($Overnight=False)
AlertMessage ("Extract complete!")
End if 

Else 

If (Test path name([Facility]DownloadFolder+"Storman.4DC")=Is a document)

If (<>tClient)
$Q:=Execute on server("AU_CopyInstallationServer";400000;"AU_CopyInstallationServer")
$Continue:=True
Else 

$WinRef:=Open window(20;50;450;150;0;"Updating Storman")
GOTO XY(2;2)
MESSAGE("Please wait preparing update...")

AU_CopyInstallation 

//If (Test path name([Facility]DownloadFolder+Folder separator+"Extra")=Is a folder)
//AU_AddPlugin 
//End if 

$4DC:=[Facility]DownloadFolder+"Storman.4DC"
$4DIndy:=[Facility]DownloadFolder+"Storman.4DIndy"
$NewBuild:=[Facility]DownloadFolder+$UpdateFolder+Folder separator+"Database"+Folder separator

SyncRecordLog ("Storman Update: AU_CopyInstallation: Installing new strucutre "+$4DC;"UpdateLog")
SyncRecordLog ("Storman Update: AU_CopyInstallation: Installing new strucutre "+$4DIndy;"UpdateLog")
SyncRecordLog ("Storman Update: AU_CopyInstallation: Installing new strucutre to "+$NewBuild;"UpdateLog")

COPY DOCUMENT($4DC;$NewBuild;*)
COPY DOCUMENT($4DIndy;$NewBuild;*)

DELETE DOCUMENT($4DC)
DELETE DOCUMENT($4DIndy)
$Continue:=True
End if 

Else 
SyncRecordLog ("Storman Update: AU_UpdateInstaller: Update extract failed!";"UpdateLog")
AlertMessage ("Extract failed!")
$Continue:=False
End if 

End if 


If ($Continue=True)

//If (Records in selection([OLDFacility_PrintLogSettings])=0)
//QUERY([OLDFacility_PrintLogSettings];[OLDFacility_PrintLogSettings]Name=[Facility]FacilityCode)
//End if 

//Update Statuses
//0 = No Update
//1 = Update downloaded and ready to install
//2 = Update has been installed
//3 = Update ready to download

If (Locked([AutoUpdates]))
SyncRecordLog ("Storman Update: AU_UpdateInstaller: [AutoUpdates] record locked";"UpdateLog")
UNLOAD RECORD([AutoUpdates])
End if 

If (Records in selection([Facility])=0)
If (<>sFacility="ST@")
QUERY([Facility];[Facility]FacilityCode="STHOF")
Else 
SetFacility 
End if 
End if 

//If (Records in selection([AutoUpdates])=0)
QUERY([AutoUpdates];[AutoUpdates]FacilityCode=[Facility]FacilityCode)
//End if 

SyncRecordLog ("Storman Update: AU_UpdateInstaller: [AutoUpdates]UpdateStatus: "+String([AutoUpdates]UpdateStatus);"UpdateLog")
SyncRecordLog ("Storman Update: AU_UpdateInstaller: [AutoUpdates]FacilityCode: "+String([AutoUpdates]FacilityCode);"UpdateLog")
SyncRecordLog ("Storman Update: AU_UpdateInstaller: [AutoUpdates]NextVersion: "+String([AutoUpdates]NextVersion);"UpdateLog")
SyncRecordLog ("Storman Update: AU_UpdateInstaller: [AutoUpdates]OldVersion: "+String([AutoUpdates]OldVersion);"UpdateLog")
SyncRecordLog ("Storman Update: AU_UpdateInstaller: [AutoUpdates]UpdateReady: "+String([AutoUpdates]UpdateReady);"UpdateLog")
SyncRecordLog ("Storman Update: AU_UpdateInstaller: [AutoUpdates]UpdateFile: "+String([AutoUpdates]UpdateFile);"UpdateLog")

READ WRITE([AutoUpdates])
[AutoUpdates]UpdateStatus:=2
[AutoUpdates]OldVersion:=String(<>iVersion)
[AutoUpdates]UpdateReady:=False//this means installer has run
SAVE RECORD([AutoUpdates])

SyncRecordLog ("Storman Update: AU_UpdateInstaller: [AutoUpdates]UpdateStatus: "+String([AutoUpdates]UpdateStatus);"UpdateLog")
SyncRecordLog ("Storman Update: AU_UpdateInstaller: [AutoUpdates]FacilityCode: "+String([AutoUpdates]FacilityCode);"UpdateLog")
SyncRecordLog ("Storman Update: AU_UpdateInstaller: [AutoUpdates]NextVersion: "+String([AutoUpdates]NextVersion);"UpdateLog")
SyncRecordLog ("Storman Update: AU_UpdateInstaller: [AutoUpdates]OldVersion: "+String([AutoUpdates]OldVersion);"UpdateLog")
SyncRecordLog ("Storman Update: AU_UpdateInstaller: [AutoUpdates]UpdateReady: "+String([AutoUpdates]UpdateReady);"UpdateLog")
SyncRecordLog ("Storman Update: AU_UpdateInstaller: [AutoUpdates]UpdateFile: "+String([AutoUpdates]UpdateFile);"UpdateLog")

CLOSE WINDOW($WinRef)

If ($Overnight=True)
Else 
AlertMessage ("Storman will now restart to complete the update")
End if 

If (<>tClient)
$Q:=Execute on server("AU_UpdateInstallerServer";400000;"AU_UpdateInstallerServer")
Else 

$LastUpdateLogPath:=Get last update log path

SET UPDATE FOLDER([Facility]DownloadFolder+$UpdateFolder;False)
SyncRecordLog ("Storman Update: AU_UpdateInstaller: Update folder set to: "+[Facility]DownloadFolder+$UpdateFolder;"UpdateLog")

SyncRecordLog ("Storman Update: AU_UpdateInstaller: Storman restarted to complete the update";"UpdateLog")
RESTART 4D

End if 


End if 

Else 
CLOSE WINDOW($WinRef)
// Else 
//AlertMessage ("The StorMan update was unable to be extracted. Please contact our Support Team!")
End if 


//*********************
//The scenario for updating a server or merged single-user application:
//1)Transfer, for example using an FTP server, the new version of the server app-user application onto the machine in production.
//2)Call the SET UPDATE FOLDER command:
//this command designates the location of the folder where the "pending" update of the current application is found.
//3) In the application in production, call the RESTART 4D command: 
//this command triggers execution of a utility program named "updater" that exits the current application, replaces it using the "pending" update if one is specified, 
//and restarts the application with the current data file. The former version is renamed.



//8000 - unable to be downlaoded
//8001 - unable to be extracted
SyncRecordLog ("Storman Update: AU_UpdateInstaller: End";"UpdateLog")
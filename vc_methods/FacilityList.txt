//%attributes = {"lang":"en"} comment added and reserved by 4D.
//Identified by Sanity Check as invalid because method is not a Form method or Object script 
//If (Form event=On Display Detail )
//If ([Facility]FacilityCode=◊sHOFacility)
//[Facility]VersionDate:=◊dCompileDate
//End if 
//End if 

C_TEXT($vXML)

If (bAdd=1)
If (Records in table([Facility])<vMax)
ADD RECORD(*)
Else 
AlertMessage (Get localized string("The maximum number of facilities has been entered for this Central Licence. Please contact")+" "+<>sOEMName+" "+Get localized string("Sales to upgrade your license, or visit http://my.storman.com/admin/store/"))
End if 
ALL RECORDS([Facility])
ORDER BY([Facility]SortOrder;>;[Facility]FacilityCode;>)
End if 
If (bMod=1)
ARRAY POINTER($aPointer;176)
//System Setup
//Page 1
$aPointer{1}:=->[Facility]AutoPayIncrease//[Facility]BackupFolder
$aPointer{2}:=->[Facility]AutoPayShow//[Facility]BackupNextDate
$aPointer{3}:=->[Facility]AgreemtSortDefault
$aPointer{4}:=->[Facility]AutoFirstName
$aPointer{5}:=->[Facility]ShowHistoryDefault
$aPointer{6}:=->[Facility]RegisteredOffice

//Page 2
//nothing

//Page 3
$aPointer{7}:=->[Facility]PhoneFormat
$aPointer{8}:=->[Facility]CantModPrior
$aPointer{9}:=->[Facility]CantModDaysBehind
$aPointer{10}:=->[Facility]AutoUpdateCantMod//[Facility]CantModUpdated
$aPointer{11}:=->[Facility]WeekEndDay
$aPointer{12}:=->[Facility]InsuranceAgentType
$aPointer{13}:=->[Facility]InsuranceAgent
$aPointer{14}:=->[Facility]CTPrices//[Facility]InsuranceAccount

//Page 4
$aPointer{15}:=->[Facility]Custom1
$aPointer{16}:=->[Facility]Custom2
$aPointer{17}:=->[Facility]Custom3
$aPointer{18}:=->[Facility]Custom4
$aPointer{19}:=->[Facility]SaleInqRequest
$aPointer{20}:=->[Facility]StaffPinsHOF
$aPointer{21}:=->[Facility]UsePDFWriter
$aPointer{22}:=->[Facility]PDFName
$aPointer{23}:=->[Facility]UseReceiptPrinter
$aPointer{24}:=->[Facility]ReceiptName
$aPointer{25}:=->[Facility]PhotoCompression

//Page 5
$aPointer{26}:=->[Facility]LoginStartup
$aPointer{27}:=->[Facility]AutoLogoutTime
$aPointer{28}:=->[Facility]AutoLogoutOnInactivity
$aPointer{29}:=->[Facility]HideGraphics
$aPointer{30}:=->[Facility]HideKeyRent
$aPointer{31}:=->[Facility]CalcOccupValOption
$aPointer{32}:=->[Facility]MoveOutUnitStatus
$aPointer{33}:=->[Facility]BillonFirst
$aPointer{34}:=->[Facility]PrintafterMoveOut
$aPointer{35}:=->[Facility]RequireZeroBal
$aPointer{36}:=->[Facility]RemindFollowups
$aPointer{37}:=->[Facility]AllowTaxExempt
$aPointer{38}:=->[Facility]VacantToClean
$aPointer{39}:=->[Facility]VTCDays
$aPointer{40}:=->[Facility]RefundInsurance
$aPointer{41}:=->[Facility]AlarmAlerts
$aPointer{42}:=->[Facility]NoSplash
$aPointer{43}:=->[Facility]UnitPerAgreement
$aPointer{44}:=->[Facility]PrintListAP
$aPointer{45}:=->[Facility]PrtMthRptsDP
$aPointer{46}:=->[Facility]StopEndLateCycle
$aPointer{47}:=->[Facility]PrintInvsDP
$aPointer{48}:=->[Facility]PrintOverdues
$aPointer{49}:=->[Facility]CreditSort//[Facility]LetterSignOff
$aPointer{50}:=->[Facility]ClientQuit
$aPointer{51}:=->[Facility]ClientQuitTime
$aPointer{52}:=->[Facility]ComplexPassword
$aPointer{53}:=->[Facility]PasswordLength
$aPointer{54}:=->[Facility]MinDaysPassword
$aPointer{55}:=->[Facility]MaxDaysPassword

//Page 6
$aPointer{56}:=->[Facility]OnlineReserveIncl
$aPointer{57}:=->[Facility]OnlineReserveRateDispOptions
$aPointer{58}:=->[Facility]OResCompPrePay
$aPointer{59}:=->[Facility]OResDepositPayTime
$aPointer{60}:=->[Facility]OResFacNotifEmail

//Page 7
$aPointer{61}:=->[Facility]AcctgSystem
$aPointer{62}:=->[Facility]BankRecCantModPrior//[Facility]GLCodeExt
$aPointer{63}:=->[Facility]StockSysStart
$aPointer{64}:=->[Facility]YearStartDate
$aPointer{65}:=->[Facility]AgedDebtorBreaks
$aPointer{66}:=->[Facility]RentAdvFlag
$aPointer{67}:=->[Facility]PrepaidAnalysisCat
$aPointer{68}:=->[Facility]UnitNoRpts
$aPointer{69}:=->[Facility]ShowRecKeyStats
$aPointer{70}:=->[Facility]AccessFee
$aPointer{71}:=->[Facility]AccessFeeCost
$aPointer{72}:=->[Facility]LCPartPayReset
$aPointer{73}:=->[Facility]MinBalArrears
$aPointer{74}:=->[Facility]MaximumWaived
$aPointer{75}:=->[Facility]UnlimitedWaived
$aPointer{76}:=->[Facility]WaivedMonthReset
$aPointer{77}:=->[Facility]TaxRate
$aPointer{78}:=->[Facility]TaxFromDate
$aPointer{79}:=->[Facility]TaxAddtoAmt
$aPointer{80}:=->[Facility]CurrencyFormat
$aPointer{81}:=->[Facility]RoundDefault
$aPointer{82}:=->[Facility]RefundPolicy
$aPointer{83}:=->[Facility]NoticeDaysReqd
$aPointer{84}:=->[Facility]RefndWklyMths
$aPointer{85}:=->[Facility]RefndAgrChange
$aPointer{86}:=->[Facility]RentWeeklyMthly
$aPointer{87}:=->[Facility]InsWeeklyMthly

//Page 8
$aPointer{88}:=->[Facility]Homepage
$aPointer{89}:=->[Facility]TransWebURL//[Facility]SyncingOn
$aPointer{90}:=->[Facility]TaxFreeDefault//[Facility]LicRentExpWarn
$aPointer{91}:=->[Facility]TaxNewRate//[Facility]GateSysType

//Page 9
//nothing

//Invoice Setup
//Page 1
$aPointer{92}:=->[Facility]CombineNxtDueDays
$aPointer{93}:=->[Facility]APFormDaysPrior
$aPointer{94}:=->[Facility]InvDateDetail
$aPointer{95}:=->[Facility]PaidtoDateonInv
$aPointer{96}:=->[Facility]ShowBalDueDateInv
$aPointer{97}:=->[Facility]BalDueinDays
$aPointer{98}:=->[Facility]BalFwdDateOpt
$aPointer{99}:=->[Facility]InvCurrentDate
$aPointer{100}:=->[Facility]PrtDialogInv
$aPointer{101}:=->[Facility]InvUseAgrBalFwd
$aPointer{102}:=->[Facility]ShowSizeonInv
$aPointer{103}:=->[Facility]InvShowTotal
$aPointer{104}:=->[Facility]HideNxtChgInv
$aPointer{105}:=->[Facility]ChqsPayableOption
$aPointer{106}:=->[Facility]ShowNxtChgsInv
$aPointer{107}:=->[Facility]ShowABNInv
$aPointer{108}:=->[Facility]InvMessage
$aPointer{109}:=->[Facility]InvDetailsOpt
$aPointer{110}:=->[Facility]APFormCustRef
$aPointer{111}:=->[Facility]AddressXPos
$aPointer{112}:=->[Facility]AddressYPos
$aPointer{113}:=->[Facility]AddressStyle

//Page 2
$aPointer{114}:=->[Facility]GraphiconInv
$aPointer{115}:=->[Facility]HeaderonInv
$aPointer{116}:=->[Facility]HeaderEmail

//Page 3
$aPointer{117}:=->[Facility]CustomInvFooter
$aPointer{118}:=->[Facility]StandardInvFooter
$aPointer{119}:=->[Facility]AcceptedCrCards
$aPointer{120}:=->[Facility]UseCustomReceipt
$aPointer{121}:=->[Facility]ReceiptCopies

//Email & Event Log setup
//Page 1
$aPointer{122}:=->[Facility]InternetConnection
$aPointer{123}:=->[Facility]DailyBatch//[Facility]POPHostName
$aPointer{124}:=->[Facility]DailyBatchOrder//[Facility]POPMailBox
$aPointer{125}:=->[Facility]WeeklyBatch//[Facility]POPPassword
$aPointer{126}:=->[Facility]WeeklyBatchOrder//[Facility]POPOnlyStorman
$aPointer{127}:=->[Facility]MonthlyBatch//[Facility]SmtpHostName
$aPointer{128}:=->[Facility]MonthlyBatchOrder//[Facility]POPAuthForSMTP
$aPointer{129}:=->[Facility]YearlyBatch//[Facility]SMTPLogin
$aPointer{130}:=->[Facility]YearlyBatchOrder//[Facility]SMTPPassword
$aPointer{131}:=->[Facility]BatchRefunds//[Facility]CentralAddress
$aPointer{132}:=->[Facility]PacketSize
$aPointer{133}:=->[Facility]BillWithMoveOut//[Facility]VersionDate

//Page 3
$aPointer{134}:=->[Facility]DaystoSendData
$aPointer{135}:=->[Facility]TimetoSend
$aPointer{136}:=->[Facility]AlarmSendStart
$aPointer{137}:=->[Facility]AlarmSendEnd
$aPointer{138}:=->[Facility]PrintLogSettings

//Page 4
$aPointer{139}:=->[Facility]PrintLogafterDP
$aPointer{140}:=->[Facility]DeleteLogDays

//Reporting / Notice defaults
$aPointer{141}:=->[Facility]BatchSettings
$aPointer{142}:=->[Facility]ReportSettings
$aPointer{143}:=->[Facility]DelinquentSystem//[Facility]DefaultForm
$aPointer{144}:=->[Facility]DelinquentSystemPrompt//[Facility]DfltPaperTray

//New
$aPointer{145}:=->[Facility]BusinessTypeTitle
$aPointer{146}:=->[Facility]CashAccrual
$aPointer{147}:=->[Facility]CashBookStart
$aPointer{148}:=->[Facility]CustomerTypeTitle
$aPointer{149}:=->[Facility]DisableCSTabs
$aPointer{150}:=->[Facility]DisableTender
$aPointer{151}:=->[Facility]FieldSettings
$aPointer{152}:=->[Facility]FutureMoveIns
$aPointer{153}:=->[Facility]HideGateLockList
$aPointer{154}:=->[Facility]InvAgreeCust
$aPointer{155}:=->[Facility]InvToDate
$aPointer{156}:=->[Facility]KeyStatsCustom
$aPointer{157}:=->[Facility]LateFeeReset
$aPointer{158}:=->[Facility]LogAlertNote
$aPointer{159}:=->[Facility]MarketingTypeTitle
$aPointer{160}:=->[Facility]MaxRefund
$aPointer{161}:=->[Facility]MoveOutDays
$aPointer{162}:=->[Facility]OResCompMarketType
$aPointer{163}:=->[Facility]RefundOtherRegChgs
$aPointer{164}:=->[Facility]RentIncreaseAP
$aPointer{165}:=->[Facility]ResetLateCyclePaid
$aPointer{166}:=->[Facility]RoundCredit
$aPointer{167}:=->[Facility]RoundMethod
$aPointer{168}:=->[Facility]ShowAdhoc
$aPointer{169}:=->[Facility]StatementDetail
$aPointer{170}:=->[Facility]StatementLastZeroBal
$aPointer{171}:=->[Facility]ThreatLevelAlert
$aPointer{172}:=->[Facility]UseCashBook
$aPointer{173}:=->[Facility]WaitingListDelay
$aPointer{174}:=->[Facility]InvHeader_
$aPointer{175}:=->[Facility]InvFooter_
$aPointer{176}:=->[Facility]Receipt_

ARRAY TEXT(asFields;176)
ARRAY TEXT(asSigns;176)
vTitle:=Get localized string("Select Fields to Copy")+"..."
For ($i;1;176)
asFields{$i}:=Substring(Field name($aPointer{$i});1;20)
asSigns{$i}:=""
End for 
Open window((Screen width/2)-146;(Screen height/2)-150;(Screen width/2)+146;(Screen height/2)+150;5;Get localized string("Select Sites"))
DIALOG([Facility];"SelectSites")
CLOSE WINDOW
If (OK=1)
For ($i;Size of array(asSigns);1;-1)
If (asSigns{$i}#"•")
DELETE FROM ARRAY($aPointer;$i;1)
End if 
End for 
ALL RECORDS([Facility])
ORDER BY([Facility]SortOrder;>;[Facility]FacilityCode;>)
OK:=ConfirmThree (Get localized string("Duplicate")+" "+String(Size of array($aPointer))+" "+Get localized string("System fields from")+" "+[Facility]ShortName+" "+Get localized string("to1")+" "+String(Size of array(<>asSiteCodes))+" other facilities?";Get localized string("Yes");Get localized string("Select Sites");Get localized string("No"))
If (OK=1) | (OK=2)
ARRAY TEXT(asFields;Size of array(<>asSiteCodes))
ARRAY TEXT(asSiteCodes;Size of array(<>asSiteCodes))
ARRAY TEXT(asSigns;Size of array(<>asSiteCodes))
For ($i;1;Size of array(<>asSiteCodes))
asFields{$i}:=<>asFacilities{$i}
asSiteCodes{$i}:=<>asSiteCodes{$i}
asSigns{$i}:=""
End for 
End if 
If (OK=2)
vTitle:=Get localized string("Select Sites")+"..."
Open window(20;50;350;370;0;Get localized string("Dialog"))
DIALOG([Facility];"SelectSites")
CLOSE WINDOW
For ($i;Size of array(asSiteCodes);1;-1)
If (asSigns{$i}#"•")
DELETE FROM ARRAY(asSiteCodes;$i;1)
End if 
End for 
End if 
If (OK=1)
ALL RECORDS([Facility])
ORDER BY([Facility]SortOrder;>;[Facility]FacilityCode;>)
ARRAY TEXT($aValue;Size of array($aPointer))
For ($i;1;Size of array($aPointer))
Case of 
: (Type($aPointer{$i}->)=Is integer) | (Type($aPointer{$i}->)=Is longint) | (Type($aPointer{$i}->)=Is real) | (Type($aPointer{$i}->)=Is date) | (Type($aPointer{$i}->)=Is time)
$aValue{$i}:=String($aPointer{$i}->)
: (Type($aPointer{$i}->)=Is Boolean)
$aValue{$i}:="False"
If ($aPointer{$i}->=True)
$aValue{$i}:="True"
End if 
: (Type($aPointer{$i}->)=Is text) | (Type($aPointer{$i}->)=Is alpha field)
$aValue{$i}:=$aPointer{$i}->
: (Type($aPointer{$i}->)=Is BLOB)//Only for SVG!
BLOB PROPERTIES($aPointer{$i}->;$Compressed)
If ($Compressed#Is not compressed)
EXPAND BLOB($aPointer{$i}->)
End if 
BLOB TO VARIABLE($aPointer{$i}->;$vXML)
$aValue{$i}:=DOM Parse XML variable($vXML)
COMPRESS BLOB($aPointer{$i}->)
Else 
//Do nothing
End case 
End for 
READ WRITE([Facility])
For ($j;1;Size of array(asSiteCodes))
QUERY([Facility];[Facility]FacilityCode=asSiteCodes{$j})
If (Records in selection([Facility])=1)
For ($i;1;Size of array($aPointer))
Case of 
: (Type($aPointer{$i}->)=Is integer) | (Type($aPointer{$i}->)=Is longint) | (Type($aPointer{$i}->)=Is real)
$aPointer{$i}->:=Num($aValue{$i})
: (Type($aPointer{$i}->)=Is date)
$aPointer{$i}->:=Date($aValue{$i})
: (Type($aPointer{$i}->)=Is time)
$aPointer{$i}->:=Time($aValue{$i})
: (Type($aPointer{$i}->)=Is Boolean)
$aPointer{$i}->:=($aValue{$i}="True")
: (Type($aPointer{$i}->)=Is text) | (Type($aPointer{$i}->)=Is alpha field)
$aPointer{$i}->:=$aValue{$i}
: (Type($aPointer{$i}->)=Is BLOB)//Only for SVG!
DOM EXPORT TO VAR($aValue{$i};$vXML)
VARIABLE TO BLOB($vXML;$aPointer{$i}->)
COMPRESS BLOB($aPointer{$i}->)
Else 
//Do nothing
End case 
End for 
SAVE RECORD([Facility])
End if 
End for 
READ ONLY([Facility])
End if 
End if 
SET BLOB SIZE($Blobie133;0)
SET BLOB SIZE($Blobie134;0)
SET BLOB SIZE($Blobie135;0)
ALL RECORDS([Facility])
ORDER BY([Facility]SortOrder;>;[Facility]FacilityCode;>)
End if 
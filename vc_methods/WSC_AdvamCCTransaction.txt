//%attributes = {"lang":"en"} comment added and reserved by 4D.
// 
// WSC_AdvamCCTransaction
// https://gateway.advam.com/ws/V2/AdvamGateway.wsdl
// 
// Method source code automatically generated by the 4D SOAP wizard.
// ----------------------------------------------------------------
C_TEXT($0)//Authorization Code
C_BOOLEAN($1)//Display Decline / Error Alerts
C_TEXT($2)// (P=Process, C=Credit, V=Void)
C_REAL($3)//Transaction Amount
C_TEXT($4)//Card Number
C_TEXT($5)//Expiry Date
C_TEXT($6)//TransID
C_TEXT($7;$8;$9)//AgreeNo, Description, CustomerCode
C_TEXT($10;$11)//Customer Name, Address
C_TEXT($12)//City
C_TEXT($13)//Zip Code
C_TEXT($14;$15;$16)
C_TEXT($19)
C_LONGINT($17;$18;$Logging;$AdvamErr)//Logging,Timeout
C_LONGINT($Error)
C_TEXT(AdvamCCAction)
C_TEXT($20;$statement_xpath;$value_t;$Sendcode)
C_BLOB($replyblob)
C_TEXT($xmlref;$xmlnode)
C_TEXT(AdvamCCAcc;AdvamCCUser;AdvamCCPass;AdvamCCAccNo;AdvamCCExpiryMonth;AdvamCCExpiryYear;AdvamCCAmount;AdvamCCMRef;AdvamCCName;vOriginalReceipt)

//SET BLOB SIZE($storeblob;0)
//SET BLOB SIZE($outputblob;0)

WS_AdvamSuccess:="0"

$Logging:=$17
AdvamCCExpiryMonth:=Substring($5;1;2)
AdvamCCExpiryYear:=Substring($5;3;2)


If ($2="P")
AdvamCCAction:="P"
Else 
AdvamCCAction:="R"
End if 

AdvamCCAcc:=$14
AdvamCCName:=$10
AdvamCCUser:=$15
AdvamCCPass:=$16
AdvamCCAmount:=String($3;"####0.00")
AdvamCCMRef:=$7
vOriginalReceipt:=$20

ON ERR CALL("ErrorNone")
//If (<>iPlatform=3)
//If (<>tClient) & (Application type=4D Remote Mode)
//DOCUMENT TO BLOB(<>sStormanPath+"Win4DX\\PaymentSOAP.xml";$inputblob)
//Else 
//DOCUMENT TO BLOB(<>sStormanPath+"Database\\Win4DX\\PaymentSOAP.xml";$inputblob)
//End if 
//Else 
//DOCUMENT TO BLOB(<>sStormanPath+"Mac4DX:PaymentSOAP.xml";$inputblob)
//End if 



AdvamCCAccNo:=$4

//PROCESS HTML TAGS($inputblob;$outputblob)


// Modified by: nicholas.wykes (7/01/2010)
//Change from disk file to DOM XML format

$root:=DOM Create XML Ref("Transaction";"http://gateway.advam.com/V2/AdvamGateway")

$subelem:=DOM Create XML element($root;"/Transaction/TransactionRequest/AdvamAccount";"xsi:type";"tns:AdvamAccount")
DOM SET XML ELEMENT VALUE($subelem;AdvamCCAcc)

$subelem:=DOM Create XML element($root;"/Transaction/TransactionRequest/OperatorUsername";"xsi:type";"tns:OperatorUsername")
DOM SET XML ELEMENT VALUE($subelem;AdvamCCUser)

$subelem:=DOM Create XML element($root;"/Transaction/TransactionRequest/OperatorPassword";"xsi:type";"tns:OperatorPassword")
DOM SET XML ELEMENT VALUE($subelem;AdvamCCPass)

$subelem:=DOM Create XML element($root;"/Transaction/TransactionRequest/Action";"xsi:type";"tns:Action")
DOM SET XML ELEMENT VALUE($subelem;AdvamCCAction)

$subelem:=DOM Create XML element($root;"/Transaction/TransactionRequest/PrimaryAccountNumber";"xsi:type";"tns:PrimaryAccountNumber")
DOM SET XML ELEMENT VALUE($subelem;AdvamCCAccNo)

$subelem:=DOM Create XML element($root;"/Transaction/TransactionRequest/ExpiryMonth";"xsi:type";"tns:ExpiryMonth")
DOM SET XML ELEMENT VALUE($subelem;AdvamCCExpiryMonth)

$subelem:=DOM Create XML element($root;"/Transaction/TransactionRequest/ExpiryYear";"xsi:type";"tns:ExpiryYear")
DOM SET XML ELEMENT VALUE($subelem;AdvamCCExpiryYear)

$subelem:=DOM Create XML element($root;"/Transaction/TransactionRequest/Amount";"xsi:type";"tns:Amount")
DOM SET XML ELEMENT VALUE($subelem;AdvamCCAmount)

$subelem:=DOM Create XML element($root;"/Transaction/TransactionRequest/MerchantReference";"xsi:type";"tns:MerchantReference")
DOM SET XML ELEMENT VALUE($subelem;AdvamCCMRef)

$subelem:=DOM Create XML element($root;"/Transaction/TransactionRequest/CardVerificationValue";"xsi:type";"tns:CardVerificationValue")
DOM SET XML ELEMENT VALUE($subelem;"")

$subelem:=DOM Create XML element($root;"/Transaction/TransactionRequest/CardHolderName";"xsi:type";"tns:CardHolderName")
DOM SET XML ELEMENT VALUE($subelem;AdvamCCName)

$subelem:=DOM Create XML element($root;"/Transaction/TransactionRequest/PreAuthorisation";"xsi:type";"tns:PreAuthorisation")
DOM SET XML ELEMENT VALUE($subelem;"")

$subelem:=DOM Create XML element($root;"/Transaction/TransactionRequest/OriginalReceipt";"xsi:type";"tns:OriginalReceipt")
DOM SET XML ELEMENT VALUE($subelem;vOriginalReceipt)

$subelem:=DOM Create XML element($root;"/Transaction/TransactionRequest/EffectiveDate";"xsi:type";"tns:EffectiveDate")
DOM SET XML ELEMENT VALUE($subelem;"")

If ($Logging=1)
DOM EXPORT TO VAR($root;$Sendcode)
$Sendcode:=Replace string($Sendcode;$4;"xxxxxxxxxxxx"+Substring($4;13))
$Sendcode:=Replace string($Sendcode;$14;"Account")
$Sendcode:=Replace string($Sendcode;$15;"Username")
$Sendcode:=Replace string($Sendcode;$16;"Password")
SyncRecordLog ($Sendcode;"AutoPayLog")
End if 

//SET WEB SERVICE PARAMETER("Action";Action)
//SET WEB SERVICE PARAMETER("AdvamCCAccount";$14)
//SET WEB SERVICE PARAMETER("PrimaryAccountNumber";$4)
//SET WEB SERVICE PARAMETER("AdvamCCExpiryMonth";AdvamCCExpiryMonth)
//SET WEB SERVICE PARAMETER("AdvamCCExpiryYear";AdvamCCExpiryYear)
//SET WEB SERVICE PARAMETER("CardHolderName";$10)
//SET WEB SERVICE PARAMETER("Amount";$3)
//SET WEB SERVICE PARAMETER("MerchantReference";$7)
//SET WEB SERVICE PARAMETER("OperatorAdvamCCUsername";$15)
//SET WEB SERVICE PARAMETER("OperatorAdvamCCPassword";$16)
//If (Count parameters>19)
//SET WEB SERVICE PARAMETER("OriginalReceipt";$20)  `
//End if 

If ([Facility]TestAccount)
If ($Logging=1)
SyncRecordLog ("Open Test LinkTest";"AutoPayLog")
End if 
WEB SERVICE CALL("https://demo-gateway.advam.com/ws/V2/soap.php";"https://demo-gateway.advam.com/ws/V2/soap.php/LinkTest";"LinkTest";"http://gateway.advam.com/AdvamGateway";Web Service dynamic)
WS_LinkTestSuccess:="False"

If (OK=1)
WEB SERVICE GET RESULT(WS_LinkTestSuccess;"LinkTestResult";*)
End if 

If (WS_LinkTestSuccess="true")
If ($Logging=1)
SyncRecordLog ("Pass Test LinkTest";"AutoPayLog")
End if 
WEB SERVICE SET PARAMETER("TransactionRequest";$root)
$Error:=IT_SetTimeOut ($18)
If ($Logging=1)
SyncRecordLog ("Open Test Transaction";"AutoPayLog")
End if 
WEB SERVICE CALL("https://demo-gateway.advam.com/ws/V2/soap.php";"https://demo-gateway.advam.com/ws/V2/soap.php/Transaction";"Transaction";"http://gateway.advam.com/V2/AdvamGateway";Web Service manual)
$AdvamErr:=Num(WEB SERVICE Get info(0))
If ($AdvamErr>0)
If ($Logging=1)
SyncRecordLog ("Error# "+String($AdvamErr);"AutoPayLog")
End if 
$vhTimeStart:=Current time
Repeat 
$Time:=Current time
Until ((Current time-$vhTimeStart)>=?00:00:10?)
WEB SERVICE SET PARAMETER("TransactionRequest";$root)
If ($Logging=1)
SyncRecordLog ("Open Test Transaction - Attempt 2";"AutoPayLog")
End if 
WEB SERVICE CALL("https://demo-gateway.advam.com/ws/V2/soap.php";"https://demo-gateway.advam.com/ws/V2/soap.php/Transaction";"Transaction";"http://gateway.advam.com/V2/AdvamGateway";Web Service manual)
$AdvamErr:=Num(WEB SERVICE Get info(0))
If ($AdvamErr>0)
If ($Logging=1)
SyncRecordLog ("Error# "+String($AdvamErr);"AutoPayLog")
End if 
If (Not(IsAWebProcess ))
AlertMessage (Get localized string("There was an error contacting the Advam servers, try again later."))
End if 
$0:="ERR4IC"
Else 
If ($Logging=1)
SyncRecordLog ("Pass Test Transaction - Attempt 2";"AutoPayLog")
End if 
End if 
Else 
If ($Logging=1)
SyncRecordLog ("Pass Test Transaction";"AutoPayLog")
End if 
End if 
Else 
If ($Logging=1)
SyncRecordLog ("Open Test LinkTest - Gateway 2";"AutoPayLog")
End if 
WEB SERVICE CALL("https://demo-gateway2.advam.com/ws/V2/soap.php";"https://demo-gateway2.advam.com/ws/V2/soap.php/LinkTest";"LinkTest";"http://gateway.advam.com/AdvamGateway";Web Service dynamic)
WS_LinkTestSuccess:="False"

If (OK=1)
WEB SERVICE GET RESULT(WS_LinkTestSuccess;"LinkTestResult";*)
End if 
If (WS_LinkTestSuccess="true")
If ($Logging=1)
SyncRecordLog ("Pass Test LinkTest - Gateway 2";"AutoPayLog")
End if 
WEB SERVICE SET PARAMETER("TransactionRequest";$root)
$Error:=IT_SetTimeOut ($18)
If ($Logging=1)
SyncRecordLog ("Open Test Transaction - Gateway 2";"AutoPayLog")
End if 
WEB SERVICE CALL("https://demo-gateway2.advam.com/ws/V2/soap.php";"https://demo-gateway2.advam.com/ws/V2/soap.php/Transaction";"Transaction";"http://gateway.advam.com/V2/AdvamGateway";Web Service manual)
$AdvamErr:=Num(WEB SERVICE Get info(0))
If ($AdvamErr>0)
If ($Logging=1)
SyncRecordLog ("Error# "+String($AdvamErr);"AutoPayLog")
End if 
$vhTimeStart:=Current time
Repeat 
$Time:=Current time
Until ((Current time-$vhTimeStart)>=?00:00:10?)
WEB SERVICE SET PARAMETER("TransactionRequest";$root)
If ($Logging=1)
SyncRecordLog ("Open Test Transaction - Gateway 2 - Attempt 2";"AutoPayLog")
End if 
WEB SERVICE CALL("https://demo-gateway2.advam.com/ws/V2/soap.php";"https://demo-gateway2.advam.com/ws/V2/soap.php/Transaction";"Transaction";"http://gateway.advam.com/V2/AdvamGateway";Web Service manual)
$AdvamErr:=Num(WEB SERVICE Get info(0))
If ($AdvamErr>0)
If ($Logging=1)
SyncRecordLog ("Error# "+String($AdvamErr);"AutoPayLog")
End if 
If (Not(IsAWebProcess ))
AlertMessage (Get localized string("There was an error contacting the Advam servers, try again later."))
End if 
$0:="ERR4IC"
Else 
If ($Logging=1)
SyncRecordLog ("Pass Test Transaction - Gateway 2 - Attempt 2";"AutoPayLog")
End if 
End if 
Else 
If ($Logging=1)
SyncRecordLog ("Pass Test Transaction - Gateway 2";"AutoPayLog")
End if 
End if 
Else 
If (Not(IsAWebProcess ))
AlertMessage (Get localized string("Could not contact the Advam Demo servers, try again later."))
End if 
$0:="ERR4IC"
$AdvamErr:=1
End if 
End if 
Else 
If ($Logging=1)
SyncRecordLog ("Open LinkTest";"AutoPayLog")
End if 
WEB SERVICE CALL("https://gateway.advam.com/ws/V2/soap.php";"https://gateway.advam.com/ws/V2/soap.php/LinkTest";"LinkTest";"http://gateway.advam.com/AdvamGateway";Web Service dynamic)
WS_LinkTestSuccess:="False"

If (OK=1)
WEB SERVICE GET RESULT(WS_LinkTestSuccess;"LinkTestResult";*)
End if 
If (WS_LinkTestSuccess="true")
If ($Logging=1)
SyncRecordLog ("Pass LinkTest";"AutoPayLog")
End if 
WEB SERVICE SET PARAMETER("TransactionRequest";$root)
$Error:=IT_SetTimeOut ($18)
If ($Logging=1)
SyncRecordLog ("Open Transaction";"AutoPayLog")
End if 
WEB SERVICE CALL("https://gateway.advam.com/ws/V2/soap.php";"https://gateway.advam.com/ws/V2/soap.php/Transaction";"Transaction";"http://gateway.advam.com/V2/AdvamGateway";Web Service manual)
$AdvamErr:=Num(WEB SERVICE Get info(0))
If ($AdvamErr>0)
If ($Logging=1)
SyncRecordLog ("Error# "+String($AdvamErr);"AutoPayLog")
End if 
$vhTimeStart:=Current time
Repeat 
$Time:=Current time
Until ((Current time-$vhTimeStart)>=?00:00:10?)
WEB SERVICE SET PARAMETER("TransactionRequest";$root)
If ($Logging=1)
SyncRecordLog ("Open Transaction - Attempt 2";"AutoPayLog")
End if 
WEB SERVICE CALL("https://gateway.advam.com/ws/V2/soap.php";"https://gateway.advam.com/ws/V2/soap.php/Transaction";"Transaction";"http://gateway.advam.com/V2/AdvamGateway";Web Service manual)
$AdvamErr:=Num(WEB SERVICE Get info(0))
If ($AdvamErr>0)
If ($Logging=1)
SyncRecordLog ("Error# "+String($AdvamErr);"AutoPayLog")
End if 
If (Not(IsAWebProcess ))
AlertMessage (Get localized string("There was an error contacting the Advam servers, try again later."))
End if 
$0:="ERR4IC"
Else 
If ($Logging=1)
SyncRecordLog ("Pass Transaction - Attempt 2";"AutoPayLog")
End if 
End if 
Else 
If ($Logging=1)
SyncRecordLog ("Pass Transaction";"AutoPayLog")
End if 
End if 
Else 
If ($Logging=1)
SyncRecordLog ("Open LinkTest - Gateway 2";"AutoPayLog")
End if 
WEB SERVICE CALL("https://gateway2.advam.com/ws/V2/soap.php";"https://gateway2.advam.com/ws/V2/soap.php/LinkTest";"LinkTest";"http://gateway.advam.com/AdvamGateway";Web Service dynamic)
WS_LinkTestSuccess:="False"

If (OK=1)
WEB SERVICE GET RESULT(WS_LinkTestSuccess;"LinkTestResult";*)
End if 
If (WS_LinkTestSuccess="true")
If ($Logging=1)
SyncRecordLog ("Pass LinkTest - Gateway 2";"AutoPayLog")
End if 
WEB SERVICE SET PARAMETER("TransactionRequest";$root)
$Error:=IT_SetTimeOut ($18)
If ($Logging=1)
SyncRecordLog ("Open Transaction - Gateway 2";"AutoPayLog")
End if 
WEB SERVICE CALL("https://gateway2.advam.com/ws/V2/soap.php";"https://gateway2.advam.com/ws/V2/soap.php/Transaction";"Transaction";"http://gateway.advam.com/V2/AdvamGateway";Web Service manual)
$AdvamErr:=Num(WEB SERVICE Get info(0))
If ($AdvamErr>0)
If ($Logging=1)
SyncRecordLog ("Error# "+String($AdvamErr);"AutoPayLog")
End if 
$vhTimeStart:=Current time
Repeat 
$Time:=Current time
Until ((Current time-$vhTimeStart)>=?00:00:10?)
WEB SERVICE SET PARAMETER("TransactionRequest";$root)
If ($Logging=1)
SyncRecordLog ("Open Transaction - Gateway 2 - Attempt 2";"AutoPayLog")
End if 
WEB SERVICE CALL("https://gateway2.advam.com/ws/V2/soap.php";"https://gateway2.advam.com/ws/V2/soap.php/Transaction";"Transaction";"http://gateway.advam.com/V2/AdvamGateway";Web Service manual)
$AdvamErr:=Num(WEB SERVICE Get info(0))
If ($AdvamErr>0)
If ($Logging=1)
SyncRecordLog ("Error# "+String($AdvamErr);"AutoPayLog")
End if 
If (Not(IsAWebProcess ))
AlertMessage (Get localized string("There was an error contacting the Advam servers, try again later."))
End if 
$0:="ERR4IC"
Else 
If ($Logging=1)
SyncRecordLog ("Pass Transaction - Gateway 2 - Attempt 2";"AutoPayLog")
End if 
End if 
Else 
If ($Logging=1)
SyncRecordLog ("Pass Transaction - Gateway 2";"AutoPayLog")
End if 
End if 
Else 
If (Not(IsAWebProcess ))
AlertMessage (Get localized string("There was an error contacting the Advam servers, try again later."))
End if 
$0:="ERR4IC"
$AdvamErr:=1
End if 
End if 
End if 

DOM CLOSE XML($root)

If ($AdvamErr=0)
WEB SERVICE GET RESULT($replyblob;"TransactionResponse";*)
//BLOB TO DOCUMENT("C:\\Test\\Response.xml";$replyblob)

If ($Logging=1)
$Receivecode:=Convert to text($replyblob;"UTF-8")
SyncRecordLog ($Receivecode;"AutoPayLog")
End if 

$xmlref:=DOM Parse XML variable($replyblob)
$statement_xpath:="/TransactionResponse/TransactionResponse/Transaction/Success"
$xmlnode:=DOM Find XML element($xmlref;$statement_xpath)

If ($xmlnode#"0000000000000000")
DOM GET XML ELEMENT VALUE($xmlnode;$value_t)
WS_AdvamSuccess:=$value_t
End if 

$statement_xpath:="/TransactionResponse/TransactionResponse/Transaction/ResponseCode"
$xmlnode:=DOM Find XML element($xmlref;$statement_xpath)

If ($xmlnode#"0000000000000000")
DOM GET XML ELEMENT VALUE($xmlnode;$value_t)
WS_ResponseCode:=$value_t
End if 

$statement_xpath:="/TransactionResponse/TransactionResponse/Transaction/ResponseText"
$xmlnode:=DOM Find XML element($xmlref;$statement_xpath)

If ($xmlnode#"0000000000000000")
DOM GET XML ELEMENT VALUE($xmlnode;$value_t)
WS_ResponseText:=$value_t
End if 

$statement_xpath:="/TransactionResponse/TransactionResponse/Transaction/AuthorisationNumber"
$xmlnode:=DOM Find XML element($xmlref;$statement_xpath)

If ($xmlnode#"0000000000000000")
DOM GET XML ELEMENT VALUE($xmlnode;$value_t)
WS_AuthorisationNumber:=$value_t
End if 

$statement_xpath:="/TransactionResponse/TransactionResponse/Transaction/Receipt"
$xmlnode:=DOM Find XML element($xmlref;$statement_xpath)

If ($xmlnode#"0000000000000000")
DOM GET XML ELEMENT VALUE($xmlnode;$value_t)
WS_Receipt:=$value_t
End if 

$statement_xpath:="/TransactionResponse/TransactionResponse/Transaction/SettlementDate"
$xmlnode:=DOM Find XML element($xmlref;$statement_xpath)

If ($xmlnode#"0000000000000000")
DOM GET XML ELEMENT VALUE($xmlnode;$value_t)
WS_SettlementDate:=$value_t
End if 

$statement_xpath:="/TransactionResponse/TransactionResponse/Transaction/OriginalReceipt"
$xmlnode:=DOM Find XML element($xmlref;$statement_xpath)

If ($xmlnode#"0000000000000000")
DOM GET XML ELEMENT VALUE($xmlnode;$value_t)
WS_OriginalReceipt:=$value_t
End if 

DOM CLOSE XML($xmlref)
//GET WEB SERVICE RESULT(WS_AdvamSuccess;"Success")
//GET WEB SERVICE RESULT(WS_ResponseCode;"ResponseCode")
//GET WEB SERVICE RESULT(WS_ResponseText;"ResponseText")
//GET WEB SERVICE RESULT(WS_AuthorisationNumber;"AuthorisationNumber")
//GET WEB SERVICE RESULT(WS_Receipt;"Receipt")
//GET WEB SERVICE RESULT(WS_SettlementDate;"SettlementDate")
//GET WEB SERVICE RESULT(WS_OriginalReceipt;"OriginalReceipt";*)  ` Memory clean-up on the final return value.
If (WS_AdvamSuccess="1") | (WS_AdvamSuccess="True")

$0:=WS_AuthorisationNumber//Authorisation Number

[Trxs]CCTransID:=WS_Receipt//Transaction ID,
[Trxs]OriginalReceipt:=WS_OriginalReceipt
If ([Analysis]SetBankedDate=False)//The Date Banked value is set to 'Off' in the Analysis Code
[Trxs]DateBanked:=Date(Substring(WS_SettlementDate;9;2)+"/"+Substring(WS_SettlementDate;6;2)+"/"+Substring(WS_SettlementDate;1;4))
End if 
Else 
$0:="ERR"+Substring(WS_ResponseCode;Length(WS_ResponseCode)-2;3)//substring to prevent "destination string is smaller than source"
If ($1) & (Not(IsAWebProcess ))
Case of 
: (WS_ResponseCode="00")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" The requested transaction has been approved.")
: (WS_ResponseCode="01")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Card Issuer has declined the payment request.")
: (WS_ResponseCode="02")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Card Issuer has had special conditions applied to the card.")
: (WS_ResponseCode="03")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Merchant ID not found on Bank's System.")
: (WS_ResponseCode="04")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Card Issuer has declined the transaction and requested the card be retained.")
: (WS_ResponseCode="05")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" The bank that issued this card to your customer has imposed some special conditi"+"o"+"ns on the card or the use of the card. This could also indicate that the use of t"+"he card has been temporarily suspended.")
: (WS_ResponseCode="06")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" The message sent by the terminal to the bank's system contained an error.")
: (WS_ResponseCode="07")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Card Issuer has declined the transaction and requested the card be retained.")
: (WS_ResponseCode="08")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" This transaction is approved subject to the usual fraud checks and the operator'"+"s"+" satisfactory assessment that the card user is the legal user and that signatures"+" match.")
: (WS_ResponseCode="12")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" The bank that issued this card to your customer has declined the transaction as "+"t"+"he type of transaction is not valid for the type of card. e.g. Selecting to pay f"+"rom a credit card account with standard issue EFTPOS card.")
: (WS_ResponseCode="13")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" The transaction amount is invalid.")
: (WS_ResponseCode="14")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" The Credit Card number presented is Invalid. This could be because the card numb"+"e"+"r or card series has been revoked or the number was simply miskeyed.")
: (WS_ResponseCode="15")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" The Credit Card number presented is Invalid. This could be because the card numb"+"e"+"r or card series has been revoked or the number was simply miskeyed.")
: (WS_ResponseCode="19")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" The transaction has not been processed. Retry the transaction.")
: (WS_ResponseCode="21")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Reversal Approved")
: (WS_ResponseCode="30")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Message Format Error.")
: (WS_ResponseCode="31")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" The Card Issuer is not supported.")
: (WS_ResponseCode="33")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Card has expired")
: (WS_ResponseCode="36")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Restricted Card")
: (WS_ResponseCode="38")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Card Issuer has indicated that the card has exceeded the maximum number of PIN t"+"r"+"ies.")
: (WS_ResponseCode="39")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" There is no credit account linked to the card.")
: (WS_ResponseCode="41")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Card has been reported as lost.")
: (WS_ResponseCode="43")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Card has been reported as stolen.")
: (WS_ResponseCode="51")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Card/account has insufficient funds for this transaction.")
: (WS_ResponseCode="52")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" No cheque account connected to card.")
: (WS_ResponseCode="53")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" No savings account connected to card.")
: (WS_ResponseCode="54")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Card has expired")
: (WS_ResponseCode="55")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Cardholder PIN has failed validation")
: (WS_ResponseCode="56")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Card Issuer has no record of the card.")
: (WS_ResponseCode="57")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Card Issuer has indicated that the transaction is not permitted to cardholder")
: (WS_ResponseCode="58")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Transaction not permitted on this terminal.")
: (WS_ResponseCode="59")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Card Issuer has indicated that the card is suspected as being fraudulent")
: (WS_ResponseCode="60")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" There has been a problem processing the transaction.")
: (WS_ResponseCode="61")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Transaction will exceed card/account withdrawal frequency limit.")
: (WS_ResponseCode="62")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Card Issuer has indicated that there are restrictions placed on the card.")
: (WS_ResponseCode="63")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" The terminal's verification code has failed certification.")
: (WS_ResponseCode="65")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Transaction will exceed card/account withdrawal frequency limit.")
: (WS_ResponseCode="67")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Card issuer has indicated the card is suspected counterfeit.")
: (WS_ResponseCode="75")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Card Issuer has indicated that the card has exceeded the maximum number of PIN t"+"r"+"ies")
: (WS_ResponseCode="91")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Link with the Card Issuer is not available.")
: (WS_ResponseCode="96")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" There has been a problem processing the transaction.")
: (WS_ResponseCode="98")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" The secure encryption device and the acquiring bank don't agree on the key used "+"i"+"n the transaction, therefore the acquiring bank is rejecting the transaction.")
: (WS_ResponseCode="A4")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" The acquiring bank is currently unavailable. This could be due to a telecommunic"+"a"+"tions error, or the bank is currently unable to process transactions.")
: (WS_ResponseCode="A5")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" The secure hardware encryption device is currently offline.")
: (WS_ResponseCode="AA")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" The Card Number is invalid")
: (WS_ResponseCode="AB")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Invalid Expiry Date")
: (WS_ResponseCode="AC")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Card has expired")
: (WS_ResponseCode="AD")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Invalid Account")
: (WS_ResponseCode="AE")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Unable to connect to a Transaction Server")
: (WS_ResponseCode="AF")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" The record is not a valid record")
: (WS_ResponseCode="AV100")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" The request was not formatted correctly")
: (WS_ResponseCode="AV200")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" The request could not be processed")
: (WS_ResponseCode="AV300")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" There was an internal error in the gateway")
: (WS_ResponseCode="AV400")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Operator login failed")
: (WS_ResponseCode="AV401")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Operator login failed too many times")
: (WS_ResponseCode="AV402")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" The Operator account has expired")
: (WS_ResponseCode="AV500")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Operator not authorised to perform request")
: (WS_ResponseCode="AV501")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" The Merchant account has been disabled")
: (WS_ResponseCode="AV502")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" The Merchant account does not allow this currency")
: (WS_ResponseCode="AV503")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Amount is less than minimum payment amount for this Merchant")
: (WS_ResponseCode="AV504")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Amount is more than maximum payment amount for this Merchant")
: (WS_ResponseCode="AV505")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Payments are not allowed for this Operator")
: (WS_ResponseCode="AV506")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Refunds are not allowed for this Operator")
: (WS_ResponseCode="AV507")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Invalid action supplied, must be P, R, A or C")
: (WS_ResponseCode="AV508")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Amount is more than the maximum refund amount for this Operator")
: (WS_ResponseCode="AV509")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Amount is more than the maximum refund amount for this Operator")
: (WS_ResponseCode="AV510")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Amount is more than the maximum payment amount for this Operator")
: (WS_ResponseCode="AV511")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Pre-authorisations are not allowed for this Operator")
: (WS_ResponseCode="AV512")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Completions are not allowed for this Operator")
: (WS_ResponseCode="AV513")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Operator is not authorised for this Merchant")
: (WS_ResponseCode="AV600")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" The credit card number is incorrect or invalid")
: (WS_ResponseCode="AV610")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" The credit card is expired")
: (WS_ResponseCode="AV700")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" Pre-Authorisation Number is required")
: (WS_ResponseCode="AV800")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" The Original Receipt Number is required for a refund")
: (WS_ResponseCode="AV900")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" An error has occurred with third-party software at the acquiring bank.")
Else 
AlertMessage ("Result Code: "+$0+" - "+WS_ResponseText)
End case 
End if 
End if 
vCCText:=WS_ResponseText
Else 
If ($Logging=1)
SyncRecordLog ($Sendcode;"AutoPayLog")
SyncRecordLog ("TCP/IP Error";"AutoPayLog")
End if 
End if 

$Error:=IT_SetTimeOut (30)

ON ERR CALL("ErrorLog")

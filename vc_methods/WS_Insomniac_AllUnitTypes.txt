//%attributes = {"publishedSoap":true,"lang":"en"} comment added and reserved by 4D.
SOAP DECLARATION(WS_FacilityID;Is text;SOAP input)

$String:="Start WS_Insomniac_AllUnitTypes"+Char(13)
$String:=$String+"WS_FacilityID: "+WS_FacilityID+Char(13)


WSRECORDLOG ($String)
SOAP DECLARATION(WS_RET_CODE;Is Boolean;SOAP output)
SOAP DECLARATION(WS_UnitTypeID;Text array;SOAP output)
SOAP DECLARATION(WS_TypeDescription;Text array;SOAP output)
SOAP DECLARATION(WS_MinimumPrice;Real array;SOAP output)
SOAP DECLARATION(WS_Avaliability;Text array;SOAP output)
SOAP DECLARATION(WS_NumAvailable;Integer array;SOAP output)
SOAP DECLARATION(WS_TotalNum;Integer array;SOAP output)
SOAP DECLARATION(WS_Measure;Text array;SOAP output)
SOAP DECLARATION(WS_Width;Real array;SOAP output)
SOAP DECLARATION(WS_Length;Real array;SOAP output)
SOAP DECLARATION(WS_Height;Real array;SOAP output)
SOAP DECLARATION(WS_Web_rental;Text array;SOAP output)
SOAP DECLARATION(WS_KioskRental;Text array;SOAP output)
SOAP DECLARATION(WS_Insurance;Text array;SOAP output)
SOAP DECLARATION(WS_ERROR;Is text;SOAP output)

ARRAY TEXT(WS_UnitTypeID;0)
ARRAY TEXT(WS_TypeDescription;0)
ARRAY REAL(WS_MinimumPrice;0)
ARRAY TEXT(WS_Avaliability;0)
ARRAY TEXT(WS_Measure;0)
ARRAY REAL(WS_Width;0)
ARRAY REAL(WS_Length;0)
ARRAY LONGINT(WS_TotalNum;0)
ARRAY LONGINT(WS_NumAvailable;0)
ARRAY REAL(WS_Height;0)
ARRAY TEXT(WS_Web_rental;0)
ARRAY TEXT(WS_KioskRental;0)
ARRAY TEXT(WS_Insurance;0)

QUERY([UnitType];[UnitType]RUnitType=WS_FacilityID+"@")
ORDER BY([UnitType];[UnitType]UnitTypeCode;<)
If (Records in selection([UnitType])=0)
WS_RET_CODE:=False
WS_ERROR:="The Facility Code is invalid or there are 0 UnitTypes"
Else 
FIRST RECORD([UnitType])
For ($i;1;Records in selection([UnitType]))
INSERT IN ARRAY(WS_UnitTypeID;Size of array(WS_UnitTypeID)+1)
INSERT IN ARRAY(WS_TypeDescription;Size of array(WS_TypeDescription)+1)
INSERT IN ARRAY(WS_MinimumPrice;Size of array(WS_MinimumPrice)+1)
INSERT IN ARRAY(WS_Avaliability;Size of array(WS_Avaliability)+1)
INSERT IN ARRAY(WS_Measure;Size of array(WS_Measure)+1)
INSERT IN ARRAY(WS_Width;Size of array(WS_Width)+1)
INSERT IN ARRAY(WS_Length;Size of array(WS_Length)+1)
INSERT IN ARRAY(WS_TotalNum;Size of array(WS_TotalNum)+1)
INSERT IN ARRAY(WS_NumAvailable;Size of array(WS_NumAvailable)+1)
INSERT IN ARRAY(WS_Height;Size of array(WS_Height)+1)
INSERT IN ARRAY(WS_Web_rental;Size of array(WS_Web_rental)+1)
INSERT IN ARRAY(WS_KioskRental;Size of array(WS_KioskRental)+1)
INSERT IN ARRAY(WS_Insurance;Size of array(WS_Insurance)+1)
WS_RET_CODE:=True
WS_UnitTypeID{$i}:=[UnitType]UnitTypeCode
WS_TypeDescription{$i}:=[UnitType]Description
WS_MinimumPrice{$i}:=[UnitType]MonthlyRate
WS_NumAvailable{$i}:=[UnitType]NoVacant
If ([UnitType]NoVacant>0)
WS_Avaliability{$i}:="Y"
Else 
WS_Avaliability{$i}:="N"
End if 
WS_TotalNum{$i}:=[UnitType]NoTotal
WS_Width{$i}:=[UnitType]UnitTypeWidth
WS_Length{$i}:=[UnitType]UnitTypeLength
QUERY([Facility];[Facility]FacilityCode=WS_FacilityID)
If (<>bMetric=False)
WS_Measure{$i}:="F"
Else 
WS_Measure{$i}:="M"
End if 
WS_Height{$i}:=0
WS_Web_rental{$i}:=""
WS_KioskRental{$i}:=""
WS_Insurance{$i}:="N"
NEXT RECORD([UnitType])
End for 
End if 

$String:="End WS_Insomniac_AllUnitTypes"+Char(13)
$String:=$String+"WS_RET_CODE: "+String(WS_RET_CODE)+Char(13)

$sizeofarray:=Size of array(WS_UnitTypeID)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_UnitTypeID("+String($vlElem)+"):"+WS_UnitTypeID{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_TypeDescription)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_TypeDescription("+String($vlElem)+"):"+WS_TypeDescription{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_MinimumPrice)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_MinimumPrice("+String($vlElem)+"):"+String(WS_MinimumPrice{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_Avaliability)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_Avaliability("+String($vlElem)+"):"+WS_Avaliability{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_NumAvailable)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_NumAvailable("+String($vlElem)+"):"+String(WS_NumAvailable{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_TotalNum)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_TotalNum("+String($vlElem)+"):"+String(WS_TotalNum{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_Measure)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_Measure("+String($vlElem)+"):"+WS_Measure{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_Width)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_Width("+String($vlElem)+"):"+String(WS_Width{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_Length)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_Length("+String($vlElem)+"):"+String(WS_Length{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_Height)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_Height("+String($vlElem)+"):"+String(WS_Height{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_Web_rental)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_Web_rental("+String($vlElem)+"):"+WS_Web_rental{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_KioskRental)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_KioskRental("+String($vlElem)+"):"+WS_KioskRental{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_Insurance)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_Insurance("+String($vlElem)+"):"+WS_Insurance{$vlElem}+Char(13)
End for 
$String:=$String+"WS_ERROR:"+WS_ERROR+Char(13)

WSRECORDLOG ($String)
ReadOnlyAll 
UnloadAll 
//%attributes = {"lang":"en"} comment added and reserved by 4D.
SHOW ON DISK(Get 4D folder+"4D Preferences v13.4DPreferences")




//``````````==========================S T A R T ===============================
$show_progress:=True//true or false

vtFormula:=""
//SQL LOGIN("Syrasoft";"";"holly")

$prefix:="S_"
$prefix2:="(SR)"

$time_start:=Current time
vtFormula:=vtFormula+Char(Carriage return)+"============== Syrasoft Converter in Storman ==============  "
vtFormula:=vtFormula+Char(Carriage return)+"started at:"+String($time_start)
$counter:=0

CONFIRM("Do you want to import Syrasoft data to Storman 4D ?")
If (OK=1)

Else 
ALERT("Operation canceled.")
ABORT
End if 

SQL LOGIN("ODBC:Syrasoft";"";"")
If (OK=1)
//QUERY([Agreement];[Agreement]AgreeNo=$tmpr_str)
//If (Records in selection>0)  /////////////// if exists old one
//DELETE SELECTION([Agreement])
//End if 


//DEFAULT TABLE([UnitType])
//READ WRITE([UnitType])
//READ WRITE([Unit])
//QUERY([Unit];[Unit]RUnitNo=(<>sFacility+"S_0205"))  //($prefix+$ttt))
//If (Records in selection([Unit])>0)  //` make changes in UnitTable
//$ss1=22
//End if 


//------------------- u n i t s ----------------------------------
ARRAY TEXT($UnitNo;0)
ARRAY LONGINT($UnitLocation;0)
ARRAY LONGINT($UnitTypeNo;0)
ARRAY LONGINT($UnitCustNo;0)
ARRAY BOOLEAN($UnitOpen;0)
ARRAY REAL($UnitRate;0)
ARRAY TEXT($UnitPeriod;0)
ARRAY DATE($UnitBillThru;0)
ARRAY BOOLEAN($UnitTaxable;0)
ARRAY LONGINT($UnitBillCatNo;0)
//ARRAY LONGINT($UnitBillCatNo2;0)
ARRAY LONGINT($UnitDOM;0)
ARRAY REAL($UnitAccessCode;0)
//ARRAY LONGINT($UnitKeyPadZone;0)
ARRAY BOOLEAN($UnitUnAvailable;0)
ARRAY DATE($UnitLastIncreaseDate;0)
ARRAY REAL($UnitLastRate;0)
ARRAY LONGINT($UnitLeaseNumber;0)

ARRAY LONGINT($UnitWidthofunit;0)
ARRAY LONGINT($UnitHeightofunit;0)


$SQLStm:="SELECT UnitNo, Location, TypeNo,CustNo,Open,Rate,Period,BillThru,Taxable,BillCatNo,DOM,AccessCode,UnAvailable,LastIncreaseDate,LastRate,LeaseNumber,widthofunit,heightofunit FROM Units"
SQL EXECUTE($SQLStm;$UnitNo;$UnitLocation;$UnitTypeNo;$UnitCustNo;$UnitOpen;$UnitRate;$UnitPeriod;$UnitBillThru;$UnitTaxable;$UnitBillCatNo;$UnitDOM;$UnitAccessCode;$UnitUnAvailable;$UnitLastIncreaseDate;$UnitLastRate;$UnitLeaseNumber;$UnitWidthofunit;$UnitHeightofunit)
SQL LOAD RECORD(SQL all records)
$Unit_Count:=Size of array($UnitNo)
SQL CANCEL LOAD

//------------------- u n i t  T y p e s ----------------------------------
ARRAY LONGINT($UnTypeTypeNo;0)
ARRAY TEXT($UnTypeDescription;0)
ARRAY LONGINT($UnTypeAvailable;0)
ARRAY REAL($UnTypeMonRate;0)
ARRAY REAL($UnTypeAnnRate;0)
ARRAY REAL($UnTypeBiAnnRate;0)
ARRAY REAL($UnTypeWkRate;0)
ARRAY REAL($UnType28DRate;0)
ARRAY BOOLEAN($UnTypeTaxable;0)
ARRAY LONGINT($UnTypeBillCatNo;0)
ARRAY REAL($UnTypeQRate;0)
ARRAY REAL($UnTypeLateFee1;0)
ARRAY REAL($UnTypeLateFee2;0)
ARRAY REAL($UnTypeLateFee3;0)
ARRAY REAL($UnTypeLateFee4;0)
ARRAY TEXT($UnTypeOpenUnits;0)
ARRAY REAL($UnTypeMonHghRate;0)
ARRAY REAL($UnTypeMonStdRate;0)
ARRAY REAL($UnTypeMonLowRate;0)
ARRAY REAL($UnTypeSetUpFee;0)


$SQLStm:="SELECT TypeNo, Description, Available,MonRate,AnnRate,BiAnnRate,WeeklyRate,TwentyEightDayRate,Taxable,BillCatNo,QRate,LateFee1,LateFee2,LateFee3,LateFee4,OpenUnitsofType,MonHighRate,MonStdRate,MonLowRate,SetUpFee FROM UnitType"
SQL EXECUTE($SQLStm;$UnTypeTypeNo;$UnTypeDescription;$UnTypeAvailable;$UnTypeMonRate;$UnTypeAnnRate;$UnTypeBiAnnRate;$UnTypeWkRate;$UnType28DRate;$UnTypeTaxable;$UnTypeBillCatNo;$UnTypeQRate;$UnTypeLateFee1;$UnTypeLateFee2;$UnTypeLateFee3;$UnTypeLateFee4;$UnTypeOpenUnits;$UnTypeMonHghRate;$UnTypeMonStdRate;$UnTypeMonLowRate;$UnTypeSetUpFee)
SQL LOAD RECORD(SQL all records)
SQL CANCEL LOAD

//------------------- C u s t o m e r s ----------------------------------
ARRAY LONGINT($Customer_CustNo;0)
ARRAY LONGINT($Customer_Location;0)
ARRAY TEXT($Customer_LastName;0)
ARRAY TEXT($Customer_FirstName;0)
ARRAY TEXT($Customer_Address1;0)
ARRAY TEXT($Customer_Address2;0)
ARRAY TEXT($Customer_City;0)
ARRAY TEXT($Customer_State;0)
ARRAY TEXT($Customer_Zip;0)
ARRAY TEXT($Customer_Country;0)
ARRAY TEXT($Customer_Phone;0)
ARRAY TEXT($Customer_Phone2;0)
ARRAY BOOLEAN($Customer_Statement;0)
ARRAY REAL($Customer_Balance;0)
ARRAY REAL($Customer_Deposit;0)
ARRAY TEXT($Customer_Salutation;0)
ARRAY TEXT($Customer_AccessNo;0)
ARRAY LONGINT($Customer_PayTypeNo;0)
ARRAY TEXT($Customer_CCNum;0)
ARRAY BOOLEAN($Customer_NewRent;0)
ARRAY BOOLEAN($Customer_Active;0)
ARRAY DATE($Customer_LastPayment;0)
ARRAY REAL($Customer_LastPayAmt;0)
ARRAY BOOLEAN($Customer_Lockout;0)
ARRAY REAL($Customer_Over30;0)
ARRAY REAL($Customer_Over60;0)
ARRAY REAL($Customer_Over90;0)
ARRAY DATE($Customer_LateSince;0)
ARRAY BOOLEAN($Customer_LateCharges;0)
ARRAY TEXT($Customer_Comments;0)
ARRAY TEXT($Customer_CustID;0)
ARRAY TEXT($Customer_SSN;0)
ARRAY TEXT($Customer_AllUnits;0)
ARRAY TEXT($Customer_CCExpMonth;0)
ARRAY TEXT($Customer_CCExpYear;0)
ARRAY BOOLEAN($Customer_Deleted;0)
ARRAY BOOLEAN($Customer_LastPayTypeNo;0)
ARRAY DATE($Customer_DOB;0)
ARRAY LONGINT($Customer_LastPaymentCtrlNum;0)
ARRAY TEXT($Customer_EmailAddress;0)
ARRAY BOOLEAN($Customer_CCReceipt;0)
ARRAY BOOLEAN($Customer_CCStatement;0)
ARRAY DATE($Customer_InvoicedTo;0)
ARRAY TEXT($Customer_CCAddress;0)
ARRAY TEXT($Customer_CCZip;0)
ARRAY TEXT($Customer_CCName;0)
ARRAY TEXT($Customer_CellPhone;0)
ARRAY DATE($Customer_LastContactDate;0)
ARRAY LONGINT($Customer_MasterID;0)
ARRAY BOOLEAN($Customer_AutoCCBill;0)

$SQLStm:="SELECT CustNo,Location,LastName,FirstName,Address1,Address2,City,State,Zip,Country,Phone,Phone2,Statement,Balance,Deposit,Salutation,AccessNo,PayTypeNo,CCNum,NewRent,Active,LastPayment,LastPayAmt,Lockout,Over30,Over60,Over90,LateSince,LateCharges,Comm"+"ents,CustID,SSN,AllUnits,CCExpMonth,CCExpYear,Deleted,LastPayTypeNo,DOB,LastPaymentCtrlNum,EmailAddress,CCReceipt,CCStatement,InvoicedTo,CCAddress,CCZip,CCName,CellPhone,LastContactDate,MasterID, AutoCCBill   FROM Customer where Deleted=False"
SQL EXECUTE($SQLStm;$Customer_CustNo;$Customer_Location;$Customer_LastName;$Customer_FirstName;$Customer_Address1;$Customer_Address2;$Customer_City;$Customer_State;$Customer_Zip;$Customer_Country;$Customer_Phone;$Customer_Phone2;$Customer_Statement;$Customer_Balance;$Customer_Deposit;$Customer_Salutation;$Customer_AccessNo;$Customer_PayTypeNo;$Customer_CCNum;$Customer_NewRent;$Customer_Active;$Customer_LastPayment;$Customer_LastPayAmt;$Customer_Lockout;$Customer_Over30;$Customer_Over60;$Customer_Over90;$Customer_LateSince;$Customer_LateCharges;$Customer_Comments;$Customer_CustID;$Customer_SSN;$Customer_AllUnits;$Customer_CCExpMonth;$Customer_CCExpYear;$Customer_Deleted;$Customer_LastPayTypeNo;$Customer_DOB;$Customer_LastPaymentCtrlNum;$Customer_EmailAddress;$Customer_CCReceipt;$Customer_CCStatement;$Customer_InvoicedTo;$Customer_CCAddress;$Customer_CCZip;$Customer_CCName;$Customer_CellPhone;$Customer_LastContactDate;$Customer_MasterID;$Customer_AutoCCBill)

SQL LOAD RECORD(SQL all records)
$Customer_Count:=Size of array($Customer_CustNo)
SQL CANCEL LOAD


//------------------- P L A N  ----------------------------------

ARRAY TEXT($Plan_SS_Code;0)

ARRAY LONGINT($Plan_PlanID;0)
ARRAY TEXT($Plan_Description;0)
ARRAY REAL($Plan_AdminCharge;0)
ARRAY REAL($Plan_Deposit;0)
ARRAY INTEGER($Plan_BilledMonths;0)

$SQLStm:="SELECT PlanID,Description,AdminCharge,Deposit,BilledMonths   FROM Plan "
SQL EXECUTE($SQLStm;$Plan_PlanID;$Plan_Description;$Plan_AdminCharge;$Plan_Deposit;$Plan_BilledMonths)
SQL LOAD RECORD(SQL all records)
SQL CANCEL LOAD

//``=============================== Build SM  Tables  ====================================================
//``` =================================build Customer table==================================

//`------------------------!!!!!Matching SRS & SM  CustomerCode!!!!!!!!!  ----------------------------------

ARRAY INTEGER($tblMatchingCustNo;0)//SRS
ARRAY TEXT($tblMatchingCustomerCode;0)//SM

DEFAULT TABLE([Customer])
READ WRITE([Customer])

$cust_imported:=0
$counter:=0


If ($show_progress=True)
<>ProgressInd:=0
Progress ("Build Customer table...")
End if 

For ($vlElem;1;Size of array($Customer_CustNo))
If ($show_progress=True)
<>ProgressInd:=Trunc(($vlElem/Size of array($Customer_CustNo))*100;0)
End if 

$Name13:=RemoveSpecial ($Customer_FirstName{$vlElem}+$Customer_LastName{$vlElem})
If (Length($Name13)>2)
QUERY([Customer];[Customer]CustomerName=RemoveSpecial ($Customer_FirstName{$vlElem})+", "+RemoveSpecial ($Customer_LastName{$vlElem})+$prefix2)//Delete string(<>sFacility+$prefix+$RP_UnitNumber{$vlElem};15;32000))
If (Records in selection>0)
DELETE SELECTION([Customer])
End if 
$cust_imported:=$cust_imported+1

vName:=$Name13
CreateCustCode (True;True)
[Customer]CustomerName:=RemoveSpecial ($Customer_FirstName{$vlElem})+", "+RemoveSpecial ($Customer_LastName{$vlElem})+$prefix2

[Customer]StreetAddress:=$Customer_Address1{$vlElem}
[Customer]MailAddress:=$Customer_Address1{$vlElem}
[Customer]StreetCity:=$Customer_City{$vlElem}
[Customer]MailCity:=$Customer_City{$vlElem}
[Customer]MailPostZIPCode:=$Customer_Zip{$vlElem}
[Customer]MailState:=$Customer_State{$vlElem}
[Customer]MailCountry:=$Customer_Country{$vlElem}
[Customer]PhoneBus:=$Customer_Phone{$vlElem}
[Customer]FirstName:=RemoveSpecial ($Customer_FirstName{$vlElem})
[Customer]DateofBirth:=$Customer_DOB{$vlElem}
[Customer]EmailAddress:=$Customer_EmailAddress{$vlElem}
[Customer]MobilePhone:=$Customer_CellPhone{$vlElem}


//`//===========!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!=============================
APPEND TO ARRAY($tblMatchingCustNo;$Customer_CustNo{$vlElem})
APPEND TO ARRAY($tblMatchingCustomerCode;[Customer]CustomerCode)

SAVE RECORD([Customer])
NEXT RECORD([Customer])
$counter:=$counter+1
End if 
End for 
If ($show_progress=True)
<>ProgressInd:=100
End if 

//------------------------------------Plan table-------------------
$counter:=0

ARRAY TEXT($PlanPeriods;0)//SM
$SQLStm:="SELECT Distinct Period from units "
SQL EXECUTE($SQLStm;$PlanPeriods)
SQL LOAD RECORD(SQL all records)


READ WRITE([BillPlan])
DEFAULT TABLE([BillPlan])

For ($vlElem;1;Size of array($PlanPeriods))

//==========================
$BCode:=""
$BDescr:=""
$BPeriod:=""
$PerPay:=1

Case of 
: ($PlanPeriods{$vlElem}="A")
$BCode:="A"
$BDescr:="Yearly"
$BPeriod:="Year"
$PerPay:=11
: ($PlanPeriods{$vlElem}="B")// Test if the number is 2
$BCode:="B"
$BDescr:="2 Monthly"
$BPeriod:="2Month"
$PerPay:=2
: ($PlanPeriods{$vlElem}="M")
$BCode:="M"
$BDescr:="Monthly"
$BPeriod:="Month"
$PerPay:=1
Else 
//ALERT("No Bill Plan")
End case 
QUERY([BillPlan];[BillPlan]Code=Delete string(<>sFacility+$prefix+$BCode;9;32000))
If (Records in selection>0)
DELETE SELECTION([BillPlan])
End if 
/////////////////////////////////
CREATE RECORD([BillPlan])
[BillPlan]Code:=<>sFacility+$prefix+$BCode
[BillPlan]Description:=$BDescr
[BillPlan]PlanPeriod:="1m"//$RP_tblPlan_CycleLength{$vlElem}
//If ($Plan_PlanID{$vlElem}=1) & ($Plan_PlanID{$vlElem}=1) & ($Plan_PlanID{$vlElem}=3)
//[BillPlan]DiscPercentage:=50
//End if 
$msr:="Month"
[BillPlan]PlanPeriod:=$msr
[BillPlan]SortOrder:=1
[BillPlan]PeriodstoPay:=$PerPay//1  //$nbd

SAVE RECORD([BillPlan])
NEXT RECORD([BillPlan])

End for 
//------------------------------------Unit Type table-------------------

READ WRITE([UnitType])
DEFAULT TABLE([UnitType])
$counter:=0
ARRAY INTEGER($tot_un;0)


For ($vlElem;1;Size of array($UnTypeTypeNo))
QUERY([UnitType];[UnitType]RUnitType=Delete string(<>sFacility+$prefix+String($UnTypeTypeNo{$vlElem});15;32000))
If (Records in selection>0)
DELETE SELECTION([UnitType])
End if 
///If (Records in selection<1)  //` no duplicates
CREATE RECORD([UnitType])
[UnitType]RUnitType:=Delete string(<>sFacility+$prefix+String($UnTypeTypeNo{$vlElem});15;32000)
[UnitType]UnitTypeCode:=$prefix+String($UnTypeTypeNo{$vlElem})
[UnitType]Description:=Delete string($UnTypeDescription{$vlElem};20;32000)

[UnitType]MonthlyRate:=$UnTypeMonRate{$vlElem}
[UnitType]WeeklyRate:=$UnTypeWkRate{$vlElem}
//[UnitType]DailyRate:=  //$RP_UnitDailyRate{$vlElem}
[UnitType]NoVacant:=$UnTypeAvailable{$vlElem}



$SQLStm:="SELECT Count(TypeNo)from units Where TypeNo="+String($UnTypeTypeNo{$vlElem})
SQL EXECUTE($SQLStm;$tot_un)
SQL LOAD RECORD(SQL all records)

[UnitType]NoTotal:=$tot_un{1}
SAVE RECORD([UnitType])
NEXT RECORD([UnitType])
$counter:=$counter+1

End for 


//------------------------------------Unit table-------------------
$counter:=0
DEFAULT TABLE([Unit])
READ WRITE([Unit])
READ WRITE([UnitType])

If ($show_progress=True)
<>ProgressInd:=0
Progress ("Build Unit table...")
End if 

For ($vlElem;1;Size of array($UnitNo))

If ($show_progress=True)
<>ProgressInd:=Trunc(($vlElem/Size of array($UnitNo))*100;0)
End if 

QUERY([Unit];[Unit]RUnitNo=Delete string(<>sFacility+$prefix+$UnitNo{$vlElem};21;32000))
If (Records in selection>0)
DELETE SELECTION([Unit])
End if 
CREATE RECORD([Unit])// Create a new  record 
[Unit]UnitNo:=$prefix+$UnitNo{$vlElem}// Copy fields to the archive record 

[Unit]RUnitNo:=<>sFacility+$prefix+$UnitNo{$vlElem}
[Unit]UnitTypeCode:=<>sFacility+$prefix+String($UnitTypeNo{$vlElem})
[Unit]AgreeNo:=""

//[Unit]UnitLength:=Num($RP_UnitSize{1}{$vlfind})
//$UnitWidthofunit;$UnitHeightofunit
[Unit]UnitWidth:=Num($UnitWidthofunit{$vlElem})
[Unit]Height:=Num($UnitHeightofunit{$vlElem})
[Unit]UnitSize:=String($UnitWidthofunit{$vlElem})+"x"+String($UnitHeightofunit{$vlElem})+" "
//$tmpr:=$RP_UnitSize{3}{$vlfind}
//If (Num($tmpr)>0)
//$tmpr:=$RP_UnitSize{3}{$vlfind}
//[Unit]UnitSize:=[Unit]UnitSize+"x"+String($tmpr)+" "
//End if 

//$status1:=""
$status2:=""
$vacant1:=False

ARRAY INTEGER($tmp;0)
ARRAY TEXT($tmp2;0)

//-------------------
$SQLStm:="SELECT unitstatusid from unitstatusFull Where UnitNo='"+String($UnitNo{$vlElem})+"' Order by FullUnitStatusID Desc"
SQL EXECUTE($SQLStm;$tmp)
SQL LOAD RECORD(SQL all records)

$status1:=$tmp{1}


$SQLStm:="SELECT Description from unitstatus Where UnitStatusID="+String($status1)
SQL EXECUTE($SQLStm;$tmp2)
SQL LOAD RECORD(SQL all records)

$status2:=$tmp2{1}
[Unit]Status:=$status2///////$RP_StatusNow{$vlElem}
If ($status2="Vacant")

$vacant1:=True
End if 

[Unit]Vacant:=$vacant1
[Unit]RentedValue:=$UnitRate{$vlElem}

SAVE RECORD([Unit])
NEXT RECORD([Unit])
$counter:=$counter+1

//If ($vacant1=True)
//QUERY([UnitType];[UnitType]RUnitType=(<>sFacility+$prefix+$RP_UnitNumber{$vlElem}))
//If (Records in selection=1)
//[UnitType]NoVacant:=1
//SAVE RECORD([UnitType])
//End if 
//End if 
End for 

If ($show_progress=True)
<>ProgressInd:=100
End if 
//` =================================build Agreement table==================================

//  // Moves table as base//
// movein
ARRAY LONGINT($Moves_MoveID1;0)
ARRAY DATE($Moves_MoveDate1;0)
ARRAY DATE($Moves_TranDate1;0)
ARRAY LONGINT($Moves_Action1;0)//0-movein,1-moveout
ARRAY BOOLEAN($Moves_Transfer1;0)
ARRAY REAL($Moves_refund1;0)
ARRAY REAL($Moves_rate1;0)
ARRAY LONGINT($Moves_CustNo1;0)
ARRAY TEXT($Moves_UnitNo1;0)
ARRAY DATE($Moves_MoveInDate1;0)
//move out
ARRAY LONGINT($Moves_MoveID2;0)
ARRAY DATE($Moves_MoveDate2;0)
ARRAY DATE($Moves_TranDate2;0)
ARRAY LONGINT($Moves_Action2;0)//0-movein,1-moveout
ARRAY BOOLEAN($Moves_Transfer2;0)
ARRAY REAL($Moves_refund2;0)
ARRAY REAL($Moves_rate2;0)
ARRAY LONGINT($Moves_CustNo2;0)
ARRAY TEXT($Moves_UnitNo2;0)
ARRAY DATE($Moves_MoveInDate2;0)

ARRAY TEXT($Period;0)

$flag_Active_agr:=True


ARRAY LONGINT($Moves_CustNo;0)
ARRAY TEXT($Moves_UnitNo;0)
$counter:=0

DEFAULT TABLE([Agreement])
READ WRITE([Agreement])
READ WRITE([Unit])
READ WRITE([UnitHistory])
READ WRITE([UnitType])

$units_agrrrr:=0
//ARRAY INTEGER($tblMatchingCustNo;0)  //SRS
//ARRAY TEXT($tblMatchingCustomerCode;0)  //SM

If ($show_progress=True)
<>ProgressInd:=0
Progress ("Build Agreement table...")
End if 


For ($vlElem;1;Size of array($tblMatchingCustNo))

If ($show_progress=True)
<>ProgressInd:=Trunc(($vlElem/Size of array($tblMatchingCustNo))*100;0)
End if 


$CustCode_SRS:=$tblMatchingCustNo{$vlElem}
$CustCode_SM:=$tblMatchingCustomerCode{$vlElem}


$SQLStm:="SELECT MoveID, MoveDate,TranDate, Action, UnitNo,Transfer,refund,rate,MoveInDate  FROM Moves "
$SQLStm:=$SQLStm+" WHERE CustNo="+String($CustCode_SRS)+" and Action=0 order by MoveId"
SQL EXECUTE($SQLStm;$Moves_MoveID1;$Moves_MoveDate1;$Moves_TranDate1;$Moves_Action1;$Moves_UnitNo1;$Moves_Transfer1;$Moves_refund1;$Moves_rate1;$Moves_MoveInDate1)
SQL LOAD RECORD(SQL all records)
SQL CANCEL LOAD

For ($vlElem1;1;Size of array($Moves_MoveID1))
$tmpr_str:=$prefix+String($Moves_MoveID1{$vlElem1})
$lng_str:=Length($tmpr_str)
If $lng_str<10
While ($lng_str<9)// Loop as long as the user wants to
$tmpr_str:="0"+$tmpr_str
$lng_str:=Length($tmpr_str)
End while 
End if 
QUERY([Agreement];[Agreement]AgreeNo=$tmpr_str)
If (Records in selection>0)/////////////// if exists old one
DELETE SELECTION([Agreement])
End if 
CREATE RECORD([Agreement])

[Agreement]ActiveAgreemt:=True
$flag_Active_agr:=True
[Agreement]CustomerCode:=$CustCode_SM
[Agreement]AgreeNo:=$tmpr_str
[Agreement]RAgreeNo:=<>sFacility+$tmpr_str
[Agreement]MoveIn:=$Moves_MoveDate1{$vlElem1}
[Agreement]NoticePlanNo:=0
[Agreement]NoticeAmtToBill:=0
[Agreement]RentAmt:=$Moves_rate1{$vlElem1}
[Agreement]UnitsOccup:=$prefix+$Moves_UnitNo1{$vlElem1}

//$tmp_date:=(Day of();Month of($Moves_MoveDate1{$vlElem1});Year of($Moves_MoveDate1{$vlElem1}))
//$tmp_day:=Day of($Moves_MoveDate1{$vlElem1})
//$tmp_month:=Month of($Moves_MoveDate1{$vlElem1})
//$tmp_year:=Year of($Moves_MoveDate1{$vlElem1})

$SQLStm1:="SELECT MoveID, MoveDate,TranDate, Action, UnitNo,Transfer,refund,rate,MoveInDate  FROM Moves "
$SQLStm1:=$SQLStm1+" WHERE CustNo="+String($CustCode_SRS)+" and UnitNo='"+$Moves_UnitNo1{$vlElem1}+"' and Action=1 "
SQL EXECUTE($SQLStm1;$Moves_MoveID2;$Moves_MoveDate2;$Moves_TranDate2;$Moves_Action2;$Moves_UnitNo2;$Moves_Transfer2;$Moves_refund2;$Moves_rate2;$Moves_MoveInDate2)
SQL LOAD RECORD(SQL all records)
SQL CANCEL LOAD

For ($vlElem4;1;Size of array($Moves_MoveID2))// if moved out
If ($Moves_MoveID2{$vlElem4}>$Moves_MoveID1{$vlElem1})//($Moves_MoveDate1{$vlElem1}=$Moves_MoveInDate2{$vlElem4})
[Agreement]MoveOut:=$Moves_MoveDate2{$vlElem4}
[Agreement]ActiveAgreemt:=False
$flag_Active_agr:=False
//[Agreement]UnitsOccup:=""
End if 

End for 


If ($flag_Active_agr=True)

$tmp_date:=[Agreement]MoveIn
$nextbd:=[Agreement]MoveIn//` starting point

$SQLStm:="SELECT Period  FROM Units "
$SQLStm:=$SQLStm+" WHERE UnitNo='"+$Moves_UnitNo1{$vlElem1}+"'"
SQL EXECUTE($SQLStm;$Period)
SQL LOAD RECORD(SQL all records)
SQL CANCEL LOAD

QUERY([BillPlan];[BillPlan]Code=$Period{1})
If (Records in selection([BillPlan])=1)
//===========================
If ([BillPlan]PlanPeriod="Month")
If (Current date>$nextbd)
While (Current date>$nextbd)
$nextbd:=Add to date($nextbd;0;[BillPlan]PeriodstoPay;0)
End while 
End if 
[Agreement]NextBillDate:=$nextbd
[Agreement]LastBillDate:=Add to date($nextbd;0;-[BillPlan]PeriodstoPay;0)
[Agreement]PriorLastBill:=Add to date($nextbd;0;-2*[BillPlan]PeriodstoPay;0)
[Agreement]MthsAdv:=[BillPlan]PeriodstoPay
[Agreement]DaytoBill:=Day of([Agreement]MoveIn)
[Agreement]BillingPlanCode:=<>sFacility+$prefix+$Period{1}

End if 
// /End if 
If ([BillPlan]PlanPeriod="2Month")
If (Current date>$nextbd)
While (Current date>$nextbd)
$nextbd:=Add to date($nextbd;0;2*[BillPlan]PeriodstoPay;0)
End while 
End if 
[Agreement]NextBillDate:=$nextbd
[Agreement]LastBillDate:=Add to date($nextbd;0;-2*[BillPlan]PeriodstoPay;0)
[Agreement]PriorLastBill:=Add to date($nextbd;0;-4*[BillPlan]PeriodstoPay;0)
[Agreement]MthsAdv:=[BillPlan]PeriodstoPay
[Agreement]DaytoBill:=Day of([Agreement]MoveIn)
[Agreement]BillingPlanCode:=<>sFacility+$prefix+$Period{1}
End if 
//----------------------------------
If ([BillPlan]PlanPeriod="Year")
If (Current date>$nextbd)
While (Current date>$nextbd)
$nextbd:=Add to date($nextbd;[BillPlan]PeriodstoPay;0;0)
End while 
End if 
[Agreement]NextBillDate:=$nextbd
[Agreement]LastBillDate:=Add to date($nextbd;-[BillPlan]PeriodstoPay;0;0)
[Agreement]PriorLastBill:=Add to date($nextbd;-2*[BillPlan]PeriodstoPay;0;0)
[Agreement]MthsAdv:=[BillPlan]PeriodstoPay
[Agreement]DaytoBill:=Day of([Agreement]MoveIn)
[Agreement]BillingPlanCode:=<>sFacility+$prefix+$Period{1}
End if 

Else 
//` put it to one month plan
If (Current date>$nextbd)
While (Current date>$nextbd)
$nextbd:=Add to date($nextbd;0;1;0)
End while 
End if 
[Agreement]BillingPlanCode:=<>sFacility+$prefix+"M"
[Agreement]NextBillDate:=$nextbd
[Agreement]LastBillDate:=Add to date($nextbd;0;-1;0)
[Agreement]PriorLastBill:=Add to date($nextbd;0;-2;0)
[Agreement]MthsAdv:=1//[BillPlan]PeriodstoPay
[Agreement]DaytoBill:=Day of([Agreement]MoveIn)

End if 
///End if 
///////////////////////////////////////////////
//SAVE RECORD([Agreement])
//NEXT RECORD([Agreement])


QUERY([Unit];[Unit]UnitNo=($prefix+String($Moves_UnitNo1{$vlElem1})))
If (Records in selection([Unit])=1)//` make changes in UnitTable

If ([Unit]Vacant=True)
[Unit]AgreeNo:=""
SAVE RECORD([Unit])
Else 
[Unit]AgreeNo:=(<>sFacility+$tmpr_str)
[Unit]MoveIn:=[Agreement]MoveIn
[Unit]MoveOut:=[Agreement]MoveOut
[Unit]Vacant:=False
SAVE RECORD([Unit])
End if 
End if 

CREATE RECORD([UnitHistory])
[UnitHistory]AgreeNo:=(<>sFacility+$tmpr_str)////([Unit]AgreeNo)
[UnitHistory]UnitNo:=([Unit]RUnitNo)

If ([Agreement]MoveIn<!1980-01-01!)
[UnitHistory]MoveIn:=!2000-01-01!
Else 
[UnitHistory]MoveIn:=([Agreement]MoveIn)
End if 
[UnitHistory]RentedValue:=([Unit]RentedValue)
SAVE RECORD([UnitHistory])

SAVE RECORD([Agreement])
NEXT RECORD([Agreement])

End if //active

End for 
End for 
If ($show_progress=True)
<>ProgressInd:=100
End if 
/////////////////////////////////////
//  //  //` =================================Unit-Agreement synchronisation==================================
//DEFAULT TABLE([Unit])
//READ WRITE([Agreement])
//READ WRITE([UnitHistory])
//READ WRITE([UnitType])
//
//ALL RECORDS([Unit])
//
//If ($show_progress=True)
//<>ProgressInd:=0
//Progress ("Unit-Agreement synchro...")
//End if 
//
//If (Records in selection([Unit])>0)
//
//FIRST RECORD([Unit])  // Start at first record in the selection 
//For ($vlRecord;1;Records in selection([Unit]))  // Loop once for each record 
//
//If ($show_progress=True)
//<>ProgressInd:=Trunc(($vlElem/Records in selection([Unit]))*100;0)
//End if 
//
//
//If ([Unit]AgreeNo#"")
//If (Position($prefix;([Unit]UnitNo))>0)
//QUERY([Agreement];[Agreement]RAgreeNo=([Unit]AgreeNo))
//If (Records in selection([Agreement])=1)
//  //`update movin in units
///////[Unit]MoveIn:=[Agreement]MoveIn
//////SAVE RECORD([Unit])
//
//CREATE RECORD([UnitHistory])
//[UnitHistory]AgreeNo:=([Unit]AgreeNo)  
//[UnitHistory]UnitNo:=([Unit]RUnitNo) 
//
//If ([Agreement]MoveIn<!01/01/1980!)
//[UnitHistory]MoveIn:=!01/01/2000!
//Else 
//[UnitHistory]MoveIn:=([Agreement]MoveIn)
//End if 
//[UnitHistory]RentedValue:=([Unit]RentedValue)
//SAVE RECORD([UnitHistory])
//
//$quant:=0
//
//  //SAVE RECORD([Agreement])
//  //[Agreement]RentAmt:=([Unit]RentedValue)
//  //SAVE RECORD([Agreement])
//  //[Agreement]RegularRent:=([Unit]RentedValue)
//  //SAVE RECORD([Agreement])
//End if 
//End if 
//End if 
//NEXT RECORD([Unit])  // Move to the next record 
//End for 
//If ($show_progress=True)
//<>ProgressInd:=100
//End if 
//End if 

//```removes empty ones
//`--------------------------------
//$tmp:="@"+$prefix+"@"
//QUERY([Agreement];[Agreement]RAgreeNo=$tmp;*)
//QUERY([Agreement]; & ;[Agreement]UnitsOccup="")
//If (Records in selection([Agreement])>0)
//DELETE SELECTION([Agreement])
//End if 




//``/` =================================build TRX(transactions) table==================================

ARRAY LONGINT($Fi_CtrlNum;0)
ARRAY LONGINT($Fi_TenantID;0)
ARRAY DATE($Fi_EffDate;0)
ARRAY REAL($Fi_Amount;0)
ARRAY REAL($Fi_AmountOwed;0)
ARRAY LONGINT($Fi_FiTranType;0)
ARRAY LONGINT($Fi_BillCatID;0)
ARRAY LONGINT($Fi_PayTypeID;0)
ARRAY TEXT($Fi_UnitNO;0)
ARRAY TEXT($Fi_Comments;0)
ARRAY LONGINT($Fi_TaxFromCtrlNum;0)
ARRAY DATE($Fi_FromDate;0)
ARRAY DATE($Fi_ToDate;0)


ARRAY LONGINT($Income_TenantID;0)
ARRAY REAL($Income_Amount;0)
ARRAY LONGINT($Income_FromCtrNum;0)
ARRAY LONGINT($Income_ToCtrNum;0)
ARRAY DATE($Income_EffDate;0)
ARRAY LONGINT($Income_BillCatID;0)

ARRAY LONGINT($BillCatNo;0)
ARRAY TEXT($BillCatDesc;0)

$SQLStm:="SELECT BillCatNo, BillCatDesc FROM BillCat "
SQL EXECUTE($SQLStm;$BillCatNo;$BillCatDesc)
SQL LOAD RECORD(SQL all records)
SQL CANCEL LOAD

//` remove previously created 
$tmp1:=""
$tmp1:=<>sFacility+"@"+$prefix+"@"
QUERY([Trxs];[Trxs]AgreeNo=$tmp1)
If (Records in selection([Trxs])>0)
DELETE SELECTION([Trxs])
End if 

DEFAULT TABLE([Trxs])
READ WRITE([Agreement])
READ WRITE([Analysis])
$units_agrrrr:=0

If ($show_progress=True)
<>ProgressInd:=0
Progress ("Build Transactions table...")
End if 

For ($vlElem;1;Size of array($tblMatchingCustNo))

If ($show_progress=True)
<>ProgressInd:=Trunc(($vlElem/Size of array($tblMatchingCustNo))*100;0)
End if 


$CustCode_SRS:=$tblMatchingCustNo{$vlElem}
$CustCode_SM:=$tblMatchingCustomerCode{$vlElem}

$SQLStm:="SELECT CtrlNum, TenantID, EffDate, Amount, AmountOwed, FiTranType, BillCatID, PayTypeID, UnitNO, Comments, TaxFromCtrlNum,FromDate,ToDate  FROM FiTran "
$SQLStm:=$SQLStm+" WHERE TenantID="+String($CustCode_SRS)+" Order by CtrlNum "
SQL EXECUTE($SQLStm;$Fi_CtrlNum;$Fi_TenantID;$Fi_EffDate;$Fi_Amount;$Fi_AmountOwed;$Fi_FiTranType;$Fi_BillCatID;$Fi_PayTypeID;$Fi_UnitNO;$Fi_Comments;$Fi_TaxFromCtrlNum;$Fi_FromDate;$Fi_ToDate)
SQL LOAD RECORD(SQL all records)
SQL CANCEL LOAD
//=====================================
For ($vlElem1;1;Size of array($Fi_CtrlNum))



If ($Fi_FiTranType{$vlElem1}=0)///////////////////////////////////c h a r g e s

If ($Fi_BillCatID{$vlElem1}#7)// T A X 


QUERY([Agreement];[Agreement]CustomerCode=$CustCode_SM;*)
QUERY([Agreement]; & ;[Agreement]UnitsOccup=($prefix+$Fi_UnitNO{$vlElem1});*)
QUERY([Agreement]; & ;[Agreement]ActiveAgreemt=True)////////////// only opened agreements

If (Records in selection([Agreement])=1)

CREATE RECORD([Trxs])

$idx:=0
$idx:=Find in array($BillCatNo;$Fi_BillCatID{$vlElem1})
If ($idx>0)
[Trxs]Description:=$BillCatDesc{$idx}
End if 

[Trxs]AgreeNo:=[Agreement]RAgreeNo
[Trxs]TrxDate:=$Fi_EffDate{$vlElem1}
[Trxs]CustomerCode:=$CustCode_SM
[Trxs]DateFrom:=$Fi_FromDate{$vlElem1}
[Trxs]DateTo:=$Fi_ToDate{$vlElem1}

[Trxs]Charge:=True
[Trxs]Confirmed:=True

$Net_Amt:=$Fi_Amount{$vlElem1}

ARRAY REAL($tmp_tax;0)
$SQLStm:="SELECT Amount FROM FiTran Where TaxFromCtrlNum= "+String($Fi_CtrlNum{$vlElem1})
SQL EXECUTE($SQLStm;$tmp_tax)
SQL LOAD RECORD(SQL all records)
SQL CANCEL LOAD

If (Size of array($tmp_tax)=1)
[Trxs]TaxAmt:=$tmp_tax{1}
Else 
[Trxs]TaxAmt:=0
End if 
[Trxs]TotAmt:=$Net_Amt+[Trxs]TaxAmt
[Trxs]UnitNo:=$prefix+$Fi_UnitNO{$vlElem1}
[Trxs]TrxDate:=$Fi_EffDate{$vlElem1}
[Trxs]AnalysisCode:=<>sFacility+"RF"
SAVE RECORD([Trxs])
NEXT RECORD([Trxs])

End if 
End if // Tax
End if 

If ($Fi_FiTranType{$vlElem1}=1)///////////////////////////////////p a y m e n t s
//ARRAY LONGINT($Income_TenantID;0)
//ARRAY REAL($Income_Amount;0)
//ARRAY LONGINT($Income_FromCtrNum;0)
//ARRAY LONGINT($Income_ToCtrNum;0)
//ARRAY DATE($Income_EffDate;0)

$SQLStm:="SELECT Amount, EffDate, ToCtrlNum,BillCatID  FROM Income Where TenantId= "+String($CustCode_SRS)+" and FromCtrlNum ="+String($Fi_CtrlNum{$vlElem1})+" and Amount < 0"
SQL EXECUTE($SQLStm;$Income_Amount;$Income_EffDate;$Income_ToCtrNum;$Income_BillCatID)
SQL LOAD RECORD(SQL all records)
SQL CANCEL LOAD
For ($vlElem3;1;Size of array($Income_ToCtrNum))
$tmp_ToCtrlNum:=$Income_ToCtrNum{$vlElem3}
$tmp_unit:=""

$idx:=Find in array($Fi_CtrlNum;$tmp_ToCtrlNum)
If ($idx>0)
$tmp_unit:=$Fi_UnitNO{$idx}


QUERY([Agreement];[Agreement]CustomerCode=$CustCode_SM;*)
QUERY([Agreement]; & ;[Agreement]UnitsOccup=($prefix+$tmp_unit);*)
QUERY([Agreement]; & ;[Agreement]ActiveAgreemt=True)////////////// only opened agreements
If (Records in selection([Agreement])=1)
CREATE RECORD([Trxs])

$idx2:=0
$idx2:=Find in array($BillCatNo;$Income_BillCatID{$vlElem3})
If ($idx2>0)
[Trxs]Description:=$BillCatDesc{$idx2}
End if 
End if 

[Trxs]AgreeNo:=[Agreement]RAgreeNo
[Trxs]TrxDate:=$Income_EffDate{$vlElem3}
[Trxs]CustomerCode:=$CustCode_SM
//[Trxs]DateFrom:=$Fi_FromDate
//[Trxs]DateTo:=$Fi_ToDate
[Trxs]Charge:=False
[Trxs]Confirmed:=True

[Trxs]TotAmt:=-$Income_Amount{$vlElem3}
[Trxs]UnitNo:=$prefix+$tmp_unit
[Trxs]TrxDate:=$Income_EffDate{$vlElem3}
[Trxs]AnalysisCode:=<>sFacility+"RF"


SAVE RECORD([Trxs])
NEXT RECORD([Trxs])
End if 
End for 

End if 


End for 

End for // cust list

If ($show_progress=True)
<>ProgressInd:=100
End if 
//`-------------------------------update balances------------------------




READ WRITE([Agreement])
READ WRITE([Customer])
DEFAULT TABLE([Agreement])
QUERY([Agreement];[Agreement]RAgreeNo="@S_@")
////QUERY([Agreement];[Agreement]RAgreeNo="@R_73")

If ($show_progress=True)
<>ProgressInd:=0
Progress ("Updating balances...")
End if 


If (Records in selection([Agreement])>0)

For ($vlRecord;1;Records in selection([Agreement]))

If ($show_progress=True)
<>ProgressInd:=Trunc(($vlElem/Records in selection([Agreement]))*100;0)
End if 


viMatch:=0
bPrtRec:=0
bEmailReceipt:=0
bAll:=0
asShowHistory:=1
ReCalc 

SAVE RECORD([Agreement])
NEXT RECORD([Agreement])
End for 
If ($show_progress=True)
<>ProgressInd:=100
End if 
End if 

//``/` =================================build Reservation table==================================

ARRAY LONGINT($Res_ReservationID;0)
ARRAY DATE($Res_Date;0)
ARRAY DATE($Res_EffDate;0)
ARRAY LONGINT($Res_CustNo;0)
ARRAY TEXT($Res_UnitNo;0)
ARRAY REAL($Res_ChargeAmount;0)
ARRAY TEXT($Res_Comments;0)


If ($show_progress=True)
<>ProgressInd:=0
Progress ("Build Reservation table...")
End if 

$SQLStm:="SELECT ReservationID, Date, EffDate,CustNo,UnitNo, ChargeAmount, Comments FROM ReservationsHistory Where Cancelled = False   "
SQL EXECUTE($SQLStm;$Res_ReservationID;$Res_Date;$Res_EffDate;$Res_CustNo;$Res_UnitNo;$Res_ChargeAmount;$Res_Comments)
SQL LOAD RECORD(SQL all records)
SQL CANCEL LOAD


DEFAULT TABLE([Customer])
READ WRITE([Customer])
READ WRITE([Quote])
READ WRITE([Contacts])
READ WRITE([Reservation])

QUERY([Reservation];[Reservation]UnitsReserved=$prefix+"@")
$temp_counter:=Records in selection([Reservation])
If ($temp_counter>0)
DELETE SELECTION([Reservation])
End if 

//$CustCode_SRS:=$tblMatchingCustNo{$vlElem}
//$CustCode_SM:=$tblMatchingCustomerCode{$vlElem}

For ($vlElem;1;Size of array($Res_ReservationID))

If ($show_progress=True)
<>ProgressInd:=Trunc(($vlElem/Size of array($Res_ReservationID))*100;0)
End if 


$vlfind_ccode:=Find in array($tblMatchingCustNo;$Res_CustNo{$vlElem})//`get customer SM code
If ($vlfind_ccode>0)
$CC_code:=$tblMatchingCustomerCode{$vlfind_ccode}

$tmpUnID:=$Res_UnitNo{$vlElem}
$vlfind_unit:=Find in array($UnitNo;$tmpUnID)

If ($vlfind_unit>0)//unit exists

//CREATE RECORD([Reservation])
//[Reservation]ReserveNo:=$prefix+$Res_UnitNo{$vlElem}  //string($Res_ReservationID{$vlElem})//  ////String([Reservation]PrimaryKey)  //$res_num ?????????
//[Reservation]CustomerCode:=$CC_code
//[Reservation]ReservedDate:=$Res_Date{$vlElem}
//[Reservation]ExpMoveIn:=$Res_EffDate{$vlElem}
//[Reservation]UnitsReserved:=$prefix+$tmpUnID
//[Reservation]RReserveNo:=<>sFacility+String($Res_ReservationID{$vlElem})  //$prefix+$tmpUnID  //$res_num  //[Reservation]ReserveNo  //$CC_code+string($temp_counter)
//[Reservation]ActiveReserve:=True
//SAVE RECORD([Reservation])
//NEXT RECORD([Reservation])

$rent_val:=0
QUERY([Unit];[Unit]RUnitNo=<>sFacility+$prefix+$tmpUnID;*)
QUERY([Unit]; & ;[Unit]Status="Vacant")
If (Records in selection([Unit])=1)
[Unit]ReservedDate:=$Res_Date{$vlElem}
[Unit]MoveIn:=$Res_EffDate{$vlElem}
[Unit]ReservedTo:=<>sFacility+String($Res_ReservationID{$vlElem})///$prefix+$Res_UnitNo{$vlElem}//$tmpUnID//$CC_code  ///<>sFacility+$res_num_str
[Unit]Status:="Rented"
[Unit]AgreeNo:=<>sFacility+$tmpUnID//String($RP_tblReservationContractID{$vlElem})
$rent_val:=([Unit]RentedValue)
SAVE RECORD([Unit])

CREATE RECORD([Reservation])
[Reservation]ReserveNo:=$prefix+$Res_UnitNo{$vlElem}//string($Res_ReservationID{$vlElem})//  ////String([Reservation]PrimaryKey)  //$res_num ?????????
[Reservation]CustomerCode:=$CC_code
[Reservation]ReservedDate:=$Res_Date{$vlElem}
[Reservation]ExpMoveIn:=$Res_EffDate{$vlElem}
[Reservation]UnitsReserved:=$prefix+$tmpUnID
[Reservation]RReserveNo:=<>sFacility+String($Res_ReservationID{$vlElem})//$prefix+$tmpUnID  //$res_num  //[Reservation]ReserveNo  //$CC_code+string($temp_counter)
[Reservation]ActiveReserve:=True
SAVE RECORD([Reservation])
NEXT RECORD([Reservation])



End if 
End if 

//===================== c o n t a c t s =========
QUERY([Customer];[Customer]CustomerCode=$CC_code)
If (Records in selection([Customer])=1)

CREATE RECORD([Contacts])
[Contacts]Facility:=<>sFacility
[Contacts]ContactNo:=<>sFacility+$prefix+$tmpUnID
[Contacts]CallDate:=$Res_Date{$vlElem}
[Contacts]ContactName:=[Customer]CustomerName
[Contacts]ContactPhone:=[Customer]PhonePrivate
[Contacts]MailCity:=[Customer]MailCity
[Contacts]MailAddress:=[Customer]StreetAddress
[Contacts]EmailAddress:=[Customer]EmailAddress

//`-----------------add to quote table-------------------
CREATE RECORD([Quote])

[Quote]ContactNo:=<>sFacility+$prefix+$tmpUnID
//from unit table
QUERY([Unit];[Unit]UnitTypeCode=Delete string(<>sFacility+$prefix+$tmpUnID;15;32000))
If (Records in selection([Unit])=1)
[Quote]Size:=[Unit]UnitSize+$prefix2
[Contacts]SizeQuoted:=[Unit]UnitSize
[Quote]UnitTypeCode:=[Unit]UnitTypeCode
End if 
//from Unittypetable
QUERY([UnitType];[UnitType]RUnitType=Delete string(<>sFacility+$prefix+$tmpUnID;15;32000))//<>sFacility+$Unit_nm)  //Delete string(<>sFacility+$prefix+$Unit_nm;11;32000))
If (Records in selection=1)
[Quote]Price:=[UnitType]MonthlyRate
//[Contacts]PriceQuoted:=$rent_val  ///[UnitType]MonthlyRate
//[Quote]Note:="*price per month"
//[Contacts]Comments:="* price per month"
End if 

[Quote]UnitTypeCode:=Delete string(<>sFacility+$prefix+$tmpUnID;15;32000)//<>sFacility+$prefix+$Unit_nm  //Delete string(<>sFacility+$prefix+$Unit_nm;15;32000)

SAVE RECORD([Contacts])
NEXT RECORD([Contacts])

SAVE RECORD([Quote])
NEXT RECORD([Quote])

End if 


//////////////////////////////////

End if 

End for 


If ($show_progress=True)
<>ProgressInd:=100
End if 




Else 
AlertMessage ("ODBC connection problems found,"+Char(Carriage return)+" Process interrupted ")
ABORT
End if 


//----------------------------------------------------------------------------------------------
$time_finish:=Current time
vtFormula:=vtFormula+Char(Carriage return)+"Run finished at: "+String($time_finish)

vtFormula:=vtFormula+Char(Carriage return)+"Run duration: "+String($time_finish-$time_start)

$File:="SyraSoftImport.txt"
$Path:=Test path name(<>sExportPath)
If ($Path=0)
If (Test path name(<>sExportPath+$File)=Is a document)
DELETE DOCUMENT(<>sExportPath+$File)
End if 
$Doc:=Create document(<>sExportPath+$File)
SEND PACKET($Doc;vtFormula)
CLOSE DOCUMENT($Doc)
//AlertMessage ("The output file saved as: "+Char(13)+String(<>sExportPath+$File))
End if 
vtFormula:=vtFormula+Char(Carriage return)+Char(Carriage return)+"The output file saved as: "+Char(13)+String(<>sExportPath+$File)
vTitle:="Info"
Open window((Screen width/2)-275;(Screen height/2)-326;(Screen width/2)+275;(Screen height/2)+326;5;"Info")
vImportDialog:=False
vShowCancel:=False
DIALOG([Facility];"ImportDialog")
CLOSE WINDOW

vtFormula:=""
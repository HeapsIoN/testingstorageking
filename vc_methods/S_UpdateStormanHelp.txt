//%attributes = {"lang":"en"} comment added and reserved by 4D.
C_LONGINT($FTPLoginError;$FTPChangeDirError;$FTPLogoutError;$FTPReceiveError)
ARRAY TEXT(WS_vtaHelpDiskFolderList;0)
ARRAY TEXT(WS_vtaHelpDiskFileList;0)
ARRAY LONGINT(WS_viaHelpDiskFileVersion;0)
ARRAY DATE(WS_vdaHelpDiskFileLastModD;0)
ARRAY LONGINT(WS_vliaHelpDiskFileLastModT;0)

ARRAY TEXT(WS_vtaHelpFTPFolderList;0)
ARRAY TEXT(WS_vtaHelpFTPFolderAction;0)
ARRAY TEXT(WS_vtaHelpFTPFileList;0)
ARRAY TEXT(WS_vtaHelpFTPFileAction;0)
C_LONGINT(WS_viHelpFTPShowProgress)
C_TEXT(WS_vtHelpFTPFolder;WS_vtHelpFTPHost;WS_vtHelpFTPUsername;WS_vtHelpFTPPassword;$1;WS_vtHelpMessage)

WS_viHelpFTPShowProgress:=0
WS_vtHelpMessage:=""
$FTPReceiveError:=0

ON ERR CALL("UpdateStormanHelpError")

If (Application type=4D Server)
$DiskHelpPath:=UpdateStormanHelpGetPath (Data file)+$1+<>sSeparator+"help"+<>sSeparator
Else 
$DiskHelpPath:=UpdateStormanHelpGetPath (Data file)+"Database"+<>sSeparator+$1+<>sSeparator+"help"+<>sSeparator
End if 

If (Test path name($DiskHelpPath)#Is a folder)
CREATE FOLDER($DiskHelpPath)
End if 

$FileCount:=UpdateStormanHelpReadDiskDir ($DiskHelpPath;->WS_vtaHelpDiskFileList;->WS_viaHelpDiskFileVersion;->WS_vdaHelpDiskFileLastModD;->WS_vliaHelpDiskFileLastModT;->WS_vtaHelpDiskFolderList)

For ($Counter;1;Size of array(WS_vtaHelpDiskFileList))
WS_vtaHelpDiskFileList{$Counter}:=Replace string(WS_vtaHelpDiskFileList{$Counter};$DiskHelpPath;<>sSeparator)
WS_vtaHelpDiskFileList{$Counter}:=Substring(WS_vtaHelpDiskFileList{$Counter};2)
End for 
For ($Counter;1;Size of array(WS_vtaHelpDiskFolderList))
WS_vtaHelpDiskFolderList{$Counter}:=Replace string(WS_vtaHelpDiskFolderList{$Counter};$DiskHelpPath;<>sSeparator)
WS_vtaHelpDiskFolderList{$Counter}:=Substring(WS_vtaHelpDiskFolderList{$Counter};2)
End for 

$vtPlatform:=""
If (<>iPlatform=3)
$vtPlatform:="Win"
Else 
$vtPlatform:="Mac"
End if 
If (<>sProduct="M@")
QUERY([Facility];[Facility]FacilityCode=<>sHOFacility)
$iUserCode:=Num([Facility]UserCode)
$tBusinessName:=[Facility]BusinessName
$iVersion:=[Facility]Version
Else 
SetFacility 
$iUserCode:=Num([Facility]UserCode)
$tBusinessName:=[Facility]BusinessName
$iVersion:=[Facility]Version
End if 

WSC_UpdateStormanHelp ($iUserCode;$tBusinessName;$vtPlatform;$iVersion)

WS_vtHelpFTPUsername:=EncryptIt2 (WS_vtHelpFTPUsername;False)
WS_vtHelpFTPPassword:=EncryptIt2 (WS_vtHelpFTPPassword;False)

If (WS_vtHelpMessage="")
If (Size of array(WS_vtaHelpFTPFileList)>0) | (Size of array(WS_vtaHelpFTPFolderList)>0)//No Errors from StormanUsers
$TCPError:=IT_SetTimeOut (1200)//20 seconds
$FTPLoginError:=FTP_Login (WS_vtHelpFTPHost;WS_vtHelpFTPUsername;WS_vtHelpFTPPassword;FTP_ID;"Hello")
$FTPChangeDirError:=FTP_ChangeDir (FTP_ID;WS_vtHelpFTPFolder)

If ($FTPLoginError=0) & ($FTPChangeDirError=0)
SORT ARRAY(WS_vtaHelpFTPFolderList;WS_vtaHelpFTPFolderAction;<)
While (Size of array(WS_vtaHelpFTPFolderList)#0) | (Size of array(WS_vtaHelpFTPFileList)#0)
For ($FTPFolderListCounter;Size of array(WS_vtaHelpFTPFolderList);1;-1)
$DiskFolder:=Replace string(WS_vtaHelpFTPFolderList{$FTPFolderListCounter};"/";<>sSeparator)
Case of 
: (WS_vtaHelpFTPFolderAction{$FTPFolderListCounter}="A")
If (Test path name($DiskHelpPath+$DiskFolder)#Is a folder)
CREATE FOLDER($DiskHelpPath+$DiskFolder)
If (Test path name($DiskHelpPath+$DiskFolder)=Is a folder)
DELETE FROM ARRAY(WS_vtaHelpFTPFolderList;$FTPFolderListCounter;1)
DELETE FROM ARRAY(WS_vtaHelpFTPFolderAction;$FTPFolderListCounter;1)
End if 
Else 
DELETE FROM ARRAY(WS_vtaHelpFTPFolderList;$FTPFolderListCounter;1)
DELETE FROM ARRAY(WS_vtaHelpFTPFolderAction;$FTPFolderListCounter;1)
End if 

: (WS_vtaHelpFTPFolderAction{$FTPFolderListCounter}="D")
If (Test path name($DiskHelpPath+$DiskFolder)=Is a folder)
$Error:=UpdateStormanHelpDeleteDiskDir ($DiskHelpPath+$DiskFolder+<>sSeparator)
If (Test path name($DiskHelpPath+$DiskFolder)#Is a folder)
DELETE FROM ARRAY(WS_vtaHelpFTPFolderList;$FTPFolderListCounter;1)
DELETE FROM ARRAY(WS_vtaHelpFTPFolderAction;$FTPFolderListCounter;1)
End if 
Else 
DELETE FROM ARRAY(WS_vtaHelpFTPFolderList;$FTPFolderListCounter;1)
DELETE FROM ARRAY(WS_vtaHelpFTPFolderAction;$FTPFolderListCounter;1)
End if 
Else 
//Do nothing
End case 
End for 



For ($FTPFileListCounter;Size of array(WS_vtaHelpFTPFileList);1;-1)
$FTPFile:=Replace string(WS_vtHelpFTPFolder+WS_vtaHelpFTPFileList{$FTPFileListCounter};":";"/")
$DiskFile:=$DiskHelpPath+Replace string(WS_vtaHelpFTPFileList{$FTPFileListCounter};"/";<>sSeparator)
Case of 
: (WS_vtaHelpFTPFileAction{$FTPFileListCounter}="A")
If (Test path name($DiskFile)=Is a document)
DELETE DOCUMENT($DiskFile)
End if 
$Path:=UpdateStormanHelpGetPath ($DiskFile)
If (Test path name(Substring($Path;1;Length($Path)-1))=Is a folder)
If ($FTPReceiveError=0)//There is a problem receiving the files from the FTP site
If (Substring($FTPFile;1;1)=".")
DELETE FROM ARRAY(WS_vtaHelpFTPFileList;$FTPFileListCounter)
DELETE FROM ARRAY(WS_vtaHelpFTPFileAction;$FTPFileListCounter)
Else 
$FTPReceiveError:=FTP_Receive (FTP_ID;$FTPFile;$DiskFile;WS_viHelpFTPShowProgress)
End if 
Else 
DELETE FROM ARRAY(WS_vtaHelpFTPFileList;$FTPFileListCounter)
DELETE FROM ARRAY(WS_vtaHelpFTPFileAction;$FTPFileListCounter)
End if 
End if 
If (Test path name($DiskFile)=Is a document)
DELETE FROM ARRAY(WS_vtaHelpFTPFileList;$FTPFileListCounter)
DELETE FROM ARRAY(WS_vtaHelpFTPFileAction;$FTPFileListCounter)
End if 

: (WS_vtaHelpFTPFileAction{$FTPFileListCounter}="D")
If (Test path name($DiskFile)=Is a document)
DELETE DOCUMENT($DiskFile)
DELETE FROM ARRAY(WS_vtaHelpFTPFileList;$FTPFileListCounter)
DELETE FROM ARRAY(WS_vtaHelpFTPFileAction;$FTPFileListCounter)
Else 
DELETE FROM ARRAY(WS_vtaHelpFTPFileList;$FTPFileListCounter)
DELETE FROM ARRAY(WS_vtaHelpFTPFileAction;$FTPFileListCounter)
End if 
Else 
//Do nothing 
End case 
End for 
End while 
Else 
If (Application type#4D Server) & (Application type#4)
AlertMessage (Get localized string("Error(s) retrieving Help Centre Files")+" "+String($FTPLoginError)+", "+String($FTPChangeDirError))
End if 
End if 
$FTPLogoutError:=FTP_Logout (FTP_ID)
End if 
Else 
If (Application type#4D Server) & (Application type#4)
AlertMessage (WS_vtHelpMessage)
End if 
End if 
ON ERR CALL("ErrorLog")
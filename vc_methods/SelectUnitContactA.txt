//%attributes = {"lang":"en"} comment added and reserved by 4D.
C_BOOLEAN($1;$Found;$Abort)
C_TEXT($Desc)
C_LONGINT($i;$xDays;$yDays;$Mths;bAdd)
C_REAL($Rate)
C_DATE($Date)
C_TEXT($BillPlanDesc)
$Found:=$1
$WasInactive:=False
$Abort:=False
$MonthlyRate:=0
If ($Found=True) & ([Agreement]ActiveAgreemt=False)
ConfirmTwo (Get localized string("This is an inactive agreement. Set back to active?");Get localized string("Yes");Get localized string("No"))
If (OK=1)
[Agreement]ActiveAgreemt:=True
vActive:="Active"
[Agreement]MoveOut:=!00-00-00!
[Agreement]NextBillDate:=[Agreement]LastBillDate
AlertMessage (Get localized string("This agreement has been reactivated! Please ensure that any move out transactions are removed & that the Last Bill Date & Next Bill Date are correct."))
$WasInactive:=True
OBJECT SET VISIBLE(*;"Subform8";False)
OBJECT SET VISIBLE(*;"Subform1";True)
Else 
$Found:=False
End if 
End if 
If ($Found=True) & (Old([Agreement]ActiveAgreemt)=False) & ($WasInactive=False)//If second unit of was inactive agreement - added 3.1.1
QUERY([UnitHistory];[UnitHistory]UnitNo=[Unit]RUnitNo;*)
QUERY([UnitHistory]; & ;[UnitHistory]Casual=False;*)
QUERY([UnitHistory]; & ;[UnitHistory]AgreeNo=[Agreement]RAgreeNo)
If (Records in selection([UnitHistory])>0)
Case of 
: (<>sProduct="@B")
ConfirmTwo (Get localized string("Are you reactivating this Berth with previous Move Out date of")+" "+String([UnitHistory]MoveOut)+"?";Get localized string("Yes");Get localized string("No"))
: (<>sProduct="@R")
ConfirmTwo (Get localized string("Are you reactivating this Appliance with previous Move Out date of")+" "+String([UnitHistory]MoveOut)+"?";Get localized string("Yes");Get localized string("No"))
: (<>sProduct="@C")
ConfirmTwo (Get localized string("Are you reactivating this Space with previous Move Out date of")+" "+String([UnitHistory]MoveOut)+"?";Get localized string("Yes");Get localized string("No"))
Else 
ConfirmTwo (Get localized string("Are you reactivating this Unit with previous Move Out date of")+" "+String([UnitHistory]MoveOut)+"?";Get localized string("Yes");Get localized string("No"))
End case 
If (OK=1)
$WasInactive:=True
End if 
End if 
End if 
If ($Found=True)
If ([Unit]ReservedTo>"")
QUERY([Reservation];[Reservation]RReserveNo=[Unit]ReservedTo)
If (Records in selection([Reservation])>0)
Case of 
: (<>sProduct="@B")
ConfirmTwo (Get localized string("This berth has already been reserved to customer")+" "+[Reservation]CustomerCode+". "+Get localized string("Ignore reservation and rent this berth anyway?");Get localized string("No");Get localized string("Yes"))
: (<>sProduct="@R")
ConfirmTwo (Get localized string("This appliance has already been reserved to customer")+" "+[Reservation]CustomerCode+". "+Get localized string("Ignore reservation and rent this appliance anyway?");Get localized string("No");Get localized string("Yes"))
: (<>sProduct="@C")
ConfirmTwo (Get localized string("This space has already been reserved to customer")+" "+[Reservation]CustomerCode+". "+Get localized string("Ignore reservation and rent this space anyway?");Get localized string("No");Get localized string("Yes"))
Else 
ConfirmTwo (Get localized string("This unit has already been reserved to customer")+" "+[Reservation]CustomerCode+". "+Get localized string("Ignore reservation and rent this unit anyway?");Get localized string("No");Get localized string("Yes"))
End case 
//ConfirmTwo ("This "+<>vtUnits+" has already been reserved to customer "+[Reservation]CustomerCode+". Ignore reservation and rent this "+<>vtUnits+" anyway?";"No";"Yes")
If (OK=1)
QUERY([Unit];[Unit]AgreeNo=[Agreement]RAgreeNo)
$Abort:=True
End if 
End if 
Else 
If ([Unit]Status#"Vacant")
Case of 
: (<>sProduct="@B")
ConfirmTwo (Get localized string("This berth status is showing")+" "+[Unit]Status+".  "+Get localized string("Ignore status and Rent this berth anyway?");Get localized string("No");Get localized string("Yes"))
: (<>sProduct="@R")
ConfirmTwo (Get localized string("This appliance status is showing")+" "+[Unit]Status+".  "+Get localized string("Ignore status and Rent this appliance anyway?");Get localized string("No");Get localized string("Yes"))
: (<>sProduct="@C")
ConfirmTwo (Get localized string("This space status is showing")+" "+[Unit]Status+".  "+Get localized string("Ignore status and Rent this space anyway?");Get localized string("No");Get localized string("Yes"))
Else 
ConfirmTwo (Get localized string("This unit status is showing")+" "+[Unit]Status+".  "+Get localized string("Ignore status and Rent this unit anyway?");Get localized string("No");Get localized string("Yes"))
End case 
//ConfirmTwo ("This "+<>vtUnits+" status is showing "+[Unit]Status+".  Ignore status and Rent this "+<>vtUnits+" anyway?";"No";"Yes")
If (OK=1)
QUERY([Unit];[Unit]AgreeNo=[Agreement]RAgreeNo)
$Abort:=True
End if 
End if 
End if 
If ($Abort=False) & ($WasInactive=False)
$Allow:=False
If (bAdd=1) | ([Agreement]MoveIn=[Agreement]NextBillDate) | ([Agreement]MoveIn>Current date)//Added second condition in 3.1
$Date:=[Agreement]MoveIn
$Allow:=True
Else 
$Date:=Current date
End if 
If ($Date<[Unit]MoveOut)
$Date:=[Unit]MoveOut
End if 
Repeat 
$Fail:=False
Case of 
: (<>sProduct="@B")
$MoveInDate:=RequestDate (Get localized string("Please confirm berth Move In date:");$Date)
: (<>sProduct="@R")
$MoveInDate:=RequestDate (Get localized string("Please confirm appliance Move In date:");$Date)
: (<>sProduct="@C")
$MoveInDate:=RequestDate (Get localized string("Please confirm space Move In date:");$Date)
Else 
$MoveInDate:=RequestDate (Get localized string("Please confirm unit Move In date:");$Date)
End case 
//$MoveInDate:=Date(RequestMessage ("Please confirm "+<>vtUnitsCap+" Move In date:";String($Date)))
If (OK=1)
If ($Allow=False) & ($MoveInDate<[Agreement]MoveIn)
Case of 
: (<>sProduct="@B")
AlertMessage (Get localized string("The Lease Date for berth")+" "+[Unit]UnitNo+" "+Get localized string("must be on or after agreement lease date of")+" "+String([Agreement]MoveIn)+"!")
: (<>sProduct="@R")
AlertMessage (Get localized string("The Rent Date for appliance")+" "+[Unit]UnitNo+" "+Get localized string("must be on or after agreement rent date of")+" "+String([Agreement]MoveIn)+"!")
: (<>sProduct="@C")
AlertMessage (Get localized string("The Move-In Date for space")+" "+[Unit]UnitNo+" "+Get localized string("must be on or after agreement move-in date of")+" "+String([Agreement]MoveIn)+"!")
Else 
AlertMessage (Get localized string("The Move-In Date for unit")+" "+[Unit]UnitNo+" "+Get localized string("must be on or after agreement move-in date of")+" "+String([Agreement]MoveIn)+"!")
End case 

//AlertMessage ("The move in date for "+<>vtUnits+" "+[Unit]UnitNo+" must be on or after agreement move in date of "+String([Agreement]MoveIn)+". Please correct and try again...")
$Fail:=True
Else 
If ($MoveInDate<[Unit]MoveOut) | ($MoveInDate<!1990-01-01!)
Case of 
: (<>sProduct="@B")
AlertMessage (Get localized string("The Lease Date for berth")+" "+[Unit]UnitNo+" "+Get localized string("must be on or after last berth move-out date of")+" "+String([Unit]MoveOut)+"!")
: (<>sProduct="@R")
AlertMessage (Get localized string("The Rent Date for appliance")+" "+[Unit]UnitNo+" "+Get localized string("must be on or after last appliance move-out date of")+" "+String([Unit]MoveOut)+"!")
: (<>sProduct="@C")
AlertMessage (Get localized string("The Move-In Date for space")+" "+[Unit]UnitNo+" "+Get localized string("must be on or after last unit move-out date of")+" "+String([Unit]MoveOut)+"!")
Else 
AlertMessage (Get localized string("The Move-In Date for unit")+" "+[Unit]UnitNo+" "+Get localized string("must be on or after last unit move-out date of")+" "+String([Unit]MoveOut)+"!")
End case 

//AlertMessage ("The move in date for "+<>vtUnits+" "+[Unit]UnitNo+" must be on or after last "+<>vtUnits+" move out date of "+String([Unit]MoveOut)+". Please correct and try again...")
$Fail:=True
End if 
End if 
If ($MoveInDate>(Current date+[Facility]FutureMoveIns)) & (PermissionsControl (175;False)=False)
AlertMessage (Get localized string("You cannot set the move in date to more than")+" "+String([Facility]FutureMoveIns)+" "+Get localized string("days in the future. Please re-enter and try again."))
$Fail:=True
End if 
Else 
$Abort:=True
End if 
Until ($Fail=False) | (OK#1)
End if 
If ($Abort=False)
If (Locked([Unit]))
Case of 
: (<>sProduct="@B")
AlertMessage (Get localized string("This berth is locked by another process. Unable to add to this agreement."))
: (<>sProduct="@R")
AlertMessage (Get localized string("This appliance is locked by another process. Unable to add to this agreement."))
: (<>sProduct="@C")
AlertMessage (Get localized string("This space is locked by another process. Unable to add to this agreement."))
Else 
AlertMessage (Get localized string("This unit is locked by another process. Unable to add to this agreement."))
End case 

Else 
RELATE ONE([Unit]UnitTypeCode)
If ([UnitType]BillPlanCode>"") & ([UnitType]BillPlanCode#[Agreement]BillingPlanCode)//SDD 13/4/10 Added first condition to ensure this does not activate for every single UnitType
QUERY([BillPlan];[BillPlan]Code=[UnitType]BillPlanCode)
Case of 
: (<>sProduct="@B")
ConfirmTwo (Get localized string("This Berth Type has a special billing plan named")+" "+[BillPlan]Description+", "+Get localized string("do you wish to switch to it? This will affect all berths on the agreement");Get localized string("Yes");Get localized string("No"))
: (<>sProduct="@R")
ConfirmTwo (Get localized string("This Appliance Type has a special billing plan named")+" "+[BillPlan]Description+", "+Get localized string("do you wish to switch to it? This will affect all appliances on the agreement");Get localized string("Yes");Get localized string("No"))
: (<>sProduct="@C")
ConfirmTwo (Get localized string("This Space Type has a special billing plan named")+" "+[BillPlan]Description+", "+Get localized string("do you wish to switch to it? This will affect all spaces on the agreement");Get localized string("Yes");Get localized string("No"))
Else 
ConfirmTwo (Get localized string("This Unit Type has a special billing plan named")+" "+[BillPlan]Description+", "+Get localized string("do you wish to switch to it? This will affect all units on the agreement");Get localized string("Yes");Get localized string("No"))
End case 

//ConfirmTwo ("This "+<>vtUnitsCap+" Type has a special billing plan named "+[BillPlan]Description+", do you wish to switch to it? This will affect all "+<>vtUnits+"s on the agreement";"Yes";"No")
If (OK=1)
QUERY([BillPlan];[BillPlan]Code=[Agreement]BillingPlanCode)
viMthsAdv:=[BillPlan]PeriodstoPay+[BillPlan]FreePeriods
CREATE SET([Unit];"ChangeBillPlan")
MoveInChangeBillPlanOther ([UnitType]BillPlanCode)
USE SET("ChangeBillPlan")
CLEAR SET("ChangeBillPlan")
End if 

End if 
$MonthlyRate:=[Quote]Price

If ([UnitType]VariableLength)
$UseQuote:=True
ConfirmTwo (Get localized string("Was this quote on a per increment basis or total length?");Get localized string("Per Incr");Get localized string("Total1"))
If (OK=1)
$UseQuote:=False
End if 
$Continue:=False
Repeat 
$Length:=Num(RequestMessage (Get localized string("Please enter the length used. Do not exceed maximum length of")+" "+String([UnitType]UnitTypeLength);String([Quote]Lngth)))
If ($Length<=[UnitType]UnitTypeLength)
$Continue:=True
End if 
Until ($Continue)
If ($UseQuote=False)
If ($Length<[UnitType]VariableMinimum)
$MonthlyRate:=Round($MonthlyRate*[UnitType]VariableMinimum;2)
Else 
$MonthlyRate:=Round($MonthlyRate*$Length;2)
End if 
End if 
[Unit]UnitLength:=$Length
[Unit]UnitAreaSize:=Round([Unit]UnitLength*[Unit]UnitWidth;2)
End if 

If ($WasInactive=True)
If ([Unit]MoveIn<[Agreement]MoveIn)//Added in 3.1.1 to stop UnitMoveIn changing
[Unit]MoveIn:=[Agreement]MoveIn
If ([Unit]MoveIn>[Unit]LastInc)
[Unit]LastInc:=[Unit]MoveIn
End if 
End if 
Else 
[Unit]MoveIn:=$MoveInDate
If ([Unit]MoveIn>[Unit]LastInc)
[Unit]LastInc:=[Unit]MoveIn
End if 
If ($Allow)
If ([Agreement]MoveIn=[Agreement]NextBillDate)//Changed Currentdate to NextBillDate in v3.1
[Agreement]MoveIn:=[Unit]MoveIn
[Agreement]NextBillDate:=[Unit]MoveIn
[Agreement]DaytoBill:=Day of([Unit]MoveIn)
End if 
If ([UnitType]DepositAmt>0)//& ([Agreement]DepositAmt<=0)
[Agreement]DepositAmt:=[Agreement]DepositAmt+[UnitType]DepositAmt
End if 
Else 
$yDays:=[Agreement]NextBillDate-[Agreement]LastBillDate
If ($yDays<2)
AlertMessage (Get localized string("This agreement appears to have not been billed. LastBillDate is")+" "+String([Agreement]LastBillDate;6)+", "+Get localized string("NextBillDate")+" "+Get localized string("is")+" "+String([Agreement]NextBillDate;6)+". "+Get localized string("Unable to calculate pro-rata!"))
Else 
$xDays:=[Agreement]NextBillDate-[Unit]MoveIn
If ($xDays#0)
Repeat 
$Rate:=$MonthlyRate*(1-([BillPlan]DiscPercentage/100))
If ([BillPlan]PlanPeriod="Week")
$Mths:=Round($yDays/7;0)
Else 
$Mths:=Round($yDays/30;0)
End if 
$Amt:=RoundAmt ($Mths*$Rate*$xDays/$yDays)
If (PermissionsControl (31;False)=False)
Case of 
: (<>sProduct="@B")
ConfirmTwo (Get localized string("Next Bill Date")+" = "+String([Agreement]NextBillDate)+Char(13)+Get localized string("Move In Date for this Berth")+" = "+String([Unit]MoveIn)+Char(13)+Get localized string("Create Pro-rata charge for this")+" "+<>sCurrency+String($MonthlyRate;<>sFormat)+" "+Get localized string("Berth to Next Bill Date of")+" "+String([Agreement]NextBillDate)+$BillPlanDesc+" = "+<>sCurrency+String($Amt;<>sFormat)+"?";Get localized string("Yes");Get localized string("No"))
: (<>sProduct="@R")
ConfirmTwo (Get localized string("Next Bill Date")+" = "+String([Agreement]NextBillDate)+Char(13)+Get localized string("Move In Date for this Appliance")+" = "+String([Unit]MoveIn)+Char(13)+Get localized string("Create Pro-rata charge for this")+" "+<>sCurrency+String($MonthlyRate;<>sFormat)+" "+Get localized string("Appliance to Next Bill Date of")+" "+String([Agreement]NextBillDate)+$BillPlanDesc+" = "+<>sCurrency+String($Amt;<>sFormat)+"?";Get localized string("Yes");Get localized string("No"))
: (<>sProduct="@C")
ConfirmTwo (Get localized string("Next Bill Date")+" = "+String([Agreement]NextBillDate)+Char(13)+Get localized string("Move In Date for this Space")+" = "+String([Unit]MoveIn)+Char(13)+Get localized string("Create Pro-rata charge for this")+" "+<>sCurrency+String($MonthlyRate;<>sFormat)+" "+Get localized string("Space to Next Bill Date of")+" "+String([Agreement]NextBillDate)+$BillPlanDesc+" = "+<>sCurrency+String($Amt;<>sFormat)+"?";Get localized string("Yes");Get localized string("No"))
Else 
ConfirmTwo (Get localized string("Next Bill Date")+" = "+String([Agreement]NextBillDate)+Char(13)+Get localized string("Move In Date for this Unit")+" = "+String([Unit]MoveIn)+Char(13)+Get localized string("Create Pro-rata charge for this")+" "+<>sCurrency+String($MonthlyRate;<>sFormat)+" "+Get localized string("Unit to Next Bill Date of")+" "+String([Agreement]NextBillDate)+$BillPlanDesc+" = "+<>sCurrency+String($Amt;<>sFormat)+"?";Get localized string("Yes");Get localized string("No"))
End case 
If (OK=1)
$i:=1
Else 
$i:=2
End if 
Else 
Case of 
: (<>sProduct="@B")
$i:=ConfirmThree (Get localized string("Next Bill Date")+" = "+String([Agreement]NextBillDate)+Char(13)+Get localized string("Move In Date for this Berth")+" = "+String([Unit]MoveIn)+Char(13)+Get localized string("Create Pro-rata charge for this")+" "+<>sCurrency+String($MonthlyRate;<>sFormat)+" "+Get localized string("Berth to Next Bill Date of")+" "+String([Agreement]NextBillDate)+$BillPlanDesc+" = "+<>sCurrency+String($Amt;<>sFormat)+"?";Get localized string("Yes");Get localized string("No");("Change Rent"))
: (<>sProduct="@R")
$i:=ConfirmThree (Get localized string("Next Bill Date")+" = "+String([Agreement]NextBillDate)+Char(13)+Get localized string("Move In Date for this Appliance")+" = "+String([Unit]MoveIn)+Char(13)+Get localized string("Create Pro-rata charge for this")+" "+<>sCurrency+String($MonthlyRate;<>sFormat)+" "+Get localized string("Appliance to Next Bill Date of")+" "+String([Agreement]NextBillDate)+$BillPlanDesc+" = "+<>sCurrency+String($Amt;<>sFormat)+"?";Get localized string("Yes");Get localized string("No");("Change Rent"))
: (<>sProduct="@C")
$i:=ConfirmThree (Get localized string("Next Bill Date")+" = "+String([Agreement]NextBillDate)+Char(13)+Get localized string("Move In Date for this Space")+" = "+String([Unit]MoveIn)+Char(13)+Get localized string("Create Pro-rata charge for this")+" "+<>sCurrency+String($MonthlyRate;<>sFormat)+" "+Get localized string("Space to Next Bill Date of")+" "+String([Agreement]NextBillDate)+$BillPlanDesc+" = "+<>sCurrency+String($Amt;<>sFormat)+"?";Get localized string("Yes");Get localized string("No");("Change Rent"))
Else 
$i:=ConfirmThree (Get localized string("Next Bill Date")+" = "+String([Agreement]NextBillDate)+Char(13)+Get localized string("Move In Date for this Unit")+" = "+String([Unit]MoveIn)+Char(13)+Get localized string("Create Pro-rata charge for this")+" "+<>sCurrency+String($MonthlyRate;<>sFormat)+" "+Get localized string("Unit to Next Bill Date of")+" "+String([Agreement]NextBillDate)+$BillPlanDesc+" = "+<>sCurrency+String($Amt;<>sFormat)+"?";Get localized string("Yes");Get localized string("No");("Change Rent"))
End case 

//$i:=ConfirmThree ("Next Bill Date = "+String([Agreement]NextBillDate)+Char(13)+"Move In Date for this "+<>vtUnitsCap+" = "+String([Unit]MoveIn)+Char(13)+"Create Pro-rata charge for this "+<>sCurrency+String($MonthlyRate;<>sFormat)+" "+<>vtUnitsCap+" to Next Bill Date of "+String([Agreement]NextBillDate)+$BillPlanDesc+"  = "+<>sCurrency+String($Amt;<>sFormat)+"?";"Yes";"No";"Change Rent")
End if 
If ($i=3)
Case of 
: (<>sProduct="@B")
$MonthlyRate:=Num(RequestMessage (Get localized string("Enter new rate for this berth")+" "+[Unit]UnitNo+" "+Get localized string("to be rented at")+":";String([UnitType]MonthlyRate;<>sFormat)))
: (<>sProduct="@R")
$MonthlyRate:=Num(RequestMessage (Get localized string("Enter new rate for this appliance")+" "+[Unit]UnitNo+" "+Get localized string("to be rented at")+":";String([UnitType]MonthlyRate;<>sFormat)))
Else 
$MonthlyRate:=Num(RequestMessage (Get localized string("Enter new rate for this unit")+" "+[Unit]UnitNo+" "+Get localized string("to be rented at")+":";String([UnitType]MonthlyRate;<>sFormat)))
End case 

//$MonthlyRate:=Num(RequestMessage ("Enter new rate for this "+<>vtUnits+" "+[Unit]UnitNo+" to be rented at:";String([UnitType]MonthlyRate;<>sFormat)))
If (OK#1)
$MonthlyRate:=CalculateBaseRate (2;0)
End if 
End if 
Until ($i<3)
If ($i=1)
READ WRITE([Trxs])
GetAnalysis (True)
CREATE RECORD([Trxs])
[Trxs]CustomerCode:=[Agreement]CustomerCode
[Trxs]AgreeNo:=[Agreement]RAgreeNo
[Trxs]TrxDate:=GetValidDate ([Unit]MoveIn)
[Trxs]Charge:=True
If (Records in selection([Analysis])=1)
[Trxs]AnalysisCode:=[Analysis]Code
$Desc:=[Analysis]Description
$i:=Position(" ";$Desc)-1
If ($i<2)
$i:=Length($Desc)
End if 
Else 
[Trxs]AnalysisCode:=<>sFacility+"RF"
$Desc:="Rental Fee"
$i:=6
End if 
[Trxs]Description:=Get localized string("Prorata")+" "+Substring($Desc;1;$i)+" "+<>vtUnitsCap+" "+[Unit]UnitNo
[Trxs]TotAmt:=RoundAmt ($Amt)
[Trxs]Confirmed:=True
[Trxs]DateFrom:=[Trxs]TrxDate
[Trxs]DateTo:=[Agreement]NextBillDate
[Trxs]TaxAmt:=CalcTaxAmt ([Trxs]TotAmt)
[Trxs]Narration:=Get localized string("X = No of Days to NextBillDate")+Char(13)
[Trxs]Narration:=[Trxs]Narration+"    = "+String([Agreement]NextBillDate)+" - "+String([Unit]MoveIn)+" = "+String($xDays)+" "+Get localized string("Days")+Char(13)
[Trxs]Narration:=[Trxs]Narration+Get localized string("Y = No of Days from LastBillDate to NextBillDate")+Char(13)
[Trxs]Narration:=[Trxs]Narration+"    = "+String([Agreement]NextBillDate)+" - "+String([Agreement]LastBillDate)+" = "+String($yDays)+" "+Get localized string("Days")+Char(13)

If ([BillPlan]PlanPeriod="Week")
Case of 
: (<>sProduct="@B")
[Trxs]Narration:=[Trxs]Narration+Get localized string("M = Weekly Rate for Berth")+" = "+String([UnitType]MonthlyRate;<>sFormat)+Char(13)
: (<>sProduct="@R")
[Trxs]Narration:=[Trxs]Narration+Get localized string("M = Weekly Rate for Appliance")+" = "+String([UnitType]MonthlyRate;<>sFormat)+Char(13)
: (<>sProduct="@C")
[Trxs]Narration:=[Trxs]Narration+Get localized string("M = Weekly Rate for Space")+" = "+String([UnitType]MonthlyRate;<>sFormat)+Char(13)
Else 
[Trxs]Narration:=[Trxs]Narration+Get localized string("M = Weekly Rate for Unit")+" = "+String([UnitType]MonthlyRate;<>sFormat)+Char(13)
End case 
Else 
Case of 
: (<>sProduct="@B")
[Trxs]Narration:=[Trxs]Narration+Get localized string("M = Monthly Rate for Berth")+" = "+String([UnitType]MonthlyRate;<>sFormat)+Char(13)
: (<>sProduct="@R")
[Trxs]Narration:=[Trxs]Narration+Get localized string("M = Monthly Rate for Appliance")+" = "+String([UnitType]MonthlyRate;<>sFormat)+Char(13)
: (<>sProduct="@C")
[Trxs]Narration:=[Trxs]Narration+Get localized string("M = Monthly Rate for Space")+" = "+String([UnitType]MonthlyRate;<>sFormat)+Char(13)
Else 
[Trxs]Narration:=[Trxs]Narration+Get localized string("M = Monthly Rate for Unit")+" = "+String([UnitType]MonthlyRate;<>sFormat)+Char(13)
End case 
End if 


//[Transaction]Narration:=[Transaction]Narration+"M = Monthly Rate for "+<>vtUnitsCap+" = "+String([UnitType]MonthlyRate;<>sFormat)+Char(13)
[Trxs]Narration:=[Trxs]Narration+"    "+Get localized string("less Billing Plan Disc")+" "+String([BillPlan]DiscPercentage)+"% = "+String($Rate;<>sFormat)+Char(13)
If ([BillPlan]PlanPeriod="Week")
[Trxs]Narration:=[Trxs]Narration+"N = "+Get localized string("No of Weeks")+" = "+String($Mths;"##0")+Char(13)
Else 
[Trxs]Narration:=[Trxs]Narration+"N = "+Get localized string("No of Months")+" = "+String($Mths;"##0")+Char(13)
End if 
[Trxs]Narration:=[Trxs]Narration+"N x M x X / Y = "+String($Amt;<>sFormat)+Char(13)
SAVE RECORD([Trxs])
READ ONLY([Trxs])
[Customer]Balance:=Round([Customer]Balance+[Trxs]TotAmt;2)
If ([Trxs]TrxDate>[Customer]LatestTrxDate)
[Customer]LatestTrxDate:=[Trxs]TrxDate
End if 
vRecalc:=True
Else 
AlertMessage (Get localized string("You will need to manually adjust the rent."))
End if 
End if 
End if 
End if 
End if 
[Unit]AgreeNo:=[Agreement]RAgreeNo
[Unit]Vacant:=False
[Unit]Status:=<>asUnitStatus{1}
[Unit]MoveOut:=!00-00-00!//V3.1 Reset MoveOut Date so doesn't interfere with calc of expected MoveOuts
[Unit]UpdateGate:=[Facility]UseGateSys//Prev was simply True but stuffs if doesn't have Gate Sys
[Unit]UpdatePULS:=<>tUtilities
Case of 
: ([BillPlan]CasualBilling=True)
[Unit]DailyRentedValue:=$MonthlyRate
[Unit]DailyNewRent:=$MonthlyRate
[Unit]WeeklyRentedValue:=Round($MonthlyRate*7;2)
[Unit]WeeklyNewRentAmt:=Round($MonthlyRate*7;2)
[Unit]RentedValue:=Round($MonthlyRate*7/0.2308;2)
[Unit]NewRentAmt:=Round($MonthlyRate*7/0.2308;2)
[Unit]ExtraDisc:=CalculateBaseRate (2;0)-[Unit]DailyRentedValue
: ([BillPlan]PlanPeriod="Week")
[Unit]WeeklyRentedValue:=$MonthlyRate
[Unit]WeeklyNewRentAmt:=$MonthlyRate
[Unit]RentedValue:=Round($MonthlyRate/0.2308;2)
[Unit]NewRentAmt:=Round($MonthlyRate/0.2308;2)
[Unit]DailyRentedValue:=Round($MonthlyRate/7;2)
[Unit]DailyNewRent:=Round($MonthlyRate/7;2)
[Unit]ExtraDisc:=CalculateBaseRate (2;0)-[Unit]WeeklyRentedValue
Else 
[Unit]RentedValue:=$MonthlyRate
[Unit]NewRentAmt:=$MonthlyRate
[Unit]WeeklyRentedValue:=Round($MonthlyRate*0.2308;2)
[Unit]WeeklyNewRentAmt:=Round($MonthlyRate*0.2308;2)
[Unit]DailyRentedValue:=Round($MonthlyRate*0.2308/7;2)
[Unit]DailyNewRent:=Round($MonthlyRate*0.2308/7;2)
[Unit]ExtraDisc:=CalculateBaseRate (2;0)-[Unit]RentedValue
End case 
RELATE MANY([Unit]UnitTypeCode)
[Unit]Deposit:=[UnitType]DepositAmt
If ([UnitType]DepositAmt>0) & ([Agreement]NextBillDate#[Agreement]MoveIn)
Case of 
: (<>sProduct="@B")
$Deposit:=Num(RequestMessage (Get localized string("Do you wish to charge a deposit for this Berth?");String([UnitType]DepositAmt);Get localized string("Yes");Get localized string("No")))
: (<>sProduct="@R")
$Deposit:=Num(RequestMessage (Get localized string("Do you wish to charge a deposit for this Appliance?");String([UnitType]DepositAmt);Get localized string("Yes");Get localized string("No")))
: (<>sProduct="@C")
$Deposit:=Num(RequestMessage (Get localized string("Do you wish to charge a deposit for this Space?");String([UnitType]DepositAmt);Get localized string("Yes");Get localized string("No")))
Else 
$Deposit:=Num(RequestMessage (Get localized string("Do you wish to charge a deposit for this Unit?");String([UnitType]DepositAmt);Get localized string("Yes");Get localized string("No")))
End case 
//$Deposit:=Num(RequestMessage ("Do you wish to charge a deposit for this "+<>vtUnitsCap+"?";String([UnitType]DepositAmt);"Yes";"No"))
If (OK=1)
QUERY([Analysis];[Analysis]SortOrder=2)
READ WRITE([Trxs])
CREATE RECORD([Trxs])
[Trxs]CustomerCode:=[Agreement]CustomerCode
[Trxs]AgreeNo:=[Agreement]RAgreeNo
[Trxs]Charge:=True
[Trxs]AnalysisCode:=<>sFacility+"DP"
[Trxs]Description:=[Analysis]Description+" "+<>vtUnitsCap+" "+[Unit]UnitNo
[Trxs]TrxDate:=GetValidDate ([Unit]MoveIn)
[Trxs]DateFrom:=[Unit]MoveIn
[Trxs]DateTo:=[Unit]MoveIn
[Trxs]TotAmt:=RoundAmt ($Deposit)
[Trxs]Confirmed:=True
[Trxs]TaxAmt:=CalcTaxAmt ([Trxs]TotAmt)
SAVE RECORD([Trxs])
READ ONLY([Trxs])
[Customer]Balance:=Round([Customer]Balance+[Trxs]TotAmt;2)
If ([Trxs]TrxDate>[Customer]LatestTrxDate)
[Customer]LatestTrxDate:=[Trxs]TrxDate
End if 
[Unit]Deposit:=$Deposit
Else 
[Unit]Deposit:=0
End if 
End if 
If ([Unit]Status#Old([Unit]Status))
[Unit]LastStatusDate:=Current date
End if 
SAVE RECORD([Unit])
READ WRITE([UnitHistory])
If ($WasInactive)
QUERY([UnitHistory];[UnitHistory]UnitNo=[Unit]RUnitNo;*)
QUERY([UnitHistory]; & ;[UnitHistory]Casual=False;*)
QUERY([UnitHistory]; & ;[UnitHistory]AgreeNo=[Agreement]RAgreeNo)
If (Records in selection([UnitHistory])>0)
ORDER BY([UnitHistory];[UnitHistory]MoveOut;<)
[UnitHistory]MoveOut:=!00-00-00!
[UnitHistory]DaysStayed:=0
SAVE RECORD([UnitHistory])
End if 
Else 
CREATE RECORD([UnitHistory])
[UnitHistory]UnitNo:=[Unit]RUnitNo
[UnitHistory]AgreeNo:=[Unit]AgreeNo
[UnitHistory]MoveIn:=[Unit]MoveIn
SAVE RECORD([UnitHistory])
End if 
READ ONLY([UnitHistory])
UNLOAD RECORD([UnitHistory])
READ WRITE([UnitType])
READ WRITE([RCHistory])
RELATE ONE([Unit]UnitTypeCode)
[UnitType]NoVacant:=[UnitType]NoVacant-1
SAVE RECORD([UnitType])
End if 
End if 
READ ONLY([UnitType])
READ ONLY([RCHistory])
End if 
RELATE MANY([Agreement]RAgreeNo)
[Agreement]UnitsOccup:=""
FIRST RECORD([Unit])
vExisting:=""
vTotal:=0
For ($i;1;Records in selection([Unit]))
[Agreement]UnitsOccup:=[Agreement]UnitsOccup+[Unit]UnitNo+", "
RELATE ONE([Unit]UnitTypeCode)
If ([BillPlan]PlanPeriod="Week")
vTotal:=vTotal+[Unit]WeeklyRentedValue
Else 
vTotal:=vTotal+[Unit]RentedValue
End if 
NEXT RECORD([Unit])
End for 
[Agreement]UnitsOccup:=Substring([Agreement]UnitsOccup;1;Length([Agreement]UnitsOccup)-2)
If ($WasInactive)
[Agreement]RegularRent:=Round(vTotal;2)//Added in 3.1.1
Else 
[Agreement]RegularRent:=Round([Agreement]RegularRent+$MonthlyRate;2)
End if 
[Agreement]AgreedDisc:=Round(vTotal-[Agreement]RegularRent;2)
If ([Agreement]RegularRent#Old([Agreement]RegularRent))
vPrevRegRent:=Old([Agreement]RegularRent)
Else 
vPrevRegRent:=0
End if 
If ($Found=True)
If ([BillPlan]CasualBilling)
If ([BillPlan]PlanPeriod="Week")
$CasualAmount:=Round([Agreement]RegularRent*7;2)
$NewCasualAmount:=Round([Agreement]NewRegularRent*7;2)
Else 
$CasualAmount:=Round([Agreement]RegularRent*7/0.2308;2)
$NewCasualAmount:=Round([Agreement]NewRegularRent*7/0.2308;2)
End if 
Else 
$CasualAmount:=[Agreement]RegularRent
$NewCasualAmount:=[Agreement]NewRegularRent
End if 
If ([BillPlan]PeriodicBilling=True)
[Agreement]RentAmt:=RoundAmt ((RoundAmt ($CasualAmount*(100-[BillPlan]DiscPercentage)/100))*[Agreement]MthsAdv-[BillPlan]DiscFixedAmt)
Else 
[Agreement]RentAmt:=RoundAmt (($CasualAmount*[Agreement]MthsAdv*(100-[BillPlan]DiscPercentage)/100)-[BillPlan]DiscFixedAmt)
End if 

If ([BillPlan]PeriodicBilling=True)
$PosDate:=Add to date([Agreement]NextBillDate;0;([Agreement]PeriodicBillingPosition*-1);0)
If ([BillPlan]DiscOnlyMoveIn=True) & (($PosDate-[Agreement]MoveIn)>28)
[Agreement]RentAmt:=RoundAmt ($CasualAmount*[Agreement]MthsAdv)
End if 
Else 
If ([BillPlan]DiscOnlyMoveIn=True) & (([Agreement]NextBillDate-[Agreement]MoveIn)>28)
[Agreement]RentAmt:=RoundAmt ($CasualAmount*[Agreement]MthsAdv)
End if 
End if 

If ([BillPlan]FixedBill#0)
If ([BillPlan]DiscOnlyMoveIn=True) & (([Agreement]NextBillDate-[Agreement]MoveIn)>28)
Else 
If ([BillPlan]FixedBillPeriod)
[Agreement]RentAmt:=RoundAmt (CalculateFixedAmount *[Agreement]MthsAdv)
Else 
[Agreement]RentAmt:=RoundAmt (CalculateFixedAmount )
End if 
End if 
End if 

If ([BillPlan]PeriodicBilling=True)
[Agreement]DiscountAmt:=Round((RoundAmt ($CasualAmount)*[Agreement]MthsAdv)-[Agreement]RentAmt;2)
Else 
[Agreement]DiscountAmt:=Round(($CasualAmount*[Agreement]MthsAdv)-[Agreement]RentAmt;2)
End if 
//If ([Facility]TaxAddtoAmt=True)
//[Agreement]LastBillAmt:=Round(([Agreement]RentAmt*(1+(GetTaxRate ([Unit]MoveIn)/100)));2)
//Else 
//[Agreement]LastBillAmt:=Round([Agreement]RentAmt;2)
//End if   //Added 2/3/95 to correctly calculate if further units adjusted
//If ([BillPlan]PeriodicBilling)
//[Agreement]LastMthsAdv:=1
//Else 
//[Agreement]LastMthsAdv:=[Agreement]MthsAdv
//End if 
//If ([Agreement]NewRentAmt>0)
//ALERT("If there is a rent increase scheduled for this customer, please be sure to adjus"+"t it for this new unit!")
//End if 
End if 
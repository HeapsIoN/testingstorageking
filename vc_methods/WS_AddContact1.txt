//%attributes = {"publishedSoap":true,"publishedWsdl":true,"lang":"en"} comment added and reserved by 4D.

// ----------------------------------------------------
// User name (OS): robert.richardson
// Date and time: 22/04/10, 13:36:04
// API Version: 1.0
// ----------------------------------------------------
// Method: WS_AddContact1
// Description
// Adds a sales enquiry record
//
// Parameters
// ----------------------------------------------------

TRACE
SOAP DECLARATION(WS_CTFacility;Is string var;SOAP input;"WS_CTFacility")
SOAP DECLARATION(WS_CTContactName;Is string var;SOAP input;"WS_CTContactName")
SOAP DECLARATION(WS_CTTitle;Is string var;SOAP input;"WS_CTTitle")
SOAP DECLARATION(WS_CTFirstname;Is string var;SOAP input;"WS_CTFirstname")
SOAP DECLARATION(WS_CTUserName;Is string var;SOAP input;"WS_CTUserName")
SOAP DECLARATION(WS_CTMailAddress;Is text;SOAP input;"WS_CTMailAddress")
SOAP DECLARATION(WS_CTMailCity;Is string var;SOAP input;"WS_CTMailCity")
SOAP DECLARATION(WS_CTMailState;Is string var;SOAP input;"WS_CTMailState")
SOAP DECLARATION(WS_CTMailZIPCode;Is string var;SOAP input;"WS_CTMailZIPCode")
SOAP DECLARATION(WS_CTMailCountry;Is string var;SOAP input;"WS_CTMailCountry")
SOAP DECLARATION(WS_CTContactPhone;Is string var;SOAP input;"WS_CTContactPhone")
SOAP DECLARATION(WS_CTPhoneBus;Is string var;SOAP input;"WS_CTPhoneBus")
SOAP DECLARATION(WS_CTMobilePhone;Is string var;SOAP input;"WS_CTMobilePhone")
SOAP DECLARATION(WS_CTEmailAddress;Is string var;SOAP input;"WS_CTEmailAddress")
SOAP DECLARATION(WS_CTOrganization;Is Boolean;SOAP input;"WS_CTOrganization")
SOAP DECLARATION(WS_CTMarketSrce;Is string var;SOAP input;"WS_CTMarketSrce")
SOAP DECLARATION(WS_CTCustType;Is string var;SOAP input;"WS_CTCustType")
SOAP DECLARATION(WS_CTCategory;Is string var;SOAP input;"WS_CTCategory")
SOAP DECLARATION(WS_CTStoredBefore;Is integer;SOAP input;"WS_CTStoredBefore")
SOAP DECLARATION(WS_CTStoredGoods;Is string var;SOAP input;"WS_CTStoredGoods")
//WS_DATECHANGE=SOAP DECLARATION(WS_CTWhenRequired;Is String Var;SOAP Input;"WS_CTWhenRequired")
SOAP DECLARATION(WS_ContactDate;Is date;SOAP input;"WS_ContactDate")
SOAP DECLARATION(WS_CTExpDuration;Is integer;SOAP input;"WS_CTExpDuration")
SOAP DECLARATION(WS_asQTAnalysisCode;String array;SOAP input;"WS_asQTAnalysisCode")
SOAP DECLARATION(WS_asQTPrice;Real array;SOAP input;"WS_asQTPrice")
SOAP DECLARATION(WS_asQTSize;String array;SOAP input;"WS_asQTSize")
SOAP DECLARATION(WS_asQTUnitTypeCode;String array;SOAP input;"WS_asQTUnitTypeCode")
SOAP DECLARATION(WS_asQTNote;String array;SOAP input;"WS_asQTNote")
SOAP DECLARATION(WS_CTOldContactNo;Is text;SOAP input;"WS_CTOldContactNo")
SOAP DECLARATION(WS_CallTakenBy;Is text;SOAP input)
SOAP DECLARATION(WS_CTFollowUpDate;Is date;SOAP input)
SOAP DECLARATION(WS_WebServicePassword;Is text;SOAP input)

SOAP DECLARATION(WS_CTContactNo;Is string var;SOAP output;"WS_CTContactNo")
SOAP DECLARATION(WS_ORSuccess;Is Boolean;SOAP output)
SOAP DECLARATION(WS_ORErrorCode;Is integer;SOAP output)
SOAP DECLARATION(WS_ORErrorDescription;Is string var;SOAP output)

//Clear Variables before running method.
WS_ORSuccess:=True
WS_ORErrorCode:=0
WS_ORErrorDescription:=""

$String:="Start WS_AddContact1"+Char(13)
$String:=$String+"WS_CTContactName: "+WS_CTContactName+Char(13)
$String:=$String+"WS_CTTitle: "+WS_CTTitle+Char(13)
$String:=$String+"WS_CTFirstname: "+WS_CTFirstname+Char(13)
$String:=$String+"WS_CTUserName: "+WS_CTUserName+Char(13)
$String:=$String+"WS_CTMailAddress: "+WS_CTMailAddress+Char(13)
$String:=$String+"WS_CTMailCity: "+WS_CTMailCity+Char(13)
$String:=$String+"WS_CTMailState: "+WS_CTMailState+Char(13)
$String:=$String+"WS_CTMailZIPCode: "+WS_CTMailZIPCode+Char(13)
$String:=$String+"WS_CTMailCountry: "+WS_CTMailCountry+Char(13)
$String:=$String+"WS_CTContactPhone: "+String(WS_CTContactPhone)+Char(13)
$String:=$String+"WS_CTPhoneBus: "+WS_CTPhoneBus+Char(13)
$String:=$String+"WS_CTMobilePhone: "+WS_CTMobilePhone+Char(13)
$String:=$String+"WS_CTEmailAddress: "+WS_CTEmailAddress+Char(13)
$String:=$String+"WS_CTOrganization: "+String(WS_CTOrganization)+Char(13)
$String:=$String+"WS_CTOrganization: "+String(WS_CTOrganization)+Char(13)
$String:=$String+"WS_CTCustType: "+WS_CTCustType+Char(13)
$String:=$String+"WS_CTCategory: "+WS_CTCategory+Char(13)
$String:=$String+"WS_CTStoredBefore: "+String(WS_CTStoredBefore)+Char(13)
$String:=$String+"WS_CTStoredGoods: "+WS_CTStoredGoods+Char(13)
$String:=$String+"WS_ContactDate: "+String(WS_ContactDate)+Char(13)
$String:=$String+"WS_CTExpDuration: "+String(WS_CTExpDuration)+Char(13)
$String:=$String+"WS_CTFacility: "+WS_CTFacility+Char(13)

$vlElem:=1
$sizeofarray:=Size of array(WS_asQTAnalysisCode)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_asQTAnalysisCode("+String($vlElem)+"):"+WS_asQTAnalysisCode{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_asQTPrice)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_asQTPrice("+String($vlElem)+"):"+String(WS_asQTPrice{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_asQTSize)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_asQTSize("+String($vlElem)+"):"+WS_asQTSize{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_asQTUnitTypeCode)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_asQTUnitTypeCode("+String($vlElem)+"):"+WS_asQTUnitTypeCode{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_asQTNote)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_asQTNote("+String($vlElem)+"):"+WS_asQTNote{$vlElem}+Char(13)
End for 
$String:=$String+"WS_CTOldContactNo: "+WS_CTOldContactNo+Char(13)

C_TEXT($pass)
$pass:=WS_WebServicePassword
$pass:=Replace string($pass;Substring($pass;1;Length($pass)-2);"X"*(Length($pass)-2))
$String:=$String+"WS_WebServicePassword: "+$pass+Char(13)
$String:=$String+"WS_CallTakenBy: "+WS_CallTakenBy+Char(13)
WSRecordLog ($String)

READ WRITE([Reservation])
READ WRITE([Contacts])
READ WRITE([Agreement])
READ WRITE([OtherChgs])
READ WRITE([Customer])
READ WRITE([Trxs])
READ WRITE([Authenticate])
READ WRITE([Unit])
READ WRITE([BillPlan])

ALL RECORDS([Facility])
ORDER BY([Facility];[Facility]SortOrder;>)
<>sProduct:=[Facility]ProductCode
ARRAY TEXT(<>asSiteCodes;Records in selection([Facility]))
SELECTION TO ARRAY([Facility]FacilityCode;<>asSiteCodes)
ALL RECORDS([Facility])
ORDER BY([Facility];[Facility]SortOrder;>)

QUERY([Facility];[Facility]FacilityCode=WS_CTFacility)
//<>sFacility:=[Facility]FacilityCode


If (Records in selection([Facility])=1)

If (WS_WebServicePassword=[Facility]ODBCPassword) & ([Facility]ODBCPassword#"")

If (WS_CTOldContactNo>"")
QUERY([Contacts];[Contacts]ContactNo=WS_CTOldContactNo)
If (Records in selection([Contacts])=1)
OK:=1
Else 
OK:=0
End if 
Else 
CREATE RECORD([Contacts])
OK:=1
End if 

If (OK=1)
[Contacts]ContactName:=WS_CTContactName
[Contacts]Title:=WS_CTTitle
[Contacts]Firstname:=WS_CTFirstname
[Contacts]UserName:=WS_CTUserName
[Contacts]MailAddress:=WS_CTMailAddress
[Contacts]MailCity:=WS_CTMailCity
[Contacts]MailState:=WS_CTMailState
[Contacts]MailZIPCode:=WS_CTMailZIPCode
[Contacts]MailCountryCode:=WS_CTMailCountry
If ([Contacts]MailCountryCode="")
[Contacts]MailCountryCode:=[Facility]Country
End if 
ReadCountryCodeXML 
$Pos:=Find in array(asCountryCodes;[Contacts]MailCountryCode)
If ($Pos>0)
[Contacts]MailCountry:=asCountries{$Pos}
End if 
[Contacts]ContactPhone:=WS_CTContactPhone
[Contacts]PhoneBus:=WS_CTPhoneBus
[Contacts]MobilePhone:=WS_CTMobilePhone
[Contacts]EmailAddress:=WS_CTEmailAddress
[Contacts]Organization:=WS_CTOrganization
[Contacts]MarketSrce:=WS_CTMarketSrce
[Contacts]CustType:=WS_CTCustType
[Contacts]Category:=WS_CTCategory
[Contacts]StoredBefore:=WS_CTStoredBefore
[Contacts]StoredGoods:=WS_CTStoredGoods
[Contacts]WhenRequired:=WS_ContactDate
[Contacts]ExpDuration:=WS_CTExpDuration
[Contacts]Facility:=WS_CTFacility
[Contacts]FollowUpDate:=WS_CTFollowUpDate
[Contacts]CallDate:=Current date
[Contacts]CallTime:=Current time
[Contacts]CallTakenBy:="Web"

//15/07/13 DAM Added for KSS
If (WS_CallTakenBy#"")
[Contacts]CallTakenBy:=WS_CallTakenBy
End if 

If (WS_CTOldContactNo="")
READ WRITE([Facility])
QUERY([Facility];[Facility]FacilityCode=[Contacts]Facility)
If (<>sProduct="MV")
vOldContact:=500001
Else 
vOldContact:=[Facility]NextContactNo
End if 
$Continue:=False
If (Not(Semaphore("<>bNextSalesInqNo";1800)))
$Continue:=True
End if 
If ($Continue)
//If (Application type=4D Remote Mode)
GET PROCESS VARIABLE(-1;<>aiNextSalesInqNo;<>aiNextSalesInqNo)
//End if 
$arraypos:=Find in array(<>asSiteCodes;[Facility]FacilityCode)
Repeat 
If (<>aiNextSalesInqNo{$arraypos}>vOldContact)
//If (<>sProduct#"MV")
//ConfirmTwo (Get localized string("It appears the next sales inquiry number of")+" "+String(vOldContact;"0000000000")+" "+Get localized string("is already in use. Do you wish to use the next number?");Get localized string("Yes");Get localized string("No"))
//Else 
//OK:=1
//End if 
//If (OK=1)
[Contacts]ContactNo:=[Facility]FacilityCode+String(<>aiNextSalesInqNo{$arraypos};"0000000000")
vOldContact:=vOldContact+1
If (<>sProduct#"MV")
[Facility]NextContactNo:=<>aiNextSalesInqNo{$arraypos}+1
<>aiNextSalesInqNo{$arraypos}:=<>aiNextSalesInqNo{$arraypos}+1
Else 
<>aiNextSalesInqNo{$arraypos}:=<>aiNextSalesInqNo{$arraypos}+1
End if 
//Else 
//[Contacts]ContactNo:=<>sFacility+String(vOldContact;"0000000000")
//vOldContact:=vOldContact+1
//If (<>sProduct#"MV")
//[Facility]NextContactNo:=[Facility]NextContactNo+1
//<>aiNextSalesInqNo{$arraypos}:=vOldContact
//End if 
//End if 
Else 
[Contacts]ContactNo:=[Facility]FacilityCode+String(vOldContact;"0000000000")
vOldContact:=vOldContact+1
If (<>sProduct#"MV")
[Facility]NextContactNo:=[Facility]NextContactNo+1
End if 
<>aiNextSalesInqNo{$arraypos}:=vOldContact
End if 
$Key:=[Contacts]ContactNo
$i:=Find in field([Contacts]ContactNo;$Key)
Until ($i<=0)
SAVE RECORD([Facility])
READ ONLY([Facility])
LOAD RECORD([Facility])
//If (Application type=4D Remote Mode)
VARIABLE TO VARIABLE(-1;<>aiNextSalesInqNo;<>aiNextSalesInqNo)
//End if 
CLEAR SEMAPHORE("<>bNextSalesInqNo")
Else 
Repeat 
[Contacts]ContactNo:=[Facility]FacilityCode+String(vOldContact;"0000000000")
vOldContact:=vOldContact+1
If (<>sProduct#"MV")
[Facility]NextContactNo:=[Facility]NextContactNo+1
End if 
$Key:=[Contacts]ContactNo
$i:=Find in field([Contacts]ContactNo;$Key)
Until ($i<=0)
SAVE RECORD([Facility])
READ ONLY([Facility])
LOAD RECORD([Facility])
End if 
End if 
//24/04/15 DAM Added to log to make sure no error triggered
If ([Contacts]Facility=Substring([Contacts]ContactNo;1;5))
SAVE RECORD([Contacts])
WS_ORSuccess:=True
WS_ORErrorCode:=0
WS_ORErrorDescription:=""
Else 
//WS_OLD=WS_CTContactNo:=
WS_ORSuccess:=False
WS_ORErrorCode:=1047
WS_ORErrorDescription:="[Contacts]Facility = "+[Contacts]Facility+" does not match facility from [Contacts]ContactNo "+[Contacts]ContactNo
End if 

SAVE RECORD([Facility])
READ ONLY([Facility])
UNLOAD RECORD([Facility])

If ([Contacts]ContactNo="SK@")
QUERY([NotesHistory];[NotesHistory]ContactNo=[Contacts]ContactNo;*)
QUERY([NotesHistory]; & ;[NotesHistory]CustomerCode="")
If (Records in selection([NotesHistory])>0)
READ WRITE([NotesHistory])
DELETE SELECTION([NotesHistory])
End if 
End if 

For ($i;1;Size of array(WS_asQTAnalysisCode))
CREATE RECORD([Quote])
[Quote]ContactNo:=[Contacts]ContactNo
[Quote]AnalysisCode:=WS_asQTAnalysisCode{$i}
QUERY([Analysis];[Analysis]Code=[Quote]AnalysisCode)
[Quote]AnalysisDescription:=[Analysis]Description
[Quote]Price:=WS_asQTPrice{$i}
[Quote]Size:=WS_asQTSize{$i}
[Quote]UnitTypeCode:=WS_asQTUnitTypeCode{$i}
[Quote]Note:=WS_asQTNote{$i}
SAVE RECORD([Quote])
End for 


QUERY([Quote];[Quote]ContactNo=[Contacts]ContactNo;*)
QUERY([Quote]; & ;[Quote]UnitTypeCode>"")
$SizeQuoted:=""
For ($t;1;Records in selection([Quote]))
If ($t=1)
$Pos:=Position("Unit Type";[Quote]Size)
If ($Pos#0)
$SizeQuoted:=Substring([Quote]Size;12)
Else 
$SizeQuoted:=[Quote]Size
End if 
Else 
$Pos:=Position("Unit Type";[Quote]Size)
If ($Pos#0)
$SizeQuoted:=$SizeQuoted+","+Substring([Quote]Size;12)
Else 
$SizeQuoted:=$SizeQuoted+","+[Quote]Size
End if 
End if 
NEXT RECORD([Quote])
End for 
[Contacts]SizeQuoted:=Substring($SizeQuoted;1;25)

//24/04/15 DAM Added to log to make sure no error triggered
If ([Contacts]Facility=Substring([Contacts]ContactNo;1;5))
SAVE RECORD([Contacts])
Else 
//WS_OLD=WS_CTContactNo:="[Contacts]Facility = "+[Contacts]Facility+" doesnt' match facility from [Contacts]ContactNo "+[Contacts]ContactNo
WS_ORSuccess:=False
WS_ORErrorCode:=1047
WS_ORErrorDescription:="[Contacts]Facility = "+[Contacts]Facility+" doesnt' match facility from [Contacts]ContactNo "+[Contacts]ContactNo
End if 
//24/06/13 DAM Added as seems the Contact record is locked if call other methods after it. 
WS_CTContactNo:=[Contacts]ContactNo
WS_ORSuccess:=True
WS_ORErrorCode:=0
WS_ORErrorDescription:=""
//WS_ORErrorDescription:="Sales Enquiry successfully created in database Storman."
READ ONLY([Contacts])
UNLOAD RECORD([Contacts])
Else 
If (WS_CTOldContactNo>"")
WS_ORSuccess:=False
WS_ORErrorCode:=1043
WS_ORErrorDescription:="Sales Enquiry could not be created in database Storman."
Else 
//WS_OLD=WS_CTContactNo:="Invalid"
WS_ORSuccess:=False
WS_ORErrorCode:=1044
WS_ORErrorDescription:="Sales Enquiry could not found in database Storman."
End if 
End if 
Else 
//WS_OLD=WS_CTContactNo:="Incorrect Password"
WS_ORErrorCode:=1099
WS_ORErrorDescription:="Web Service Password is incorrect."
WS_ORSuccess:=False
End if 
Else 
WS_ORErrorCode:=1001
WS_ORErrorDescription:="Facility record not found in database Storman."
WS_ORSuccess:=False
End if 

READ ONLY([Reservation])
UNLOAD RECORD([Reservation])
READ ONLY([Customer])
UNLOAD RECORD([Customer])
READ ONLY([Trxs])
UNLOAD RECORD([Trxs])
READ ONLY([Authenticate])
UNLOAD RECORD([Authenticate])
READ ONLY([Unit])
UNLOAD RECORD([Unit])
READ ONLY([BillPlan])
UNLOAD RECORD([BillPlan])

$String:="End WS_AddContact1"+Char(13)
$String:=$String+"WS_CTContactNo: "+WS_CTContactNo+Char(13)
$String:=$String+"WS_ORSuccess: "+String(WS_ORSuccess)+Char(13)
$String:=$String+"WS_ORErrorCode: "+String(WS_ORErrorCode)+Char(13)
$String:=$String+"WS_ORErrorDescription: "+WS_ORErrorDescription+Char(13)
WSRecordLog ($String)


ReadOnlyAll 
UnloadAll 

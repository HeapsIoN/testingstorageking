//%attributes = {"publishedSoap":true,"publishedWsdl":true,"lang":"en"} comment added and reserved by 4D.

// ----------------------------------------------------
// User name (OS): robert.richardson
// Date and time: 16/04/10, 14:13:05
// ----------------------------------------------------
// Method: WS_CustomerEdit
// Description
// Allows editing of a customers settings
//
// Parameters
// ----------------------------------------------------
C_LONGINT($Type;$Length)
C_BOOLEAN($Index;$Unique;$Invisible)
C_TEXT(vWebNote)

SOAP DECLARATION(WS_Inputname;Is string var;SOAP input;"WS_Inputname")
SOAP DECLARATION(WS_Password;Is string var;SOAP input;"WS_Password")
SOAP DECLARATION(WS_Organization;Is Boolean;SOAP input;"WS_Organization")
SOAP DECLARATION(WS_Title;Is string var;SOAP input;"WS_Title")
SOAP DECLARATION(WS_CustomerName;Is string var;SOAP input;"WS_CustomerName")
SOAP DECLARATION(WS_FirstName;Is string var;SOAP input;"WS_FirstName")
SOAP DECLARATION(WS_DateofBirth;Is date;SOAP input;"WS_DateofBirth")
SOAP DECLARATION(WS_Username;Is string var;SOAP input;"WS_Username")
SOAP DECLARATION(WS_ABNNo;Is string var;SOAP input;"WS_ABNNo")
SOAP DECLARATION(WS_MailAddress;Is text;SOAP input;"WS_MailAddress")
SOAP DECLARATION(WS_MailSuburb;Is string var;SOAP input;"WS_MailSuburb")
SOAP DECLARATION(WS_MailCity;Is string var;SOAP input;"WS_MailCity")
SOAP DECLARATION(WS_MailState;Is string var;SOAP input;"WS_MailState")
SOAP DECLARATION(WS_MailPostZIPCode;Is string var;SOAP input;"WS_MailPostZIPCode")
SOAP DECLARATION(WS_MailCountry;Is string var;SOAP input;"WS_MailCountry")
SOAP DECLARATION(WS_StreetAddress;Is text;SOAP input;"WS_StreetAddress")
SOAP DECLARATION(WS_StreetSuburb;Is string var;SOAP input;"WS_StreetSuburb")
SOAP DECLARATION(WS_StreetCity;Is string var;SOAP input;"WS_StreetCity")
SOAP DECLARATION(WS_StreetState;Is string var;SOAP input;"WS_StreetState")
SOAP DECLARATION(WS_StreetZIPCode;Is string var;SOAP input;"WS_StreetZIPCode")
SOAP DECLARATION(WS_Country;Is string var;SOAP input;"WS_Country")
SOAP DECLARATION(WS_PhonePrivate;Is string var;SOAP input;"WS_PhonePrivate")
SOAP DECLARATION(WS_PhoneBus;Is string var;SOAP input;"WS_PhoneBus")
SOAP DECLARATION(WS_PhoneBusExt;Is string var;SOAP input;"WS_PhoneBusExt")
SOAP DECLARATION(WS_MobilePhone;Is string var;SOAP input;"WS_MobilePhone")
SOAP DECLARATION(WS_PrimaryPhone;Is integer;SOAP input;"WS_PrimaryPhone")
SOAP DECLARATION(WS_EmailAddress;Is string var;SOAP input;"WS_EmailAddress")
SOAP DECLARATION(WS_Employer;Is string var;SOAP input;"WS_Employer")
SOAP DECLARATION(WS_LicenceNo;Is string var;SOAP input;"WS_LicenceNo")
SOAP DECLARATION(WS_LicenseState;Is string var;SOAP input;"WS_LicenseState")
SOAP DECLARATION(WS_Vehicle;Is string var;SOAP input;"WS_Vehicle")
SOAP DECLARATION(WS_CarRego;Is string var;SOAP input;"WS_CarRego")
SOAP DECLARATION(WS_MarketSrce;Is string var;SOAP input;"WS_MarketSrce")
SOAP DECLARATION(WS_CustType;Is string var;SOAP input;"WS_CustType")
SOAP DECLARATION(WS_BusType;Is string var;SOAP input;"WS_BusType")
SOAP DECLARATION(WS_ReasonRenting;Is string var;SOAP input;"WS_ReasonRenting")
SOAP DECLARATION(WS_MarketingOptOut;Is Boolean;SOAP input;"WS_MarketingOptOut")
SOAP DECLARATION(WS_AltContact;Is text;SOAP input;"WS_AltContact")
SOAP DECLARATION(WS_AltTitle;Is string var;SOAP input;"WS_AltTitle")
SOAP DECLARATION(WS_AlternateName;Is string var;SOAP input;"WS_AlternateName")
SOAP DECLARATION(WS_AlternateAddress;Is text;SOAP input;"WS_AlternateAddress")
SOAP DECLARATION(WS_AltSuburb;Is string var;SOAP input;"WS_AltSuburb")
SOAP DECLARATION(WS_AlternateCity;Is string var;SOAP input;"WS_AlternateCity")
SOAP DECLARATION(WS_AlternateState;Is string var;SOAP input;"WS_AlternateState")
SOAP DECLARATION(WS_AlternateZIPCode;Is string var;SOAP input;"WS_AlternateZIPCode")
SOAP DECLARATION(WS_AltCountry;Is string var;SOAP input;"WS_AltCountry")
SOAP DECLARATION(WS_AlternatePhone;Is string var;SOAP input;"WS_AlternatePhone")
SOAP DECLARATION(WS_AltBusiness;Is string var;SOAP input;"WS_AltBusiness")
SOAP DECLARATION(WS_AltBusExt;Is string var;SOAP input;"WS_AltBusExt")
SOAP DECLARATION(WS_AltMobile;Is string var;SOAP input;"WS_AltMobile")
SOAP DECLARATION(WS_AltEmail;Is string var;SOAP input;"WS_AltEmail")
SOAP DECLARATION(WS_AutoEmailCC;Is Boolean;SOAP input;"WS_AutoEmailCC")
SOAP DECLARATION(WS_AccessList;Is text;SOAP input;"WS_AccessList")
SOAP DECLARATION(WS_asRAgreeNo;String array;SOAP input;"WS_asRAgreeNo")
SOAP DECLARATION(WS_aiDaytoBill;Integer array;SOAP input;"WS_aiDaytoBill")
SOAP DECLARATION(WS_abSendNotices;Boolean array;SOAP input;"WS_abSendNotices")
SOAP DECLARATION(WS_aiNoticeDaysPrior;Integer array;SOAP input;"WS_aiNoticeDaysPrior")
SOAP DECLARATION(WS_abSendNoticesEmail;Boolean array;SOAP input;"WS_abSendNoticesEmail")
SOAP DECLARATION(WS_abSendNoticeSMS;Boolean array;SOAP input;"WS_abSendNoticeSMS")
SOAP DECLARATION(WS_abAutoPay;Boolean array;SOAP input;"WS_abAutoPay")
SOAP DECLARATION(WS_arAutoPayAmt;Real array;SOAP input;"WS_arAutoPayAmt")
SOAP DECLARATION(WS_aiAutoPayType;Integer array;SOAP input;"WS_aiAutoPayType")
SOAP DECLARATION(WS_adAuthCCSigned;Date array;SOAP input;"WS_adAuthCCSigned")
SOAP DECLARATION(WS_adAuthCCExpiry;Date array;SOAP input;"WS_adAuthCCExpiry")
SOAP DECLARATION(WS_adOutNoticeDate;Date array;SOAP input;"WS_adOutNoticeDate")
SOAP DECLARATION(WS_adMoveIn;Date array;SOAP input;"WS_adMoveIn")
SOAP DECLARATION(WS_adMoveOut;Date array;SOAP input;"WS_adMoveOut")
SOAP DECLARATION(WS_asUTRUnitNo;String array;SOAP input;"WS_asUTRUnitNo")
SOAP DECLARATION(WS_asUTAgreeNo;String array;SOAP input;"WS_asUTAgreeNo")
SOAP DECLARATION(WS_arUTInsureVal;Real array;SOAP input;"WS_arUTInsureVal")
SOAP DECLARATION(WS_asRReserveNo;String array;SOAP input;"WS_asRReserveNo")
SOAP DECLARATION(WS_adExpMoveIn;Date array;SOAP input;"WS_adExpMoveIn")
SOAP DECLARATION(WS_asUTResRUnitNo;String array;SOAP input;"WS_asUTResRUnitNo")
SOAP DECLARATION(WS_asUTReservedTo;String array;SOAP input;"WS_asUTReservedTo")
SOAP DECLARATION(WS_asPCName;String array;SOAP input;"WS_asPCName")
SOAP DECLARATION(WS_asPCPINCardNo;String array;SOAP input;"WS_asPCPINCardNo")
SOAP DECLARATION(WS_FaxNo;Is string var;SOAP input;"WS_FaxNo")
SOAP DECLARATION(WS_Custom1;Is string var;SOAP input;"WS_Custom1")
SOAP DECLARATION(WS_Custom2;Is string var;SOAP input;"WS_Custom2")
SOAP DECLARATION(WS_Custom3;Is string var;SOAP input;"WS_Custom3")
SOAP DECLARATION(WS_Custom4;Is string var;SOAP input;"WS_Custom4")
SOAP DECLARATION(WS_customerProfileID;Is string var;SOAP input;"WS_customerProfileID")
SOAP DECLARATION(WS_customerPaymentProfID;Is string var;SOAP input;"WS_customerPaymentProfID")
SOAP DECLARATION(WS_CCNo;Is string var;SOAP input;"WS_CCNo")
SOAP DECLARATION(WS_CCExpiry;Is string var;SOAP input;"WS_CCExpiry")
SOAP DECLARATION(WS_CCName;Is string var;SOAP input;"WS_CCName")
SOAP DECLARATION(WS_CCValidFrom;Is string var;SOAP input;"WS_CCValidFrom")
SOAP DECLARATION(WS_BankAccountName;Is string var;SOAP input;"WS_BankAccountName")
SOAP DECLARATION(WS_BankAcct;Is string var;SOAP input;"WS_BankAcct")
SOAP DECLARATION(WS_BankName;Is string var;SOAP input;"WS_BankName")
SOAP DECLARATION(WS_BSB;Is string var;SOAP input;"WS_BSB")
SOAP DECLARATION(WS_GatePIN;Is text;SOAP input)
SOAP DECLARATION(WS_WebID;Is text;SOAP input)
SOAP DECLARATION(WS_CreateNote;Is Boolean;SOAP input)
SOAP DECLARATION(WS_WebServicePassword;Is text;SOAP input)
SOAP DECLARATION(WS_PhotoIDType;Is text;SOAP input)

//WS_OLD=SOAP DECLARATION(WS_Edit;Is Boolean;SOAP Output;"WS_Edit")
SOAP DECLARATION(WS_asOutPCName;String array;SOAP output;"WS_asOutPCName")
SOAP DECLARATION(WS_asOutPCPINCardNo;String array;SOAP output;"WS_asOutPCPINCardNo")
SOAP DECLARATION(WS_CustomerID;Is string var;SOAP output;"WS_CustomerID")

SOAP DECLARATION(WS_ORSuccess;Is Boolean;SOAP output)
SOAP DECLARATION(WS_ORErrorCode;Is integer;SOAP output)
SOAP DECLARATION(WS_ORErrorDescription;Is string var;SOAP output)

//Clear Variables before running method.
WS_ORSuccess:=True
WS_ORErrorCode:=0
WS_ORErrorDescription:=""

$String:="Start WS_CustomerEdit"+Char(13)
$String:=$String+"WS_Inputname: "+WS_Inputname+Char(13)
$String:=$String+"WS_Password: "+WS_Password+Char(13)
$String:=$String+"WS_Organization: "+String(WS_Organization)+Char(13)
$String:=$String+"WS_Title: "+WS_Title+Char(13)
$String:=$String+"WS_CustomerName: "+WS_CustomerName+Char(13)
$String:=$String+"WS_FirstName: "+WS_FirstName+Char(13)
$String:=$String+"WS_DateofBirth: "+String(WS_DateofBirth)+Char(13)
$String:=$String+"WS_Username: "+WS_Username+Char(13)
$String:=$String+"WS_ABNNo: "+WS_ABNNo+Char(13)
$String:=$String+"WS_MailAddress: "+WS_MailAddress+Char(13)
$String:=$String+"WS_MailSuburb: "+WS_MailSuburb+Char(13)
$String:=$String+"WS_MailCity: "+WS_MailCity+Char(13)
$String:=$String+"WS_MailState: "+WS_MailState+Char(13)
$String:=$String+"WS_MailPostZIPCode: "+WS_MailPostZIPCode+Char(13)
$String:=$String+"WS_MailCountry: "+WS_MailCountry+Char(13)
$String:=$String+"WS_StreetAddress: "+WS_StreetAddress+Char(13)
$String:=$String+"WS_StreetSuburb: "+WS_StreetSuburb+Char(13)
$String:=$String+"WS_StreetCity: "+WS_StreetCity+Char(13)
$String:=$String+"WS_StreetState: "+WS_StreetState+Char(13)
$String:=$String+"WS_StreetZIPCode: "+WS_StreetZIPCode+Char(13)
$String:=$String+"WS_Country: "+WS_Country+Char(13)
$String:=$String+"WS_PhonePrivate: "+WS_PhonePrivate+Char(13)
$String:=$String+"WS_PhoneBus: "+WS_PhoneBus+Char(13)
$String:=$String+"WS_PhoneBusExt: "+WS_PhoneBusExt+Char(13)
$String:=$String+"WS_MobilePhone: "+WS_MobilePhone+Char(13)
$String:=$String+"WS_PrimaryPhone: "+String(WS_PrimaryPhone)+Char(13)
$String:=$String+"WS_EmailAddress: "+WS_EmailAddress+Char(13)
$String:=$String+"WS_Employer: "+WS_Employer+Char(13)
$String:=$String+"WS_LicenceNo: "+WS_LicenceNo+Char(13)
$String:=$String+"WS_LicenseState: "+WS_LicenseState+Char(13)
$String:=$String+"WS_Vehicle: "+WS_Vehicle+Char(13)
$String:=$String+"WS_CarRego: "+WS_CarRego+Char(13)
$String:=$String+"WS_MarketSrce: "+WS_MarketSrce+Char(13)
$String:=$String+"WS_CustType: "+WS_CustType+Char(13)
$String:=$String+"WS_BusType: "+WS_BusType+Char(13)
$String:=$String+"WS_ReasonRenting: "+WS_ReasonRenting+Char(13)
$String:=$String+"WS_MarketingOptOut: "+String(WS_MarketingOptOut)+Char(13)
$String:=$String+"WS_AltContact: "+WS_AltContact+Char(13)
$String:=$String+"WS_AltTitle: "+WS_AltTitle+Char(13)
$String:=$String+"WS_AlternateName: "+WS_AlternateName+Char(13)
$String:=$String+"WS_AlternateAddress: "+WS_AlternateAddress+Char(13)
$String:=$String+"WS_AltSuburb: "+WS_AltSuburb+Char(13)
$String:=$String+"WS_AlternateCity: "+WS_AlternateCity+Char(13)
$String:=$String+"WS_AlternateState: "+WS_AlternateState+Char(13)
$String:=$String+"WS_AlternateZIPCode: "+WS_AlternateZIPCode+Char(13)
$String:=$String+"WS_AltCountry: "+WS_AltCountry+Char(13)
$String:=$String+"WS_AlternatePhone: "+WS_AlternatePhone+Char(13)
$String:=$String+"WS_AltBusiness: "+WS_AltBusiness+Char(13)
$String:=$String+"WS_AltBusExt: "+WS_AltBusExt+Char(13)
$String:=$String+"WS_AltMobile: "+WS_AltMobile+Char(13)
$String:=$String+"WS_AltEmail: "+WS_AltEmail+Char(13)
$String:=$String+"WS_AutoEmailCC: "+String(WS_AutoEmailCC)+Char(13)
$String:=$String+"WS_AccessList: "+WS_AccessList+Char(13)
$sizeofarray:=Size of array(WS_asRAgreeNo)

For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_asRAgreeNo("+String($vlElem)+"):"+WS_asRAgreeNo{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_aiDaytoBill)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_aiDaytoBill("+String($vlElem)+"):"+String(WS_aiDaytoBill{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_abSendNotices)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_abSendNotices("+String($vlElem)+"):"+String(WS_abSendNotices{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_aiNoticeDaysPrior)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_aiNoticeDaysPrior("+String($vlElem)+"):"+String(WS_aiNoticeDaysPrior{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_abSendNoticesEmail)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_abSendNoticesEmail("+String($vlElem)+"):"+String(WS_abSendNoticesEmail{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_abSendNoticeSMS)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_abSendNoticeSMS("+String($vlElem)+"):"+String(WS_abSendNoticeSMS{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_abAutoPay)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_abAutoPay("+String($vlElem)+"):"+String(WS_abAutoPay{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_arAutoPayAmt)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_arAutoPayAmt("+String($vlElem)+"):"+String(WS_arAutoPayAmt{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_aiAutoPayType)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_aiAutoPayType("+String($vlElem)+"):"+String(WS_aiAutoPayType{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_adAuthCCSigned)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_adAuthCCSigned("+String($vlElem)+"):"+String(WS_adAuthCCSigned{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_adAuthCCExpiry)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_adAuthCCExpiry("+String($vlElem)+"):"+String(WS_adAuthCCExpiry{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_adOutNoticeDate)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_adOutNoticeDate("+String($vlElem)+"):"+String(WS_adOutNoticeDate{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_adMoveIn)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_adMoveIn("+String($vlElem)+"):"+String(WS_adMoveOut{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_adMoveOut)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_adMoveOut("+String($vlElem)+"):"+String(WS_adMoveOut{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_asUTRUnitNo)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_asUTRUnitNo("+String($vlElem)+"):"+WS_asUTRUnitNo{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_asUTAgreeNo)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_asUTAgreeNo("+String($vlElem)+"):"+WS_asUTAgreeNo{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_arUTInsureVal)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_arUTInsureVal("+String($vlElem)+"):"+String(WS_arUTInsureVal{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_asRReserveNo)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_asRReserveNo("+String($vlElem)+"):"+WS_asRReserveNo{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_adExpMoveIn)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_adExpMoveIn("+String($vlElem)+"):"+String(WS_adExpMoveIn{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_asUTResRUnitNo)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_asUTResRUnitNo("+String($vlElem)+"):"+WS_asUTResRUnitNo{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_asUTReservedTo)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_asUTReservedTo("+String($vlElem)+"):"+WS_asUTReservedTo{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_asPCName)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_asPCName("+String($vlElem)+"):"+WS_asPCName{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_asPCPINCardNo)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_asPCPINCardNo("+String($vlElem)+"):"+WS_asPCPINCardNo{$vlElem}+Char(13)
End for 

$String:=$String+"WS_FaxNo: "+WS_FaxNo+Char(13)
$String:=$String+"WS_Custom1: "+WS_Custom1+Char(13)
$String:=$String+"WS_Custom2: "+WS_Custom2+Char(13)
$String:=$String+"WS_Custom3: "+WS_Custom3+Char(13)
$String:=$String+"WS_Custom4: "+WS_Custom4+Char(13)
$String:=$String+"WS_customerProfileID: "+WS_customerProfileID+Char(13)
$String:=$String+"WS_customerPaymentProfID: "+WS_customerPaymentProfID+Char(13)
$String:=$String+"WS_CCNo: "+WS_CCNo+Char(13)
$String:=$String+"WS_CCExpiry: "+WS_CCExpiry+Char(13)
$String:=$String+"WS_CCName: "+WS_CCName+Char(13)
$String:=$String+"WS_CCValidFrom: "+WS_CCValidFrom+Char(13)
$String:=$String+"WS_BankAccountName: "+WS_BankAccountName+Char(13)
$String:=$String+"WS_BankAcct: "+WS_BankAcct+Char(13)
$String:=$String+"WS_BankName: "+WS_BankName+Char(13)
$String:=$String+"WS_BSB: "+WS_BSB+Char(13)
$String:=$String+"WS_GatePIN: "+WS_GatePIN+Char(13)
$String:=$String+"WS_WebID: "+WS_WebID+Char(13)
C_TEXT($pass)
$pass:=WS_WebServicePassword
$pass:=Replace string($pass;Substring($pass;1;Length($pass)-2);"X"*(Length($pass)-2))
$String:=$String+"WS_WebServicePassword: "+$pass+Char(13)
$String:=$String+"WS_CreateNote: "+String(WS_CreateNote)+Char(13)
WSRecordLog ($String)


READ WRITE([Customer])
READ WRITE([Agreement])
READ WRITE([OtherChgs])
READ WRITE([Reservation])
READ WRITE([Unit])
READ WRITE([PhotosCards])

QUERY([Facility];[Facility]FacilityCode=Substring(WS_Inputname;1;5))

If ((WS_WebServicePassword=[Facility]ODBCPassword) & ([Facility]ODBCPassword#"")) | ([Facility]FacilityCode="ALASA")// second condition is for iPad to work on Onehunga All Secure

$Customercode:=WS_Inputname

If (Length(WS_Inputname)=5)
vName:=WS_CustomerName
$Customercode:=CreateCustCode_Web (WS_Inputname)
End if 

QUERY([Customer];[Customer]CustomerCode=$Customercode)
If (Records in selection([Customer])=1) & (Locked([Customer])=False)
WS_ORSuccess:=True
WS_ORErrorCode:=0
WS_ORErrorDescription:="Customer details successfully updated in database Storman."
//WS_OLD=WS_Edit:=True
If (WS_Password#"")
[Customer]Password:=WS_Password
End if 
[Customer]Organization:=WS_Organization
If (WS_Title#"")
[Customer]Title:=WS_Title
End if 
If (WS_CustomerName#"")
[Customer]CustomerName:=WS_CustomerName
End if 
If (WS_FirstName#"")
[Customer]FirstName:=WS_FirstName
End if 

If (WS_DateofBirth#!00-00-00!) & (String(WS_DateofBirth)#"00/00/00")//10674
[Customer]DateofBirth:=WS_DateofBirth
End if 
If (WS_Username#"")
[Customer]UserName:=WS_Username
End if 
If (WS_ABNNo#"")
[Customer]ABNNo:=WS_ABNNo
End if 
If (WS_MailAddress#"")
[Customer]MailAddress:=WS_MailAddress
End if 
If (WS_MailSuburb#"")
[Customer]MailSuburb:=WS_MailSuburb
End if 
If (WS_MailCity#"")
[Customer]MailCity:=WS_MailCity
End if 
If (WS_MailState#"")
[Customer]MailState:=WS_MailState
End if 
If (WS_MailPostZIPCode#"")
[Customer]MailPostZIPCode:=WS_MailPostZIPCode
End if 
If (WS_MailCountry#"")
[Customer]MailCountryCode:=WS_MailCountry
End if 
ReadCountryCodeXML 
$Pos:=Find in array(asCountryCodes;[Customer]MailCountryCode)
If ($Pos>0)
[Customer]MailCountry:=asCountries{$Pos}
End if 
If (WS_StreetAddress#"")
[Customer]StreetAddress:=WS_StreetAddress
End if 
If (WS_StreetSuburb#"")
[Customer]StreetSuburb:=WS_StreetSuburb
End if 
If (WS_StreetCity#"")
[Customer]StreetCity:=WS_StreetCity
End if 
If (WS_StreetState#"")
[Customer]StreetState:=WS_StreetState
End if 
If (WS_StreetZIPCode#"")
[Customer]StreetZIPCode:=WS_StreetZIPCode
End if 
If (WS_Country#"")
[Customer]CountryCode:=WS_Country
End if 
$Pos:=Find in array(asCountryCodes;[Customer]CountryCode)
If ($Pos>0)
[Customer]Country:=asCountries{$Pos}
End if 
If (WS_PhonePrivate#"")
[Customer]PhonePrivate:=WS_PhonePrivate
End if 
If (WS_PhoneBus#"")
[Customer]PhoneBus:=WS_PhoneBus
End if 
If (WS_PhoneBusExt#"")
[Customer]PhoneBusExt:=WS_PhoneBusExt
End if 
If (WS_MobilePhone#"")
[Customer]MobilePhone:=WS_MobilePhone
End if 
If (WS_PrimaryPhone#0)
[Customer]PrimaryPhone:=WS_PrimaryPhone
End if 
If (WS_EmailAddress#"")
[Customer]EmailAddress:=WS_EmailAddress
End if 
If (WS_Employer#"")
[Customer]Employer:=WS_Employer
End if 
If (WS_LicenceNo#"")
[Customer]LicenceNo:=WS_LicenceNo
End if 
If (WS_LicenseState#"")
[Customer]LicenseState:=WS_LicenseState
End if 
If (WS_Vehicle#"")
[Customer]Vehicle:=WS_Vehicle
End if 
If (WS_CarRego#"")
[Customer]CarRego:=WS_CarRego
End if 
If (WS_MarketSrce#"")
[Customer]MarketSrce:=WS_MarketSrce
End if 
If (WS_CustType#"")
[Customer]CustType:=WS_CustType
End if 
If (WS_BusType#"")
[Customer]BusType:=WS_BusType
End if 
If (WS_ReasonRenting#"")
[Customer]ReasonRenting:=WS_ReasonRenting
End if 
[Customer]MarketingOptOut:=WS_MarketingOptOut
If (WS_AltContact#"")
[Customer]AltContact:=WS_AltContact
End if 
If (WS_AltTitle#"")
[Customer]AltTitle:=WS_AltTitle
End if 
If (WS_AlternateName#"")
[Customer]AlternateName:=WS_AlternateName
End if 
If (WS_AlternateAddress#"")
[Customer]AlternateAddress:=WS_AlternateAddress
End if 
If (WS_AltSuburb#"")
[Customer]AltSuburb:=WS_AltSuburb
End if 
If (WS_AlternateCity#"")
[Customer]AlternateCity:=WS_AlternateCity
End if 
If (WS_AlternateState#"")
[Customer]AlternateState:=WS_AlternateState
End if 
If (WS_AlternateZIPCode#"")
[Customer]AlternateZIPCode:=WS_AlternateZIPCode
End if 
If (WS_AltCountry#"")
[Customer]AltCountryCode:=WS_AltCountry
End if 
$Pos:=Find in array(asCountryCodes;[Customer]AltCountryCode)
If ($Pos>0)
[Customer]AltCountry:=asCountries{$Pos}
End if 
If (WS_AlternatePhone#"")
[Customer]AlternatePhone:=WS_AlternatePhone
End if 
If (WS_AltBusiness#"")
[Customer]AltBusiness:=WS_AltBusiness
End if 
If (WS_AltBusExt#"")
[Customer]AltBusExt:=WS_AltBusExt
End if 
If (WS_AltMobile#"")
[Customer]AltMobile:=WS_AltMobile
End if 
If (WS_AltEmail#"")
[Customer]AltEmail:=WS_AltEmail
End if 
[Customer]AutoEmailCC:=WS_AutoEmailCC
If (WS_AccessList#"")
[Customer]AccessList:=WS_AccessList
End if 
If (WS_FaxNo#"")
[Customer]FaxNo:=WS_FaxNo
End if 
If (WS_Custom1#"")
[Customer]Custom1:=WS_Custom1
End if 
If (WS_Custom2#"")
[Customer]Custom2:=WS_Custom2
End if 
If (WS_Custom3#"")
[Customer]Custom3:=WS_Custom3
End if 
If (WS_Custom4#"")
[Customer]Custom4:=WS_Custom4
End if 
If (WS_customerProfileID#"")
[Customer]customerProfileID:=WS_customerProfileID
End if 
If (WS_customerPaymentProfID#"")
[Customer]custPaymentProfID:=WS_customerPaymentProfID
End if 

If ([Customer]customerProfileID>"") | ([Customer]custPaymentProfID>"")
//[Customer]CCNo:="000000000000"+Substring(WS_CCNo;(Length(WS_CCNo)-4))
//[Customer]CCNo:=Tokenizer ([Customer]CCNo;True)
Encode256 (WS_CCNo)
Else 
//[Customer]CCNo:=Tokenizer (WS_CCNo;True)  
Encode256 (WS_CCNo)
End if 
If (WS_CCExpiry#"")
[Customer]CCExpiry:=WS_CCExpiry
End if 
If (WS_CCName#"")
[Customer]CCName:=WS_CCName
End if 
If (WS_CCValidFrom#"")
[Customer]CCValidFrom:=WS_CCValidFrom
End if 
If (WS_BankAccountName#"")
[Customer]BankAccountName:=WS_BankAccountName
End if 
If (WS_BankAcct#"")
[Customer]BankAcct:=WS_BankAcct
End if 
If (WS_BankName#"")
[Customer]BankName:=WS_BankName
End if 
If (WS_BSB#"")
[Customer]BSB:=WS_BSB
End if 
If (WS_WebID#"")
[Customer]WebID:=WS_WebID
End if 

If (WS_PhotoIDType#"")
[Customer]IDType:=WS_PhotoIDType
End if 

//07/04/14 DAM Added for KSS
If ([Facility]FacilityCode="KE@")
If (WS_GatePIN#"")
[Customer]GatePIN:=WS_GatePIN
End if 
Else 
If (WS_GatePIN="")
RandomPIN 
Else 
[Customer]GatePIN:=WS_GatePIN
End if 
End if 

vWebNote:=""

$vlLastField:=Get last field number(5)
//Give value of elements
For ($vlField;1;$vlLastField)
If (Is field number valid(5;$vlField))
$vlFieldPointer:=Field(5;$vlField)
GET FIELD PROPERTIES($vlFieldPointer;$Type;$Length;$Index;$Unique;$Invisible)
If (($Type#7) & ($Type#30))//code256
//If ($Type#7)
If ($vlFieldPointer->#Old($vlFieldPointer->))
vWebNote:=vWebNote+Field name($vlFieldPointer)+" was "+String(Old($vlFieldPointer->))+" now "+String($vlFieldPointer->)+Char(13)
End if 
End if 
End if 
End for 

SAVE RECORD([Customer])

For ($i;1;Size of array(WS_asRAgreeNo))
QUERY([Agreement];[Agreement]RAgreeNo=WS_asRAgreeNo{$i})
If (Records in selection([Agreement])=1) & (Locked([Agreement])=False)
[Agreement]DaytoBill:=WS_aiDaytoBill{$i}
[Agreement]SendNotices:=WS_abSendNotices{$i}
[Agreement]NoticeDaysPrior:=WS_aiNoticeDaysPrior{$i}
[Agreement]SendNoticesEmail:=WS_abSendNoticesEmail{$i}
[Agreement]SendNoticeSMS:=WS_abSendNoticeSMS{$i}
[Agreement]AutoPay:=WS_abAutoPay{$i}
[Agreement]AutoPayAmt:=WS_arAutoPayAmt{$i}
[Agreement]AutoPayType:=WS_aiAutoPayType{$i}
[Agreement]AuthCCSigned:=WS_adAuthCCSigned{$i}
[Agreement]AuthCCExpiry:=WS_adAuthCCExpiry{$i}
[Agreement]OutNoticeDate:=WS_adOutNoticeDate{$i}
[Agreement]MoveOut:=WS_adMoveOut{$i}
[Agreement]MoveIn:=WS_adMoveIn{$i}

$vlLastField:=Get last field number(4)
// Give value of elements
For ($vlField;1;$vlLastField)
If (Is field number valid(4;$vlField))
$vlFieldPointer:=Field(4;$vlField)
GET FIELD PROPERTIES($vlFieldPointer;$Type;$Length;$Index;$Unique;$Invisible)
If (($Type#7) & ($Type#30))//code256
//If ($Type#7)
If ($vlFieldPointer->#Old($vlFieldPointer->))
vWebNote:=vWebNote+"Agreement Number: "+[Agreement]RAgreeNo+" ; "+Field name($vlFieldPointer)+" was "+String(Old($vlFieldPointer->))+" now "+String($vlFieldPointer->)+Char(13)
End if 
End if 
End if 
End for 

SAVE RECORD([Agreement])
End if 
End for 

For ($i;1;Size of array(WS_asRReserveNo))
QUERY([Reservation];[Reservation]RReserveNo=WS_asRReserveNo{$i})
If (Records in selection([Reservation])=1) & (Locked([Reservation])=False)
[Reservation]ExpMoveIn:=WS_adExpMoveIn{$i}

$vlLastField:=Get last field number(17)
// Give value of elements
For ($vlField;1;$vlLastField)
If (Is field number valid(17;$vlField))
$vlFieldPointer:=Field(17;$vlField)
GET FIELD PROPERTIES($vlFieldPointer;$Type;$Length;$Index;$Unique;$Invisible)
If (($Type#7) & ($Type#30))//code256
//If ($Type#7)
If ($vlFieldPointer->#Old($vlFieldPointer->))
vWebNote:=vWebNote+"Reservation Number: "+[Reservation]RReserveNo+" ; "+Field name($vlFieldPointer)+" was "+String(Old($vlFieldPointer->))+" now "+String($vlFieldPointer->)+Char(13)
End if 
End if 
End if 
End for 

SAVE RECORD([Reservation])
End if 
End for 

QUERY([PhotosCards];[PhotosCards]Code=[Customer]CustomerCode;*)
QUERY([PhotosCards]; & ;[PhotosCards]Size=0)
DELETE SELECTION([PhotosCards])

For ($i;1;Size of array(WS_asPCName))
CREATE RECORD([PhotosCards])
[PhotosCards]Code:=[Customer]CustomerCode
[PhotosCards]Name:=WS_asPCName{$i}
If (WS_asPCPINCardNo{$i}="Random")
[PhotosCards]PINCardNo:=RandomWebPIN 
Else 
[PhotosCards]PINCardNo:=WS_asPCPINCardNo{$i}
End if 
[PhotosCards]UnitAccess:="All"
vWebNote:=vWebNote+"Extra PIN User: "+[PhotosCards]Name+" ; "+[PhotosCards]PINCardNo+Char(13)
SAVE RECORD([PhotosCards])
End for 

For ($i;1;Size of array(WS_asUTRUnitNo))
QUERY([Unit];[Unit]RUnitNo=WS_asUTRUnitNo{$i})
If (Records in selection([Unit])=1) & (Locked([Unit])=False)
[Unit]InsureValue:=WS_arUTInsureVal{$i}
[Unit]UpdateGate:=True
[Unit]UpdatePULS:=<>tUtilities
If ([Unit]InsureValue#Old([Unit]InsureValue))
vWebNote:=vWebNote+"Unit Number: "+[Unit]RUnitNo+" ; insurance value was "+String(Old([Unit]InsureValue))+" now "+String([Unit]InsureValue)
QUERY([Notices];[Notices]Description="WebCustEdit")
If (Records in selection([Notices])=1)
QUERY([Facility];[Facility]FacilityCode=Substring([Customer]CustomerCode;1;5))
$p:=->[Notices]Email
BLOB PROPERTIES($p->;$Compressed)
If ($Compressed#Is not compressed)
EXPAND BLOB($p->)
End if 
//$Letter:=FreezeLetter ($p;True;2)
CREATE RECORD([Message])
[Message]Subject:=[Notices]EmailSubject
[Message]Address:=[Facility]EmailAddress
[Message]OutIn:=True
[Message]MsgDate:=Current date
[Message]MsgTime:=Current time
[Message]Facility:=[Facility]FacilityCode
//$Document:=<>sTutPath+"Email"+[Customer]CustomerCode
//If ((Test path name($Document)=Is a document))
//$vhDocRef:=Open document($Document)  // Select the document of your choice
//CLOSE DOCUMENT($vhDocRef)
//DOCUMENT TO BLOB(Document;$Blob74)
//$Blobtext74:=BLOB to text($Blob74;Mac text without length)
//$Blobtext74:=Replace string($Blobtext74;"./images/";<>sTutPath+"images\\")
//$Blobtext74:=Replace string($Blobtext74;"<p>";"<br>")
//$Blobtext74:=Replace string($Blobtext74;"</p>";"<br>")
//TEXT TO BLOB($Blobtext74;[Message]EmailMsg;Mac text without length)
//DELETE DOCUMENT($Document)
//Else 
//[Message]MsgBody:=vLeg
//End if 
$emailText:=Convert to text($p->;"UTF-8")
$emailText:=ProcessStormanHTMLTags ($emailText)
CONVERT FROM TEXT($emailText;"UTF-8";[Message]EmailMsg)
[Message]Subject:=ProcessStormanHTMLTags ([Message]Subject)
SAVE RECORD([Message])
QUERY([Facility];[Facility]FacilityCode=<>sHOFacility)
SendMail 
End if 
End if 
SAVE RECORD([Unit])
End if 
End for 

//22/04/14
//DAM Added changes for [Agreement]InsureValue 
QUERY([Unit];[Unit]AgreeNo=[Agreement]RAgreeNo)
[Agreement]InsureValue:=Sum([Unit]InsureValue)
SAVE RECORD([Agreement])

If (WS_CreateNote=True)
CREATE RECORD([NotesHistory])
[NotesHistory]CustomerCode:=[Customer]CustomerCode
[NotesHistory]Category:="Web Edit"
[NotesHistory]Note:=vWebNote
[NotesHistory]NoteDate:=Current date
[NotesHistory]NoteTime:=Current time
[NotesHistory]UserLogin:="Customer"
SAVE RECORD([NotesHistory])
End if 
CLEAR VARIABLE(vWebNote)

QUERY([PhotosCards];[PhotosCards]Code=[Customer]CustomerCode;*)
QUERY([PhotosCards]; & ;[PhotosCards]Size=0)
SELECTION TO ARRAY([PhotosCards]Name;WS_asPCName;[PhotosCards]PINCardNo;WS_asPCPINCardNo)
WS_CustomerID:=[Customer]CustomerCode
Else 
//WS_OLD=WS_Edit:=False
WS_ORSuccess:=False
WS_ORErrorCode:=1012
WS_ORErrorDescription:="Customer record not found in database Storman."
DELETE FROM ARRAY(WS_asPCName;1;Size of array(WS_asPCName))
DELETE FROM ARRAY(WS_asPCPINCardNo;1;Size of array(WS_asPCPINCardNo))
If (Locked([Customer]))
LOCKED BY([Customer];$Process;$User;$Machine;$ProcName)
WS_CustomerID:="Records in Selection= "+String(Records in selection([Customer]))+" Read/Write= "+String(Read only state([Customer]))+" Locked= "+String(Locked([Customer]))+"Details: "+String($Process)+" "+String($User)+" "+String($Machine)+" "+String($ProcName)
WS_ORSuccess:=False
WS_ORErrorCode:=1019
WS_ORErrorDescription:="Customer record locked in database Storman. Please try again later."
Else 
WS_CustomerID:="Records in Selection= "+String(Records in selection([Customer]))+" Read/Write= "+String(Read only state([Customer]))+" Locked= "+String(Locked([Customer]))
End if 
End if 
Else 
//WS_OLD=WS_Edit:=False
DELETE FROM ARRAY(WS_asPCName;1;Size of array(WS_asPCName))
DELETE FROM ARRAY(WS_asPCPINCardNo;1;Size of array(WS_asPCPINCardNo))
//WS_OLD=WS_CustomerID:="Wrong Password"
WS_ORSuccess:=False
WS_ORErrorCode:=1099
WS_ORErrorDescription:="Web Service Password is incorrect."
End if 

//11/07/13 DAM added to release all records after the web call
READ ONLY([Customer])
READ ONLY([Agreement])
READ ONLY([OtherChgs])
READ ONLY([Reservation])
READ ONLY([Unit])
READ ONLY([PhotosCards])
UNLOAD RECORD([Customer])
UNLOAD RECORD([Agreement])
UNLOAD RECORD([OtherChgs])
UNLOAD RECORD([Reservation])
UNLOAD RECORD([Unit])
UNLOAD RECORD([PhotosCards])

$String:="End WS_CustomerEdit"+Char(13)
$sizeofarray:=Size of array(WS_asOutPCName)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_asOutPCName("+String($vlElem)+"):"+WS_asOutPCName{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_asOutPCPINCardNo)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_asOutPCPINCardNo("+String($vlElem)+"):"+WS_asOutPCPINCardNo{$vlElem}+Char(13)
End for 
$String:=$String+"WS_ORSuccess: "+String(WS_ORSuccess)+Char(13)
$String:=$String+"WS_ORErrorCode: "+String(WS_ORErrorCode)+Char(13)
$String:=$String+"WS_ORErrorDescription: "+WS_ORErrorDescription+Char(13)
WSRecordLog ($String)


ReadOnlyAll 
UnloadAll 

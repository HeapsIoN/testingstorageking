//%attributes = {"publishedSoap":true,"lang":"en"} comment added and reserved by 4D.
SOAP DECLARATION(WS_FacilityID;Is text;SOAP input)
$String:="Start WS_Insomniac_GetSurveyQuestions"+Char(13)
$String:=$String+"WS_FacilityID: "+WS_FacilityID+Char(13)


WSRECORDLOG ($String)

SOAP DECLARATION(WS_QuestID;Text array;SOAP output)
SOAP DECLARATION(WS_QuestText;Text array;SOAP output)
SOAP DECLARATION(WS_AnswerID;Integer array;SOAP output)
SOAP DECLARATION(WS_AnswerText;Text array;SOAP output)
SOAP DECLARATION(WS_ERROR;Is text;SOAP output)

ARRAY TEXT(WS_QuestID;0)
ARRAY TEXT(WS_QuestText;0)
ARRAY LONGINT(WS_AnswerID;0)
ARRAY TEXT(WS_AnswerText;0)

QUERY([Facility];[Facility]FacilityCode=WS_FacilityID)

If (Records in selection([Facility])#0)

QUERY([MarketingTypes];[MarketingTypes]ListCode="MS";*)
QUERY([MarketingTypes]; & ;[MarketingTypes]Inactive=False)
FIRST RECORD([MarketingTypes])
For ($i;1;Records in selection([MarketingTypes]))
INSERT IN ARRAY(WS_QuestID;Size of array(WS_QuestID)+1)
INSERT IN ARRAY(WS_QuestText;Size of array(WS_QuestText)+1)
INSERT IN ARRAY(WS_AnswerID;Size of array(WS_AnswerID)+1)
INSERT IN ARRAY(WS_AnswerText;Size of array(WS_AnswerText)+1)

WS_QuestID{$i}:="1"
WS_QuestText{$i}:=[Facility]MarketingTypeTitle
WS_AnswerID{$i}:=[MarketingTypes]SortOrder
WS_AnswerText{$i}:=[MarketingTypes]Description

NEXT RECORD([MarketingTypes])
End for 

QUERY([MarketingTypes];[MarketingTypes]ListCode="MW";*)
QUERY([MarketingTypes]; & ;[MarketingTypes]Inactive=False)
FIRST RECORD([MarketingTypes])
For ($k;$i;Records in selection([MarketingTypes]))
INSERT IN ARRAY(WS_QuestID;Size of array(WS_QuestID)+1)
INSERT IN ARRAY(WS_QuestText;Size of array(WS_QuestText)+1)
INSERT IN ARRAY(WS_AnswerID;Size of array(WS_AnswerID)+1)
INSERT IN ARRAY(WS_AnswerText;Size of array(WS_AnswerText)+1)
WS_QuestID{$k}:="2"
WS_QuestText{$k}:="Reasons for Storing?"
WS_AnswerID{$k}:=[MarketingTypes]SortOrder
WS_AnswerText{$k}:=[MarketingTypes]Description
NEXT RECORD([MarketingTypes])
End for 

QUERY([MarketingTypes];[MarketingTypes]ListCode="CT";*)
QUERY([MarketingTypes]; & ;[MarketingTypes]Inactive=False)
FIRST RECORD([MarketingTypes])
For ($z;$i;Records in selection([MarketingTypes]))
INSERT IN ARRAY(WS_QuestID;Size of array(WS_QuestID)+1)
INSERT IN ARRAY(WS_QuestText;Size of array(WS_QuestText)+1)
INSERT IN ARRAY(WS_AnswerID;Size of array(WS_AnswerID)+1)
INSERT IN ARRAY(WS_AnswerText;Size of array(WS_AnswerText)+1)
WS_QuestID{$z}:="3"
WS_QuestText{$z}:=[Facility]CustomerTypeTitle
WS_AnswerID{$z}:=[MarketingTypes]SortOrder
WS_AnswerText{$z}:=[MarketingTypes]Description
NEXT RECORD([MarketingTypes])
End for 

QUERY([MarketingTypes];[MarketingTypes]ListCode="BT";*)
QUERY([MarketingTypes]; & ;[MarketingTypes]Inactive=False)
FIRST RECORD([MarketingTypes])
For ($w;$i;Records in selection([MarketingTypes]))
INSERT IN ARRAY(WS_QuestID;Size of array(WS_QuestID)+1)
INSERT IN ARRAY(WS_QuestText;Size of array(WS_QuestText)+1)
INSERT IN ARRAY(WS_AnswerID;Size of array(WS_AnswerID)+1)
INSERT IN ARRAY(WS_AnswerText;Size of array(WS_AnswerText)+1)
WS_QuestID{$w}:="4"
WS_QuestText{$w}:=[Facility]BusinessTypeTitle
WS_AnswerID{$w}:=[MarketingTypes]SortOrder
WS_AnswerText{$w}:=[MarketingTypes]Description
NEXT RECORD([MarketingTypes])
End for 
Else 
WS_ERROR:="Facility Not Found"
End if 


$String:="End WS_Insomniac_GetSurveyQuestions"+Char(13)

$sizeofarray:=Size of array(WS_QuestID)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_QuestID("+String($vlElem)+"):"+WS_QuestID{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_QuestText)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_QuestText("+String($vlElem)+"):"+WS_QuestText{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_AnswerID)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_AnswerID("+String($vlElem)+"):"+String(WS_AnswerID{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_AnswerText)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_AnswerText("+String($vlElem)+"):"+WS_AnswerText{$vlElem}+Char(13)
End for 

$String:=$String+"WS_ERROR: "+WS_ERROR+Char(13)

WSRECORDLOG ($String)
ReadOnlyAll 
UnloadAll 
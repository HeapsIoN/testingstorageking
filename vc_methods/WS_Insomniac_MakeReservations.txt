//%attributes = {"publishedSoap":true,"lang":"en"} comment added and reserved by 4D.
SOAP DECLARATION(WS_FacilityID;Is text;SOAP input)
SOAP DECLARATION(WS_Cust_Code;Is text;SOAP input)
SOAP DECLARATION(WS_GateCode;Is text;SOAP input)
SOAP DECLARATION(WS_UnitID;Is text;SOAP input)
SOAP DECLARATION(WS_Start_Date;Is date;SOAP input)
SOAP DECLARATION(WS_PaymAmount;Is real;SOAP input)
SOAP DECLARATION(WS_PaymMethod;Is text;SOAP input)
SOAP DECLARATION(WS_CCType;Is text;SOAP input)
SOAP DECLARATION(WS_CCNo;Is text;SOAP input)
SOAP DECLARATION(WS_RoutingN;Is text;SOAP input)
SOAP DECLARATION(WS_Expirdate;Is text;SOAP input)
SOAP DECLARATION(WS_CCStreetAdr;Is text;SOAP input)
SOAP DECLARATION(WS_CCPostCode;Is text;SOAP input)
SOAP DECLARATION(WS_CCCVV;Is text;SOAP input)
SOAP DECLARATION(WS_Track;Is text;SOAP input)
SOAP DECLARATION(WS_SourceOfTenant;Is text;SOAP input)

$String:="Start WS_Insomniac_MakeReservations"+Char(13)
$String:=$String+"WS_FacilityID: "+WS_FacilityID+Char(13)
$String:=$String+"WS_Cust_Code: "+WS_Cust_Code+Char(13)
$String:=$String+"WS_GateCode: "+WS_GateCode+Char(13)
$String:=$String+"WS_UnitID: "+WS_UnitID+Char(13)
$String:=$String+"WS_Start_Date: "+String(WS_Start_Date)+Char(13)
$String:=$String+"WS_PaymAmount: "+String(WS_PaymAmount)+Char(13)
$String:=$String+"WS_PaymMethod: "+WS_PaymMethod+Char(13)
$String:=$String+"WS_CCType: "+WS_CCType+Char(13)
$String:=$String+"WS_CCNo: "+WS_CCNo+Char(13)
$String:=$String+"WS_RoutingN: "+WS_RoutingN+Char(13)
$String:=$String+"WS_Expirdate: "+WS_Expirdate+Char(13)
$String:=$String+"WS_CCStreetAdr: "+WS_CCStreetAdr+Char(13)
$String:=$String+"WS_CCPostCode: "+WS_CCPostCode+Char(13)
$String:=$String+"WS_CCCVV: "+WS_CCCVV+Char(13)
$String:=$String+"WS_Track: "+WS_Track+Char(13)
$String:=$String+"WS_SourceOfTenant: "+WS_SourceOfTenant+Char(13)

WSRecordLog ($String)

SOAP DECLARATION(WS_RET_CODE;Is Boolean;SOAP output)
SOAP DECLARATION(WS_Reservation_Code;Is text;SOAP output)
SOAP DECLARATION(WS_ERROR;Is text;SOAP output)

ALL RECORDS([Facility])
ORDER BY([Facility];[Facility]SortOrder;>)
<>sProduct:=[Facility]ProductCode
ARRAY TEXT(<>asSiteCodes;Records in selection([Facility]))
SELECTION TO ARRAY([Facility]FacilityCode;<>asSiteCodes)
ALL RECORDS([Facility])
ORDER BY([Facility];[Facility]SortOrder;>)
<>sFacility:=WS_FacilityID

QUERY([Facility];[Facility]FacilityCode=WS_FacilityID)
If (Records in selection([Facility])#0)

QUERY([Unit];[Unit]RUnitNo=WS_FacilityID+WS_UnitID;*)
QUERY([Unit]; & ;[Unit]Vacant=True)
READ WRITE([Reservation])
READ WRITE([Trxs])
If (Records in selection([Unit])#0)
QUERY([Customer];[Customer]CustomerCode=WS_Cust_Code)
If (Records in selection([Customer])#0)
QUERY([Reservation];[Reservation]CustomerCode=WS_Cust_Code;*)
QUERY([Reservation]; & ;[Reservation]ActiveReserve=True)
If (Records in selection([Reservation])=0)
CREATE RECORD([Reservation])
[Reservation]CustomerCode:=WS_Cust_Code
[Reservation]ReservedDate:=Current date
[Reservation]ReservedTime:=Current time
$Continue:=False
If (Not(Semaphore("<>bNextResNo";1800)))
$Continue:=True
End if 
If ($Continue)
//If (Application type=4D Remote Mode)
GET PROCESS VARIABLE(-1;<>aiNextResNo;<>aiNextResNo)
//End if 
$arraypos:=Find in array(<>asSiteCodes;[Facility]FacilityCode)
Repeat 

//If (<>aiNextResNo{$arraypos}>[Facility]NextReserveNo)
//ConfirmTwo (Get localized string("It appears the next reservation number of")+" "+String([Facility]NextReserveNo;"00000000")+" "+Get localized string("is already in use. Do you wish to use the next number?");Get localized string("Yes");Get localized string("No"))
//If (OK=1)
[Reservation]ReserveNo:=String(<>aiNextResNo{$arraypos};"00000000")
[Facility]NextReserveNo:=<>aiNextResNo{$arraypos}+1
//Else 
//[Reservation]ReserveNo:=String([Facility]NextReserveNo;"00000000")
//[Facility]NextReserveNo:=[Facility]NextReserveNo+1
//End if 
//Else 
//[Reservation]ReserveNo:=String([Facility]NextReserveNo;"00000000")
//[Facility]NextReserveNo:=[Facility]NextReserveNo+1
//End if 
<>aiNextResNo{$arraypos}:=[Facility]NextReserveNo
$Key:=<>sFacility+[Reservation]ReserveNo
$i:=Find in field([Reservation]RReserveNo;$Key)

Until ($i<0)
//If (Application type=4D Remote Mode)
VARIABLE TO VARIABLE(-1;<>aiNextResNo;<>aiNextResNo)
//End if 
CLEAR SEMAPHORE("<>bNextResNo")
Else 
Repeat 

[Reservation]ReserveNo:=String([Facility]NextReserveNo;"00000000")
[Facility]NextReserveNo:=[Facility]NextReserveNo+1

$Key:=<>sFacility+[Reservation]ReserveNo
$i:=Find in field([Reservation]RReserveNo;$Key)

Until ($i<0)
End if 
[Reservation]RReserveNo:=$Key
[Reservation]TaxExempt:=[Facility]TaxFreeDefault
[Reservation]ExpMoveIn:=WS_Start_Date
[Reservation]ActiveReserve:=True
[Reservation]UnitsReserved:=WS_UnitID
If ([Reservation]Weekly)
[Unit]QuotedRate:=[UnitType]WeeklyRate
Else 
[Unit]QuotedRate:=[UnitType]MonthlyRate
End if 
[Unit]Status:="Reserved"
[Unit]ReservedTo:=[Reservation]RReserveNo
[Unit]ReservedDate:=Current date
[Unit]LastStatusDate:=Current date
[Reservation]TaxExempt:=False
[Reservation]UserLogin:="Insomniac"
QUERY([Analysis];[Analysis]Code=WS_FacilityID+"DP";*)
QUERY([Analysis]; & ;[Analysis]BillMoveIn=True;*)
QUERY([Analysis]; & ;[Analysis]Inactive=False)
If ([Facility]AgreeOnlyDeposit=True)
[Reservation]DepositAmt:=0
Else 
[Reservation]DepositAmt:=[Analysis]DfltSellAmt
QUERY([UnitType];[UnitType]RUnitType=[Unit]UnitTypeCode)
[Reservation]DepositAmt:=[Reservation]DepositAmt+[UnitType]DepositAmt
End if 

// If allowed more than one unit to be reserved for the same customer

//Else 
//[Unit]ReservedTo:=[Reservation]RReserveNo
//[Reservation]UserLogin:="Insomniac"
//[Reservation]UnitsReserved:=[Reservation]UnitsReserved+","+WS_UnitID
//If ([Reservation]DepositAmt=0)
//QUERY([Analysis];[Analysis]Code=WS_FacilityID+"DP";*)
//QUERY([Analysis];[Analysis]BillMoveIn=True)
//[Reservation]DepositAmt:=[Reservation]DepositAmt+[Analysis]DfltSellAmt
//End if 
//QUERY([UnitType];[UnitType]RUnitType=[Unit]UnitTypeCode)
//[Reservation]DepositAmt:=[Reservation]DepositAmt+[UnitType]DepositAmt

WS_RET_CODE:=True
WS_Reservation_Code:=[Reservation]ReserveNo

//Payment
$Create:=False
Case of 
: (WS_PaymMethod="CC")
$SpecOptions:=54
If (WS_CCNo="37@") | (WS_CCNo="34@")//It is an Amex card
$SpecOptions:=55
End if 
If ((WS_CCNo="300@") | (WS_CCNo="301@") | (WS_CCNo="38@") | (WS_CCNo="39@") | (WS_CCNo="309@") | (WS_CCNo="302@") | (WS_CCNo="303@") | (WS_CCNo="304@") | (WS_CCNo="305@") | (WS_CCNo="36@")) & (([Facility]Country#"US") & ([Facility]Country#"CA"))//10461 - adding new Diners CC number
$SpecOptions:=56
End if 
QUERY([Analysis];[Analysis]Code=WS_FacilityID+"@";*)
QUERY([Analysis]; & ;[Analysis]SpecialOptions=$SpecOptions)
If (Records in selection([Analysis])#0)
$Create:=True
Else 
WS_ERROR:="Payment method is Unavailable"
WS_RET_CODE:=False
$Create:=False
End if 
: (WS_PaymMethod="CA")
QUERY([Analysis];[Analysis]Code=WS_FacilityID+"CA")
If (Records in selection([Analysis])#0)
$Create:=True
Else 
WS_ERROR:="Payment method is Unavailable"
WS_RET_CODE:=False
$Create:=False
End if 
: (WS_PaymMethod="CK")
QUERY([Analysis];[Analysis]Code=WS_FacilityID+"CH")
If (Records in selection([Analysis])#0)
$Create:=True
Else 
WS_ERROR:="Payment method is Unavailable"
WS_RET_CODE:=False
$Create:=False
End if 
: (WS_PaymMethod="DB")
QUERY([Analysis];[Analysis]Code=WS_FacilityID+"EF")
If (Records in selection([Analysis])#0)
$Create:=True
Else 
WS_ERROR:="Payment method is Unavailable"
WS_RET_CODE:=False
$Create:=False
End if 
: (WS_PaymMethod="ACH")
//Need adhoc direct debit support added
Else 
WS_ERROR:="Payment method is Unavailable"
WS_RET_CODE:=False
End case 

If ($Create=True)
CREATE RECORD([Trxs])
[Trxs]AgreeNo:=WS_FacilityID+[Reservation]ReserveNo
[Trxs]CustomerCode:=[Reservation]CustomerCode
[Trxs]AnalysisCode:=[Analysis]Code
[Trxs]Description:=[Analysis]Description
[Trxs]UnitNo:=[Unit]UnitNo
[Trxs]TotAmt:=WS_PaymAmount
[Trxs]Confirmed:=True
[Trxs]TrxTime:=Current time
[Trxs]TrxDate:=Current date
[Trxs]UserLogin:="Insomniac"
[Trxs]Charge:=False
If ([Analysis]SetBankedDate=True) & (Records in selection([Analysis])=1)
[Trxs]DateBanked:=Current date
End if 
[Trxs]UserLogin:="Insomniac"
If (WS_PaymMethod="CC")
[Trxs]CCAuthNo:=ProcCreditCard (False;"P";WS_PaymAmount;WS_CCNo;WS_Expirdate;"";[Reservation]RReserveNo;[Analysis]Description;[Reservation]CustomerCode;[Customer]CustomerName;WS_CCStreetAdr;WS_CCPostCode;"";"";"";[Reservation]TaxExempt;True;"";False)
End if 
If ([Trxs]CCAuthNo#"ERR@") & ([Trxs]CCAuthNo#"DEC@")
SAVE RECORD([Trxs])
SAVE RECORD([Reservation])
SAVE RECORD([Facility])
SAVE RECORD([Unit])
UNLOAD RECORD([Facility])
WS_RET_CODE:=True
Else 
WS_RET_CODE:=False
WS_ERROR:="Payment by Credit Card is not Successful"
End if 
End if 

If (WS_RET_CODE=True)
CREATE RECORD([Trxs])
[Trxs]AgreeNo:=WS_FacilityID+[Reservation]ReserveNo
[Trxs]CustomerCode:=[Reservation]CustomerCode
[Trxs]AnalysisCode:=[Analysis]Code
[Trxs]Description:=[Analysis]Description
[Trxs]UnitNo:=[Unit]UnitNo
[Trxs]TotAmt:=[Reservation]DepositAmt
[Trxs]Confirmed:=True
[Trxs]TrxTime:=Current time
[Trxs]TrxDate:=Current date
[Trxs]UserLogin:="Insomniac"
[Trxs]Charge:=True
If ([Analysis]SetBankedDate=True) & (Records in selection([Analysis])=1)
[Trxs]DateBanked:=Current date
End if 
If ([Trxs]TotAmt#0)
SAVE RECORD([Trxs])
End if 
End if 

Else 
WS_RET_CODE:=False
WS_ERROR:="This customer alredy has a Reservation"
End if 
Else 
WS_RET_CODE:=False
WS_ERROR:="Customer Not Found"
End if 
Else 
WS_RET_CODE:=False
WS_ERROR:="Unit not available or Unit No is invalid"
End if 
Else 
WS_RET_CODE:=False
WS_ERROR:="Facility Not Found"
End if 

$String:="End WS_Insomniac_MakeReservations"+Char(13)
$String:=$String+"WS_RET_CODE: "+String(WS_RET_CODE)+Char(13)
$String:=$String+"WS_Reservation_Code: "+WS_Reservation_Code+Char(13)
$String:=$String+"WS_ERROR: "+WS_ERROR+Char(13)

WSRecordLog ($String)
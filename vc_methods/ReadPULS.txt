//%attributes = {"lang":"en"} comment added and reserved by 4D.
<>tUtilities:=False// to disable read from LogMonLookCode
QUERY([Facility];[Facility]FacilityCode=<>sFacility)
If (Test path name([Facility]UtilitiesLogFile)=Is a document)
$Doc:=Open document([Facility]UtilitiesLogFile)
SET AUTOMATIC RELATIONS(True;False)
READ WRITE([Utilities])
RECEIVE PACKET($Doc;$Buffer;Char(13))
While (Length($Buffer)>=10)//Otherwise EOF
CREATE RECORD([Utilities])
[Utilities]FacilityCode:=<>sFacility
For ($i;1;10)//Ten fields
$j:=Position(";";$Buffer)
If ($j>1)
$Field:=Substring($Buffer;1;$j-1)
$Buffer:=Substring($Buffer;$j+1)
Case of 
: ($i=1)//98 - Power event 99 - Water event
[Utilities]EventCode:=Num($Field)
: ($i=2)
$DateMonth:=$Field
: ($i=3)
$DateDay:=$Field
: ($i=4)
$DateYear:=$Field
: ($i=5)
$TimeHour:=$Field
: ($i=6)
$TimeMin:=$Field
: ($i=7)
[Utilities]GateNo:=Num($Field)
: ($i=8)
[Utilities]CurrentRead:=Num($Field)
$test:=(Num($Field))
: ($i=9)
$Pos:=Position(" ";$Field)
While ($Pos>0)
$Field:=Replace string($Field;" ";"")
$Pos:=Position(" ";$Field)
End while 

QUERY([Unit];[Unit]RUnitNo=<>sFacility+$Field)
If (Records in selection([Unit])#0)
[Utilities]AgreeNo:=[Unit]AgreeNo
[Utilities]UnitNo:=<>sFacility+$Field
End if 

: ($i=10)

If ($Field="Reading                                 ") | ($Field="Reading Initial@") | ($Field="Reading Final@") | ($Field="Reading Delinquent@") | ($Field="Reading Requested@")
[Utilities]ReadEvent:=True
Else 
[Utilities]ReadEvent:=False
End if 
[Utilities]ActionText:=$Field
End case 
Else 
If ($i=10)
[Utilities]ActionText:=$Buffer
End if 
End if 
End for 
Case of 
: (<>tDateFormat="US")
[Utilities]Date:=Date($DateMonth+"/"+$DateDay+"/"+$DateYear)
: (<>tDateFormat="ISO")
[Utilities]Date:=Date($DateYear+"/"+$DateMonth+"/"+$DateDay)
Else 
[Utilities]Date:=Date($DateDay+"/"+$DateMonth+"/"+$DateYear)
End case 
[Utilities]Time:=Time($TimeHour+":"+$TimeMin+":00")
[Utilities]Billed:=False

If ([Utilities]ActionText="@Alarm@")// Enter new code for utilities to send emails and sms. Change EvenLog Setup for it.
C_LONGINT($x;$i)
$x:=1
While (Current time>=Time(<>asTimeIntervals{$x})) & ($x<Size of array(<>asTimeIntervals))
$x:=$x+1
End while 
If ($x>1)
$x:=$x-1
End if 
Case of 
: (Day number(Current date)=Sunday)
$p:=Get pointer("<>asSun")
: (Day number(Current date)=Monday)
$p:=Get pointer("<>asMon")
: (Day number(Current date)=Tuesday)
$p:=Get pointer("<>asTue")
: (Day number(Current date)=Wednesday)
$p:=Get pointer("<>asWed")
: (Day number(Current date)=Thursday)
$p:=Get pointer("<>asThu")
: (Day number(Current date)=Friday)
$p:=Get pointer("<>asFri")
: (Day number(Current date)=Saturday)
$p:=Get pointer("<>asSat")
End case 
//If ([Utilities]ActionText="@Alarm@") & (Length([Facility]SmtpHostName)>5) & (Length([Facility]EmailAddress)>5) & ([Facility]InternetConnection=True)
//If ($p->{$x}=True) & (GetEmailSendTo ("@U")>"")
//CREATE RECORD([Message])
//[Message]Address:=GetEmailSendTo ("@U")
//[Message]Subject:=[Utilities]ActionText+"  at "+[Utilities]FacilityCode+", "+[Facility]FacilityName+", "+String([Utilities]Date)+" "+String([Utilities]Time)
//[Message]MsgBody:=[Utilities]ActionText+"  at "+[Utilities]FacilityCode+", "+[Facility]FacilityName+", "+String([Utilities]Date)+" "+String([Utilities]Time)
//[Message]MsgDate:=Current date
//[Message]MsgTime:=Current time
//[Message]OutIn:=True
//SAVE RECORD([Message])
//SendMail 
//End if 
//End if 
//If ([Utilities]ActionText="@Alarm@") & (Length([Facility]SMSAcctDetails)>1) & ([Facility]InternetConnection=True)
//If ($p->{$x}=True)
//For ($i;1;Size of array(<>asEmailSendToCode))
//If (<>asEmailSendToCode{$i}="@S")
//SendSMS (<>asEmailSendToAddress{$i};Substring(([Utilities]ActionText+"at"+[Utilities]FacilityCode+","+[Facility]FacilityName+","+String([Utilities]Date)+" "+String([Utilities]Time));1;160);[Utilities]UnitNo;False)
//End if 
//End for 
//End if 
//End if 
End if 

If ([Utilities]UnitNo#"") | ([Utilities]ActionText="@Alarm@")
SAVE RECORD([Utilities])
End if 
RECEIVE PACKET($Doc;$Buffer;Char(13))
End while 
CLOSE DOCUMENT($Doc)
DELETE DOCUMENT([Facility]UtilitiesLogFile)

SET AUTOMATIC RELATIONS(False;False)
READ ONLY([Utilities])
UNLOAD RECORD([Utilities])
UNLOAD RECORD([Agreement])
UNLOAD RECORD([Customer])
UNLOAD RECORD([Unit])
End if 
<>tUtilities:=True// to disable read from LogMonLookCode
//%attributes = {"lang":"en"} comment added and reserved by 4D.

//If (PermissionsControl (146))
//$Set:=False
//If (sAll=1)
//QUERY([EventLog];[EventLog]DatePrinted=!00/00/00!;*)
//QUERY([EventLog]; & ;[EventLog]Code>"")
//CREATE SET([EventLog];"ToSetDate")
//$Set:=True
//ORDER BY([EventLog];[EventLog]Code;>;[EventLog]EventDate;>;[EventLog]EventTime;>;[EventLog]TrxAmount;>)
//ACCUMULATE([EventLog]TrxAmount)
//BREAK LEVEL(1)
//OUTPUT FORM([EventLog];"PrintEvents")
//PRINT SELECTION([EventLog])
//Else 
//ORDER BY([EventLog];[EventLog]EventDate;>)
//FIRST RECORD([EventLog])
//CREATE SET([EventLog];"ToRestore")
//
//QUERY([EventLog];[EventLog]DatePrinted>(Current date-40))
//  `QUERY([EventLog]; | ;[EventLog]DatePrinted=!00/00/00!)
//DISTINCT VALUES([EventLog]DatePrinted;aDates)
//SORT ARRAY(aDates;<)
//Open window(20;50;400;400;0)
//DIALOG([EventLog];"PrintLogDialog")
//CLOSE WINDOW
//If (OK=1)
//Case of 
//: (sDisp=1)
//USE SET("ToRestore")
//: (sAll=1)
//QUERY([EventLog];[EventLog]DatePrinted=!00/00/00!)
//Else 
//
//End case 
//
//  PrintEvents2 
//  `PrintEvents 
//  `PrintEventLog 
//If (sCust#1)
//QUERY([EventLog];[EventLog]DatePrinted>=(Current date-1))
//End if 
//If (asSortBy=2)
//ORDER BY([EventLog];[EventLog]EventDate;>;[EventLog]EventTime;>)
//Else 
//ORDER BY([EventLog];[EventLog]EventDate;<;[EventLog]EventTime;<)
//End if 
//End if 
//End if 
//End if 
If (PermissionsControl (146))
vOrigin:=""
$Set:=False
If (sAll=1)
QUERY([EventLog];[EventLog]DatePrinted=!00-00-00!)
CREATE SET([EventLog];"ToSetDate")
$Set:=True
End if 
If (sUnit=1)
QUERY([EventLog];[EventLog]DatePrinted=vRptDate)
End if 
If (bAll=1) & (sCust#1)//Don't do this if printing displayed events
QUERY SELECTION([EventLog];[EventLog]EventAlert=True)
End if 
ORDER BY([EventLog];[EventLog]EventDate;>;[EventLog]EventTime;>)
BREAK LEVEL(0)
ACCUMULATE([EventLog]EventTable)
FORM SET OUTPUT([EventLog];"PrintLog")
PrintSelection ("L";->[EventLog])
FORM SET OUTPUT([EventLog];"EventLogOut")
If ($Set)
READ WRITE([EventLog])
USE SET("ToSetDate")
FIRST RECORD([EventLog])
MESSAGES OFF
APPLY TO SELECTION([EventLog];[EventLog]DatePrinted:=vRptDate)
MESSAGES ON
READ ONLY([EventLog])
CLEAR SET("ToSetDate")
End if 
End if 
//QUERY([EventLog];[EventLog]EventDate>=(Current date-1))
//ORDER BY([EventLog];[EventLog]EventDate;<;[EventLog]EventTime;<)
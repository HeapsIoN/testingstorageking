//%attributes = {"lang":"en"} comment added and reserved by 4D.

// ----------------------------------------------------
// User name (OS): jonathon.wildon
// Date and time: 16/01/17, 08:56:53
// ----------------------------------------------------
// Method: WS_SM_SU
// Description
// 
// This method is used to encode and send to Storman Users data from a site
//
// Parameters
// ----------------------------------------------------


//CA - cash
//-----------Spec_option------------
//52 -cheque returned
//53 - default for refund
//54 - default
//55 - Amex
//56 - Diners
//57 - Default for DD 
//58 - Storpay
//59 - Storpay
//60 - Storpay
//61 - Default for refund
//63 - BPay


C_TEXT($String)
C_TEXT(WS_Param1)//WS__SM__SU_Bus_name)
C_TEXT(WS_Param2)//WS_SM_SU_Facil_name)
C_TEXT(WS_Param3)//WS_SM_SU_Facil_code)
C_TEXT(WS_Param4)//WS_SM_SU_description)
C_TEXT(WS_Param5)//WS_SM_SU_counter)
C_TEXT(WS_Param6)//WS_SM_SU_amount)
C_TEXT(WS_Param7)//WS_SM_SU_date1)
C_TEXT(WS_Param8)//WS_SM_SU_month)
C_TEXT(WS_Param9)//WS_SM_SU_analys)
C_TEXT(WS_Param10)//sms
C_TEXT(WS_Param11)//cc
C_TEXT(WS_Param12)//dd
C_TEXT(WS_Param13)//WS_SM_SU_description)
C_TEXT(WS_Param14)//WS_SM_SU_counter)
C_TEXT(WS_Param15)//WS_SM_SU_amount)
C_TEXT(WS_Param16)//WS_SM_SU_date1)
C_TEXT(WS_Param17)//WS_SM_SU_month)
C_TEXT(WS_Param18)//WS_SM_SU_analys)
C_TEXT(WS_Param19)//SMS merchant
C_TEXT(WS_Param20)//CC merchant
C_TEXT(WS_Param21)//DD merchant
C_TEXT(WS_Param22)//Number of units in use
C_TEXT(WS_Param23)//Gate System
C_TEXT(WS_Param24)//Facility BPay enabled
C_TEXT(WS_Param25)//[Facility]CentralAddress
//------------------------------------- unused below
C_TEXT(WS_Param26)
C_TEXT(WS_Param27)
C_TEXT(WS_Param28)
C_TEXT(WS_Param29)
C_TEXT(WS_Param30)
C_TEXT(WS_Param31)
C_TEXT(WS_Param32)
C_TEXT(WS_Param33)
C_TEXT(WS_Param34)
C_TEXT(WS_Param35)
C_TEXT(WS_Param36)
C_TEXT(WS_Param37)
C_TEXT(WS_Param38)
C_TEXT(WS_Param39)
C_TEXT(WS_Param40)

WS_Param1:=""
WS_Param2:=""
WS_Param3:=""
WS_Param4:=""
WS_Param5:=""
WS_Param6:=""
WS_Param7:=""
WS_Param8:=""
WS_Param9:=""
WS_Param10:=""
WS_Param11:=""
WS_Param12:=""
WS_Param13:=""
WS_Param14:=""
WS_Param15:=""
WS_Param16:=""
WS_Param17:=""
WS_Param18:=""
WS_Param19:=""
WS_Param20:=""
WS_Param21:=""
WS_Param22:=""
WS_Param23:=""
WS_Param24:=""
WS_Param25:=""
WS_Param26:=""
WS_Param27:=""
WS_Param28:=""
WS_Param29:=""
WS_Param30:=""
WS_Param31:=""
WS_Param32:=""
WS_Param33:=""
WS_Param34:=""
WS_Param35:=""
WS_Param36:=""
WS_Param37:=""
WS_Param38:=""
WS_Param39:=""
WS_Param40:=""

//////////////////////////////////////////
//C_TEXT($result;$result2)
//C_TEXT($crypttext)
//ARRAY TEXT($ciphers_and_aliases;0)
//C_TEXT($gkey;$iv;$text3;$proba)
//$gkey:="cb32859e7ca331cf79325981044b2f387d055e484c9f6b93ef9a2c980366d20f81b2b3884baff4f4cdead52dcbe3783e7c05605e467c0106051eb244153c818feeb8aea0a785feb0510800d67abb46458ff043768cd3e21585bcc2f839e3141305070b4f9adf07df500fcc5f44c323ab4adf837f96671a4a0051e128e18"+"f8b52f63a9c88837d51eb74f71057ba79bc5c71f5c7925b6d4f8001d7b5d7114d6fe299ffea10d96a40cab39ecb0359c53912bb8b83cc9e901f6efcf4f8f2e6eadcbe2798312ee31af6e1d05881d4aad8a3ddaab688db943c7901d2e37ec2451b1cab82baa4de8aa1a8d8297011dc4d84c272192455f0a3f8847b2f2a78"+"3acb8ea9c2"
//$iv:="8d1bc9606f203a2a"
//$text3:="Text to pass 77777777777"
//C_BOOLEAN($isOK)
//$isOK:=PHP Execute("C:\\_test\\test.php";"myPhpFunction1";$result;$gkey;$iv;$text3)
//WS_Param30:=$result

/////////////////////////////////////////////////////////




$String:="Start1 WS_SM_SU"+Char(13)
WSRecordLog ($String)

ARRAY TEXT($analys_codes;0)
ARRAY TEXT($analys_description;0)
ARRAY LONGINT($analys_spec_option;0)

C_TEXT($Bus_name)
C_TEXT($Facil_name)
C_TEXT($Facil_code)
C_TEXT($SMS_provider;CC_provider;$DD_provider)
C_REAL($TotAmt)
C_LONGINT($vlElem;$vlElem1;$vlElem2;$vlElem3;$all_counter;$Number)
C_REAL($all_amt)
C_DATE($tmp_date1;$tmp_date2)

ARRAY TEXT($description;0)
ARRAY LONGINT($counter;0)
ARRAY REAL($amount;0)
ARRAY REAL($amount_tmp;0)



//get units in use
QUERY([Unit];[Unit]RUnitNo=[Facility]FacilityCode+"@";*)
QUERY([Unit]; & ;[Unit]Status#"Unavail")
WS_SMUnitsInUse:=String(Records in selection([Unit]))
WS_Param22:=EncodeIt (WS_SMUnitsInUse;True)
UNLOAD RECORD([Unit])


WS_Param3:=[Facility]UserCode
WS_Param2:=[Facility]FacilityName
WS_Param1:=[Facility]BusinessName
WS_Param23:=EncodeIt (String([Facility]GateSysType);True)

If ([Facility]BPay=2)
WS_Param24:=EncodeIt ("T";True)
Else 
WS_Param24:=EncodeIt ("F";True)
End if 

Case of 
: ([Facility]SMSAcctDetails="@Advam@")
WS_Param10:=EncodeIt ("Advam";True)

: ([Facility]SMSAcctDetails="@Storman@")
WS_Param10:=EncodeIt ("Storman";True)

Else 
WS_Param10:=EncodeIt ("None";True)

End case 


WS_Param11:=GetTextNo ([Facility]MerchantDetails;1;",")//CC provider
WS_Param11:=EncodeIt (WS_Param11;True)

WS_Param12:=GetTextNo ([Facility]DDAccountDetails;4;",")//DD provider
WS_Param12:=EncodeIt (WS_Param12;True)


//WS_Param25:=EncodeIt ([Facility]CentralAddress;True)

$tmp_date1:=Date("!01/"+String(Month of(Add to date(Current date;0;-1;0)))+"/"+String(Year of(Add to date(Current date;0;-1;0)))+"!")//month
$tmp_date2:=Date("!01/"+String(Month of(Current date))+"/"+String(Year of(Current date))+"!")//month
WS_Param7:=String($tmp_date1)+"-"+String($tmp_date2)


Case of 
: (Month of($tmp_date1)=1)
WS_Param8:="January"
: (Month of($tmp_date1)=2)
WS_Param8:="February"
: (Month of($tmp_date1)=3)
WS_Param8:="March"
: (Month of($tmp_date1)=4)
WS_Param8:="April "
: (Month of($tmp_date1)=5)
WS_Param8:="May"
: (Month of($tmp_date1)=6)
WS_Param8:="June"
: (Month of($tmp_date1)=7)
WS_Param8:="July"
: (Month of($tmp_date1)=8)
WS_Param8:="August"
: (Month of($tmp_date1)=9)
WS_Param8:="September"
: (Month of($tmp_date1)=10)
WS_Param8:="October"
: (Month of($tmp_date1)=11)
WS_Param8:="November"
: (Month of($tmp_date1)=12)
WS_Param8:="December"
End case 

//WS_Param8:=String(Month of($tmp_date1))
QUERY([Trxs];[Trxs]AnalysisCode=([Facility]FacilityCode+"@");*)
QUERY([Trxs]; & ;[Trxs]Charge=False;*)
QUERY([Trxs]; & ;[Trxs]AgreeNo#([Facility]FacilityCode+"MISCL");*)
QUERY([Trxs]; & ;[Trxs]AgreeNo#([Facility]FacilityCode+"#"+"@");*)
QUERY([Trxs]; & ;[Trxs]TrxDate>=$tmp_date1;*)//01/of the prevuous month
QUERY([Trxs]; & ;[Trxs]TrxDate<$tmp_date2)//end of the previous month

SELECTION TO ARRAY([Trxs]TotAmt;$amount_tmp)
//$all_amt:=Sum($amount_tmp)
//$all_counter:=Size of array($amount_tmp)

If (Records in selection([Trxs])>0)
DISTINCT VALUES([Trxs]AnalysisCode;$analys_codes)
End if 

For ($vlElem1;1;Size of array($analys_codes))
QUERY([Analysis];[Analysis]Code=$analys_codes{$vlElem1})
APPEND TO ARRAY($analys_description;[Analysis]Description)
//APPEND TO ARRAY($analys_codes;$analys_codes{$vlElem1})
End for 

For ($vlElem;1;Size of array($analys_codes))
ARRAY REAL($amount_tmp;0)
QUERY([Trxs];[Trxs]AnalysisCode=([Facility]FacilityCode+"@");*)
QUERY([Trxs]; & ;[Trxs]Charge=False;*)
QUERY([Trxs]; & ;[Trxs]AgreeNo#([Facility]FacilityCode+"MISCL");*)
QUERY([Trxs]; & ;[Trxs]AgreeNo#([Facility]FacilityCode+"#"+"@");*)
QUERY([Trxs]; & ;[Trxs]AnalysisCode=$analys_codes{$vlElem};*)
QUERY([Trxs]; & ;[Trxs]TrxDate>=$tmp_date1;*)
QUERY([Trxs]; & ;[Trxs]TrxDate<$tmp_date2)

SELECTION TO ARRAY([Trxs]TotAmt;$amount_tmp)
$TotAmt:=Sum($amount_tmp)
APPEND TO ARRAY($counter;Size of array($amount_tmp))
APPEND TO ARRAY($amount;$TotAmt)
APPEND TO ARRAY($description;$analys_description{$vlElem})
/////APPEND TO ARRAY($analys_codes;$analys_codes{$vlElem})
End for 

$vlElem:=0
For ($vlElem;1;Size of array($description))
WS_Param4:=WS_Param4+$description{$vlElem}+","
WS_Param6:=WS_Param6+String($amount{$vlElem})+","
WS_Param5:=WS_Param5+String($counter{$vlElem})+","
WS_Param9:=WS_Param9+$analys_codes{$vlElem}+","
End for 

//////////////////
WS_Param4:=EncodeIt (WS_Param4;True)
WS_Param1:=EncodeIt (WS_Param1;True)
WS_Param2:=EncodeIt (WS_Param2;True)
WS_Param3:=EncodeIt (WS_Param3;True)
WS_Param6:=EncodeIt (WS_Param6;True)
WS_Param5:=EncodeIt (WS_Param5;True)
WS_Param7:=EncodeIt (WS_Param7;True)
WS_Param8:=EncodeIt (WS_Param8;True)
WS_Param9:=EncodeIt (WS_Param9;True)


ARRAY TEXT($analys_codes;0)
ARRAY TEXT($analys_description;0)
ARRAY LONGINT($analys_spec_option;0)

ARRAY TEXT($description;0)
ARRAY LONGINT($counter;0)
ARRAY REAL($amount;0)


//C_TEXT(WS_Param13)  //WS_SM_SU_description)
//C_TEXT(WS_Param14)  //WS_SM_SU_counter)
//C_TEXT(WS_Param15)  //WS_SM_SU_amount)
//C_TEXT(WS_Param16)  //WS_SM_SU_date1)
//C_TEXT(WS_Param17)  //WS_SM_SU_month)
//C_TEXT(WS_Param18)  //WS_SM_SU_analys)
//C_TEXT(WS_Param19)  //sms
//C_TEXT(WS_Param20)  //cc
//C_TEXT(WS_Param21)  //dd


$tmp_date1:=Date("!01/"+String(Month of(Add to date(Current date;0;-2;0)))+"/"+String(Year of(Add to date(Current date;0;-2;0)))+"!")//month
$tmp_date2:=Date("!01/"+String(Month of(Add to date(Current date;0;-1;0)))+"/"+String(Year of(Add to date(Current date;0;-1;0)))+"!")//month

WS_Param16:=String($tmp_date1)+"-"+String($tmp_date2)
Case of 
: (Month of($tmp_date1)=1)
WS_Param17:="January"
: (Month of($tmp_date1)=2)
WS_Param17:="February"
: (Month of($tmp_date1)=3)
WS_Param17:="March"
: (Month of($tmp_date1)=4)
WS_Param17:="April "
: (Month of($tmp_date1)=5)
WS_Param17:="May"
: (Month of($tmp_date1)=6)
WS_Param17:="June"
: (Month of($tmp_date1)=7)
WS_Param17:="July"
: (Month of($tmp_date1)=8)
WS_Param17:="August"
: (Month of($tmp_date1)=9)
WS_Param17:="September"
: (Month of($tmp_date1)=10)
WS_Param17:="October"
: (Month of($tmp_date1)=11)
WS_Param17:="November"
: (Month of($tmp_date1)=12)
WS_Param17:="December"
End case 
//WS_Param8:=String(Month of($tmp_date1))

QUERY([Trxs];[Trxs]AnalysisCode=([Facility]FacilityCode+"@");*)
QUERY([Trxs]; & ;[Trxs]Charge=False;*)
QUERY([Trxs]; & ;[Trxs]AgreeNo#([Facility]FacilityCode+"MISCL");*)
QUERY([Trxs]; & ;[Trxs]AgreeNo#([Facility]FacilityCode+"#"+"@");*)
QUERY([Trxs]; & ;[Trxs]TrxDate>=$tmp_date1;*)//01/of the prevuous month
QUERY([Trxs]; & ;[Trxs]TrxDate<$tmp_date2)//end of the previous month

SELECTION TO ARRAY([Trxs]TotAmt;$amount_tmp)
//$all_amt:=Sum($amount_tmp)
//$all_counter:=Size of array($amount_tmp)

If (Records in selection([Trxs])>0)
DISTINCT VALUES([Trxs]AnalysisCode;$analys_codes)
End if 

For ($vlElem1;1;Size of array($analys_codes))
QUERY([Analysis];[Analysis]Code=$analys_codes{$vlElem1})
APPEND TO ARRAY($analys_description;[Analysis]Description)
//APPEND TO ARRAY($analys_spec_option;[Analysis]SpecialOptions)
End for 

For ($vlElem;1;Size of array($analys_codes))
ARRAY REAL($amount_tmp;0)
QUERY([Trxs];[Trxs]AnalysisCode=([Facility]FacilityCode+"@");*)
QUERY([Trxs]; & ;[Trxs]Charge=False;*)
QUERY([Trxs]; & ;[Trxs]AgreeNo#([Facility]FacilityCode+"MISCL");*)
QUERY([Trxs]; & ;[Trxs]AgreeNo#([Facility]FacilityCode+"#"+"@");*)
QUERY([Trxs]; & ;[Trxs]AnalysisCode=$analys_codes{$vlElem};*)
QUERY([Trxs]; & ;[Trxs]TrxDate>=$tmp_date1;*)
QUERY([Trxs]; & ;[Trxs]TrxDate<$tmp_date2)

SELECTION TO ARRAY([Trxs]TotAmt;$amount_tmp)
$TotAmt:=Sum($amount_tmp)
APPEND TO ARRAY($counter;Size of array($amount_tmp))
APPEND TO ARRAY($amount;$TotAmt)
APPEND TO ARRAY($description;$analys_description{$vlElem})
//APPEND TO ARRAY($analys_codes;$analys_codes{$vlElem})
End for 
$vlElem:=0
For ($vlElem;1;Size of array($description))
WS_Param13:=WS_Param13+$description{$vlElem}+","
WS_Param15:=WS_Param15+String($amount{$vlElem})+","
WS_Param14:=WS_Param14+String($counter{$vlElem})+","
WS_Param18:=WS_Param18+$analys_codes{$vlElem}+","
End for 

WS_Param13:=EncodeIt (WS_Param13;True)
WS_Param14:=EncodeIt (WS_Param14;True)
WS_Param15:=EncodeIt (WS_Param15;True)
WS_Param16:=EncodeIt (WS_Param16;True)
WS_Param17:=EncodeIt (WS_Param17;True)
WS_Param18:=EncodeIt (WS_Param18;True)


//C_TEXT(WS_Param1)  //WS__SM__SU_Bus_name)
//C_TEXT(WS_Param2)  //WS_SM_SU_Facil_name)
//C_TEXT(WS_Param3)  //WS_SM_SU_Facil_code)
//C_TEXT(WS_Param4)  //WS_SM_SU_description)
//C_TEXT(WS_Param5)  //WS_SM_SU_counter)
//C_TEXT(WS_Param6)  //WS_SM_SU_amount)
//C_TEXT(WS_Param7)  //WS_SM_SU_date1)
//C_TEXT(WS_Param8)  //WS_SM_SU_month)
//C_TEXT(WS_Param9)  //WS_SM_SU_analys)
//C_TEXT(WS_Param10)  //sms
//C_TEXT(WS_Param11)  //cc
//C_TEXT(WS_Param12)  //dd
//C_TEXT(WS_Param13)  //WS_SM_SU_description)
//C_TEXT(WS_Param14)  //WS_SM_SU_counter)
//C_TEXT(WS_Param15)  //WS_SM_SU_amount)
//C_TEXT(WS_Param16)  //WS_SM_SU_date1)
//C_TEXT(WS_Param17)  //WS_SM_SU_month)
//C_TEXT(WS_Param18)  //WS_SM_SU_analys)
//C_TEXT(WS_Param19)  //sms
//C_TEXT(WS_Param20)  //cc
//C_TEXT(WS_Param21)  //dd


SOAP DECLARATION(WS_Param1;Is string var;SOAP output)
SOAP DECLARATION(WS_Param2;Is string var;SOAP output)
SOAP DECLARATION(WS_Param3;Is string var;SOAP output)
SOAP DECLARATION(WS_Param4;Is string var;SOAP output)
SOAP DECLARATION(WS_Param6;Is string var;SOAP output)
SOAP DECLARATION(WS_Param5;Is string var;SOAP output)
SOAP DECLARATION(WS_Param7;Is string var;SOAP output)
SOAP DECLARATION(WS_Param8;Is string var;SOAP output)
SOAP DECLARATION(WS_Param9;Is string var;SOAP output)
SOAP DECLARATION(WS_Param10;Is string var;SOAP output)
SOAP DECLARATION(WS_Param11;Is string var;SOAP output)
SOAP DECLARATION(WS_Param12;Is string var;SOAP output)

//--------------------------------------------------------------

SOAP DECLARATION(WS_Param13;Is string var;SOAP output)
SOAP DECLARATION(WS_Param14;Is string var;SOAP output)
SOAP DECLARATION(WS_Param15;Is string var;SOAP output)
SOAP DECLARATION(WS_Param16;Is string var;SOAP output)
SOAP DECLARATION(WS_Param17;Is string var;SOAP output)
SOAP DECLARATION(WS_Param18;Is string var;SOAP output)
SOAP DECLARATION(WS_Param19;Is string var;SOAP output)
SOAP DECLARATION(WS_Param20;Is string var;SOAP output)
SOAP DECLARATION(WS_Param21;Is string var;SOAP output)
SOAP DECLARATION(WS_Param22;Is string var;SOAP output)
SOAP DECLARATION(WS_Param23;Is string var;SOAP output)
SOAP DECLARATION(WS_Param24;Is string var;SOAP output)
SOAP DECLARATION(WS_Param25;Is string var;SOAP output)
SOAP DECLARATION(WS_Param26;Is string var;SOAP output)
SOAP DECLARATION(WS_Param27;Is string var;SOAP output)
SOAP DECLARATION(WS_Param28;Is string var;SOAP output)
SOAP DECLARATION(WS_Param29;Is string var;SOAP output)
SOAP DECLARATION(WS_Param30;Is string var;SOAP output)
SOAP DECLARATION(WS_Param31;Is string var;SOAP output)
SOAP DECLARATION(WS_Param32;Is string var;SOAP output)
SOAP DECLARATION(WS_Param33;Is string var;SOAP output)
SOAP DECLARATION(WS_Param34;Is string var;SOAP output)
SOAP DECLARATION(WS_Param35;Is string var;SOAP output)
SOAP DECLARATION(WS_Param36;Is string var;SOAP output)
SOAP DECLARATION(WS_Param37;Is string var;SOAP output)
SOAP DECLARATION(WS_Param38;Is string var;SOAP output)
SOAP DECLARATION(WS_Param39;Is string var;SOAP output)
SOAP DECLARATION(WS_Param40;Is string var;SOAP output)

//WSC_SM_SU (WS_Param3;WS_Param2;WS_Param1;WS_Param4;WS_Param6;WS_Param5;WS_Param7;WS_Param8;WS_Param9)

WSC_SM_SU (WS_Param3;WS_Param2;WS_Param1;WS_Param4;WS_Param6;WS_Param5;WS_Param7;WS_Param8;WS_Param9;WS_Param10;WS_Param11;WS_Param12;WS_Param13;WS_Param14;WS_Param15;WS_Param16;WS_Param17;WS_Param18;WS_Param19;WS_Param20;WS_Param21;WS_Param22;WS_Param23;WS_Param24;WS_Param25;WS_Param26;WS_Param27;WS_Param28;WS_Param29;WS_Param30;WS_Param31;WS_Param32;WS_Param33;WS_Param34;WS_Param35;WS_Param36;WS_Param37;WS_Param38;WS_Param39;WS_Param40)

$String:="WS_SM_SU finished2"+Char(13)
WSRecordLog ($String)



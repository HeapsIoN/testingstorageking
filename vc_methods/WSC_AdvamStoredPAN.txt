//%attributes = {"lang":"en"} comment added and reserved by 4D.
// 
// WSC_AdvamStoredPAN
// https://demo-gateway.advam.com/stored_pan/V2/StoredPAN.wsdl
// 
// Method source code automatically generated by the 4D SOAP wizard.
// ----------------------------------------------------------------

C_TEXT($0)//Authorization Code
C_BOOLEAN($1)//Display Decline / Error Alerts
C_TEXT($2)// (P=Process, C=Credit, V=Void)
C_REAL($3)//Transaction Amount
C_TEXT($4)//Card Number
C_TEXT($5)//Expiry Date
C_TEXT($6)//TransID
C_TEXT($7;$8;$9)//AgreeNo, Description, CustomerCode
C_TEXT($10;$11)//Customer Name, Address
C_TEXT($12)//City
C_TEXT($13)//Zip Code
C_TEXT($14;$15;$16)
C_TEXT($19)
C_LONGINT($17;$18;$Logging;$AdvamErr)//Logging,Timeout
C_LONGINT($Error)
C_TEXT(AdvamCCAction)
C_TEXT($20;$statement_xpath;$value_t;$Sendcode)
C_BLOB($replyblob)
C_TEXT($xmlref;$xmlnode)
C_TEXT(AdvamCCAcc;AdvamCCUser;AdvamCCPass;AdvamCCAccNo;AdvamCCExpiryMonth;AdvamCCExpiryYear;AdvamCCAmount;AdvamCCMRef;AdvamCCName;vOriginalReceipt)

C_TEXT($root)
C_TEXT($subelem)
C_TEXT($namespace)

WS_AdvamSuccess:="0"


$Logging:=$17
AdvamCCExpiryMonth:=Substring($5;1;2)
AdvamCCExpiryYear:=Substring($5;3;2)


If ($2="P")
AdvamCCAction:="P"
Else 
AdvamCCAction:="R"
End if 


AdvamCCAcc:=$14


AdvamCCName:=$10
AdvamCCUser:=$15
AdvamCCPass:=$16
AdvamCCAmount:=String($3;"####0.00")
AdvamCCMRef:=$7
vOriginalReceipt:=$20
AdvamCCAccNo:=$4
AdvamCCPANID:=$9

ON ERR CALL("ErrorNone")

$namespace:="http://storedpan.advam.com/V2/StoredPAN"
$root:=DOM Create XML Ref("TransactionRequest";$namespace)

$subelem:=DOM Create XML element($root;"/TransactionRequest/AdvamAccount";"xsi:type";"tns:AdvamAccount")
DOM SET XML ELEMENT VALUE($subelem;AdvamCCAcc)//AdvamAccount

$subelem:=DOM Create XML element($root;"/TransactionRequest/OperatorUsername";"xsi:type";"tns:OperatorUsername")
DOM SET XML ELEMENT VALUE($subelem;AdvamCCUser)//OperatorUsername

$subelem:=DOM Create XML element($root;"/TransactionRequest/OperatorPassword";"xsi:type";"tns:OperatorPassword")
DOM SET XML ELEMENT VALUE($subelem;AdvamCCPass)//OperatorPassword

$subelem:=DOM Create XML element($root;"/TransactionRequest/PanId";"xsi:type";"tns:PANID")
DOM SET XML ELEMENT VALUE($subelem;AdvamCCPANID)//PanId

$subelem:=DOM Create XML element($root;"/TransactionRequest/Action";"xsi:type";"tns:Action")
DOM SET XML ELEMENT VALUE($subelem;AdvamCCAction)//Action

$subelem:=DOM Create XML element($root;"/TransactionRequest/Amount";"xsi:type";"tns:Amount")
DOM SET XML ELEMENT VALUE($subelem;AdvamCCAmount)//Amount

$subelem:=DOM Create XML element($root;"/TransactionRequest/MerchantReference";"xsi:type";"tns:MerchantReference")
DOM SET XML ELEMENT VALUE($subelem;AdvamCCMRef)//MerchantReference

$subelem:=DOM Create XML element($root;"/TransactionRequest/PreAuthorisation";"xsi:type";"tns:PreAuthorisation")
DOM SET XML ELEMENT VALUE($subelem;"")//PreAuthorisation

$subelem:=DOM Create XML element($root;"/TransactionRequest/OriginalReceipt";"xsi:type";"tns:OriginalReceipt")
DOM SET XML ELEMENT VALUE($subelem;vOriginalReceipt)//OriginalReceipt

$subelem:=DOM Create XML element($root;"/TransactionRequest/EffectiveDate";"xsi:type";"tns:EffectiveDate")
DOM SET XML ELEMENT VALUE($subelem;"")//EffectiveDate

$subelem:=DOM Create XML element($root;"/TransactionRequest/PrimaryAccountNumber";"xsi:type";"tns:PrimaryAccountNumber")
DOM SET XML ELEMENT VALUE($subelem;AdvamCCAccNo)//PrimaryAccountNumber

$subelem:=DOM Create XML element($root;"/TransactionRequest/CardHolderName";"xsi:type";"tns:CardHolderName")
DOM SET XML ELEMENT VALUE($subelem;AdvamCCName)//CardHolderName

$subelem:=DOM Create XML element($root;"/TransactionRequest/ExpiryMonth";"xsi:type";"tns:ExpiryMonth")
DOM SET XML ELEMENT VALUE($subelem;AdvamCCExpiryMonth)//ExpiryMonth

$subelem:=DOM Create XML element($root;"/TransactionRequest/ExpiryYear";"xsi:type";"tns:ExpiryYear")
DOM SET XML ELEMENT VALUE($subelem;AdvamCCExpiryYear)//ExpiryYear

If ($Logging=1)
DOM EXPORT TO VAR($root;$Sendcode)
SyncRecordLog ($Sendcode)
End if 

$namespace:="http://storedpan.advam.com/V2/StoredPAN"
$linkroot:=DOM Create XML Ref("LinkTestRequest";$namespace)

$subelem:=DOM Create XML element($linkroot;"/LinkTestRequest/Mode";"xsi:type";"tns:Mode")
DOM SET XML ELEMENT VALUE($subelem;"0")//Mode

WEB SERVICE SET PARAMETER("LinkTestRequest";$linkroot)



If ([Facility]TestAccount)
If ($Logging=1)
SyncRecordLog ("Open Test LinkTest")
End if 

WEB SERVICE CALL("https://demo-gateway.advam.com/stored_pan/V2/soap.php";"http://storedpan.advam.com/V2/StoredPAN/LinkTest";"LinkTest";"http://storedpan.advam.com/V2/StoredPAN";Web Service manual)

WS_LinkTestSuccess:="False"

If (OK=1)
WEB SERVICE GET RESULT($replyblob;"LinkTestResponse";*)

$xmlref:=DOM Parse XML variable($replyblob)
$statement_xpath:="/LinkTestResponse/Success"
$xmlnode:=DOM Find XML element($xmlref;$statement_xpath)

If ($xmlnode#"0000000000000000")
DOM GET XML ELEMENT VALUE($xmlnode;$value_t)
WS_LinkTestSuccess:=$value_t
End if 

End if 


If (WS_LinkTestSuccess="true")
If ($Logging=1)
SyncRecordLog ("Pass Test LinkTest")
End if 
WEB SERVICE SET PARAMETER("TransactionRequest";$root)
$Error:=IT_SetTimeOut ($18)
If ($Logging=1)
SyncRecordLog ("Open Test Transaction")
End if 
WEB SERVICE CALL("https://demo-gateway.advam.com/stored_pan/V2/soap.php";"http://storedpan.advam.com/V2/StoredPAN/Transaction";"Transaction";"http://storedpan.advam.com/V2/StoredPAN";Web Service manual)
$AdvamErr:=Num(WEB SERVICE Get info(0))
If ($AdvamErr>0)
If ($Logging=1)
SyncRecordLog ("Error# "+String($AdvamErr))
End if 
$vhTimeStart:=Current time
Repeat 
$Time:=Current time
Until ((Current time-$vhTimeStart)>=?00:00:10?)
WEB SERVICE SET PARAMETER("TransactionRequest";$root)
If ($Logging=1)
SyncRecordLog ("Open Test Transaction - Attempt 2")
End if 
WEB SERVICE CALL("https://demo-gateway.advam.com/stored_pan/V2/soap.php";"http://storedpan.advam.com/V2/StoredPAN/Transaction";"Transaction";"http://storedpan.advam.com/V2/StoredPAN";Web Service manual)
$AdvamErr:=Num(WEB SERVICE Get info(0))
If ($AdvamErr>0)
If ($Logging=1)
SyncRecordLog ("Error# "+String($AdvamErr))
End if 
If (Not(IsAWebProcess ))
AlertMessage (Get localized string("There was an error contacting the Demo Advam servers, try again later."))
End if 
$0:="ERR4IC"
Else 
If ($Logging=1)
SyncRecordLog ("Pass Test Transaction - Attempt 2")
End if 
End if 
Else 
If ($Logging=1)
SyncRecordLog ("Pass Test Transaction")
End if 
End if 
Else 
If ($Logging=1)
SyncRecordLog ("Open Test LinkTest - Gateway 2")
End if 
WEB SERVICE CALL("https://demo-gateway2.advam.com/stored_pan/V2/soap.php";"http://storedpan.advam.com/V2/StoredPAN/LinkTest";"LinkTest";"http://storedpan.advam.com/V2/StoredPAN";Web Service manual)
WS_LinkTestSuccess:="False"

If (OK=1)
WEB SERVICE GET RESULT($replyblob;"LinkTestResponse";*)

$xmlref:=DOM Parse XML variable($replyblob)
$statement_xpath:="/LinkTestResponse/Success"
$xmlnode:=DOM Find XML element($xmlref;$statement_xpath)

If ($xmlnode#"0000000000000000")
DOM GET XML ELEMENT VALUE($xmlnode;$value_t)
WS_LinkTestSuccess:=$value_t
End if 

End if 


If (WS_LinkTestSuccess="true")
If ($Logging=1)
SyncRecordLog ("Pass Test LinkTest - Gateway 2")
End if 
WEB SERVICE SET PARAMETER("TransactionRequest";$root)
$Error:=IT_SetTimeOut ($18)
If ($Logging=1)
SyncRecordLog ("Open Test Transaction - Gateway 2")
End if 
WEB SERVICE CALL("https://demo-gateway2.advam.com/stored_pan/V2/soap.php";"http://storedpan.advam.com/V2/StoredPAN/Transaction";"Transaction";"http://storedpan.advam.com/V2/StoredPAN";Web Service manual)
$AdvamErr:=Num(WEB SERVICE Get info(0))
If ($AdvamErr>0)
If ($Logging=1)
SyncRecordLog ("Error# "+String($AdvamErr))
End if 
$vhTimeStart:=Current time
Repeat 
$Time:=Current time
Until ((Current time-$vhTimeStart)>=?00:00:10?)
WEB SERVICE SET PARAMETER("TransactionRequest";$root)
If ($Logging=1)
SyncRecordLog ("Open Test Transaction - Gateway 2 - Attempt 2")
End if 
WEB SERVICE CALL("https://demo-gateway2.advam.com/stored_pan/V2/soap.php";"http://storedpan.advam.com/V2/StoredPAN/Transaction";"Transaction";"http://storedpan.advam.com/V2/StoredPAN";Web Service manual)
$AdvamErr:=Num(WEB SERVICE Get info(0))
If ($AdvamErr>0)
If ($Logging=1)
SyncRecordLog ("Error# "+String($AdvamErr))
End if 
If (Not(IsAWebProcess ))
AlertMessage (Get localized string("There was an error contacting the Demo Advam servers, try again later."))
End if 
$0:="ERR4IC"
Else 
If ($Logging=1)
SyncRecordLog ("Pass Test Transaction - Gateway 2 - Attempt 2")
End if 
End if 
Else 
If ($Logging=1)
SyncRecordLog ("Pass Test Transaction - Gateway 2")
End if 
End if 
Else 
If (Not(IsAWebProcess ))
AlertMessage (Get localized string("There was an error contacting the Demo Advam servers, try again later."))
End if 
$0:="ERR4IC"
$AdvamErr:=1
End if 
End if 
Else 
If ($Logging=1)
SyncRecordLog ("Open LinkTest")
End if 
WEB SERVICE CALL("https://gateway.advam.com/stored_pan/V2/soap.php";"http://storedpan.advam.com/V2/StoredPAN/LinkTest";"LinkTest";"http://storedpan.advam.com/V2/StoredPAN";Web Service manual)
WS_LinkTestSuccess:="False"

If (OK=1)
WEB SERVICE GET RESULT($replyblob;"LinkTestResponse";*)

$xmlref:=DOM Parse XML variable($replyblob)
$statement_xpath:="/LinkTestResponse/Success"
$xmlnode:=DOM Find XML element($xmlref;$statement_xpath)

If ($xmlnode#"0000000000000000")
DOM GET XML ELEMENT VALUE($xmlnode;$value_t)
WS_LinkTestSuccess:=$value_t
End if 

End if 


If (WS_LinkTestSuccess="true")
If ($Logging=1)
SyncRecordLog ("Pass LinkTest")
End if 
WEB SERVICE SET PARAMETER("TransactionRequest";$root)
$Error:=IT_SetTimeOut ($18)
If ($Logging=1)
SyncRecordLog ("Open Transaction")
End if 
WEB SERVICE CALL("https://gateway.advam.com/stored_pan/V2/soap.php";"http://storedpan.advam.com/V2/StoredPAN/Transaction";"Transaction";"http://storedpan.advam.com/V2/StoredPAN";Web Service manual)
$AdvamErr:=Num(WEB SERVICE Get info(0))
If ($AdvamErr>0)
If ($Logging=1)
SyncRecordLog ("Error# "+String($AdvamErr))
End if 
$vhTimeStart:=Current time
Repeat 
$Time:=Current time
Until ((Current time-$vhTimeStart)>=?00:00:10?)
WEB SERVICE SET PARAMETER("TransactionRequest";$root)
If ($Logging=1)
SyncRecordLog ("Open Transaction - Attempt 2")
End if 
WEB SERVICE CALL("https://gateway.advam.com/stored_pan/V2/soap.php";"http://storedpan.advam.com/V2/StoredPAN/Transaction";"Transaction";"http://storedpan.advam.com/V2/StoredPAN";Web Service manual)
$AdvamErr:=Num(WEB SERVICE Get info(0))
If ($AdvamErr>0)
If ($Logging=1)
SyncRecordLog ("Error# "+String($AdvamErr))
End if 
If (Not(IsAWebProcess ))
AlertMessage (Get localized string("There was an error contacting the Advam servers, try again later."))
End if 
$0:="ERR4IC"
Else 
If ($Logging=1)
SyncRecordLog ("Pass Transaction - Attempt 2")
End if 
End if 
Else 
If ($Logging=1)
SyncRecordLog ("Pass Transaction")
End if 
End if 
Else 
If ($Logging=1)
SyncRecordLog ("Open LinkTest - Gateway 2")
End if 
WEB SERVICE CALL("https://gateway2.advam.com/stored_pan/V2/soap.php";"http://storedpan.advam.com/V2/StoredPAN/LinkTest";"LinkTest";"http://storedpan.advam.com/V2/StoredPAN";Web Service manual)
WS_LinkTestSuccess:="False"

If (OK=1)
WEB SERVICE GET RESULT($replyblob;"LinkTestResponse";*)

$xmlref:=DOM Parse XML variable($replyblob)
$statement_xpath:="/LinkTestResponse/Success"
$xmlnode:=DOM Find XML element($xmlref;$statement_xpath)

If ($xmlnode#"0000000000000000")
DOM GET XML ELEMENT VALUE($xmlnode;$value_t)
WS_LinkTestSuccess:=$value_t
End if 

End if 


If (WS_LinkTestSuccess="true")
If ($Logging=1)
SyncRecordLog ("Pass LinkTest - Gateway 2")
End if 
WEB SERVICE SET PARAMETER("TransactionRequest";$root)
$Error:=IT_SetTimeOut ($18)
If ($Logging=1)
SyncRecordLog ("Open Transaction - Gateway 2")
End if 
WEB SERVICE CALL("https://gateway2.advam.com/stored_pan/V2/soap.php";"http://storedpan.advam.com/V2/StoredPAN/Transaction";"Transaction";"http://storedpan.advam.com/V2/StoredPAN";Web Service manual)
$AdvamErr:=Num(WEB SERVICE Get info(0))
If ($AdvamErr>0)
If ($Logging=1)
SyncRecordLog ("Error# "+String($AdvamErr))
End if 
$vhTimeStart:=Current time
Repeat 
$Time:=Current time
Until ((Current time-$vhTimeStart)>=?00:00:10?)
WEB SERVICE SET PARAMETER("TransactionRequest";$root)
If ($Logging=1)
SyncRecordLog ("Open Transaction - Gateway 2 - Attempt 2")
End if 
WEB SERVICE CALL("https://gateway2.advam.com/stored_pan/V2/soap.php";"http://storedpan.advam.com/V2/StoredPAN/Transaction";"Transaction";"http://storedpan.advam.com/V2/StoredPAN";Web Service manual)
$AdvamErr:=Num(WEB SERVICE Get info(0))
If ($AdvamErr>0)
If ($Logging=1)
SyncRecordLog ("Error# "+String($AdvamErr))
End if 
If (Not(IsAWebProcess ))
AlertMessage (Get localized string("There was an error contacting the Advam servers, try again later."))
End if 
$0:="ERR4IC"
Else 
If ($Logging=1)
SyncRecordLog ("Pass Transaction - Gateway 2 - Attempt 2")
End if 
End if 
Else 
If ($Logging=1)
SyncRecordLog ("Pass Transaction - Gateway 2")
End if 
End if 
Else 
If (Not(IsAWebProcess ))
AlertMessage (Get localized string("There was an error contacting the Advam servers, try again later."))
End if 
$0:="ERR4IC"
$AdvamErr:=1
End if 
End if 
End if 

DOM CLOSE XML($root)
DOM CLOSE XML($linkroot)

If ($AdvamErr=0)
WEB SERVICE GET RESULT($replyblob;"TransactionResponse";*)

If ($Logging=1)
$Receivecode:=Convert to text($replyblob;"UTF-8")
SyncRecordLog ($Receivecode)
End if 


$xmlref:=DOM Parse XML variable($replyblob)
$statement_xpath:="/TransactionResponse/Transaction/Success"
$xmlnode:=DOM Find XML element($xmlref;$statement_xpath)

If ($xmlnode#"0000000000000000")
DOM GET XML ELEMENT VALUE($xmlnode;$value_t)
WS_AdvamSuccess:=$value_t
End if 

$statement_xpath:="/TransactionResponse/Transaction/ResponseCode"
$xmlnode:=DOM Find XML element($xmlref;$statement_xpath)

If ($xmlnode#"0000000000000000")
DOM GET XML ELEMENT VALUE($xmlnode;$value_t)
WS_ResponseCode:=$value_t
End if 

$statement_xpath:="/TransactionResponse/Transaction/ResponseText"
$xmlnode:=DOM Find XML element($xmlref;$statement_xpath)

If ($xmlnode#"0000000000000000")
DOM GET XML ELEMENT VALUE($xmlnode;$value_t)
WS_ResponseText:=$value_t
End if 

$statement_xpath:="/TransactionResponse/Transaction/AuthorisationNumber"
$xmlnode:=DOM Find XML element($xmlref;$statement_xpath)

If ($xmlnode#"0000000000000000")
DOM GET XML ELEMENT VALUE($xmlnode;$value_t)
WS_AuthorisationNumber:=$value_t
End if 

$statement_xpath:="/TransactionResponse/Transaction/Receipt"
$xmlnode:=DOM Find XML element($xmlref;$statement_xpath)

If ($xmlnode#"0000000000000000")
DOM GET XML ELEMENT VALUE($xmlnode;$value_t)
WS_Receipt:=$value_t
End if 

$statement_xpath:="/TransactionResponse/Transaction/SettlementDate"
$xmlnode:=DOM Find XML element($xmlref;$statement_xpath)

If ($xmlnode#"0000000000000000")
DOM GET XML ELEMENT VALUE($xmlnode;$value_t)
WS_SettlementDate:=$value_t
End if 

$statement_xpath:="/TransactionResponse/Transaction/OriginalReceipt"
$xmlnode:=DOM Find XML element($xmlref;$statement_xpath)

If ($xmlnode#"0000000000000000")
DOM GET XML ELEMENT VALUE($xmlnode;$value_t)
WS_OriginalReceipt:=$value_t
End if 


DOM CLOSE XML($xmlref)

If (WS_AdvamSuccess="1") | (WS_AdvamSuccess="True")

$0:=WS_AuthorisationNumber//Authorisation Number
[Trxs]CCAuthNo:=WS_AuthorisationNumber
[Trxs]CCTransID:=WS_Receipt//Transaction ID,
[Trxs]OriginalReceipt:=WS_OriginalReceipt
If ([Analysis]SetBankedDate=False)//The Date Banked value is set to 'Off' in the Analysis Code
[Trxs]DateBanked:=Date(Substring(WS_SettlementDate;9;2)+"/"+Substring(WS_SettlementDate;6;2)+"/"+Substring(WS_SettlementDate;1;4))
End if 
Else 
$0:="ERR"+Substring(WS_ResponseCode;Length(WS_ResponseCode)-2;3)//substring to prevent "destination string is smaller than source"
If ($1) & (Not(IsAWebProcess ))
Case of 
: (WS_ResponseCode="00")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("The requested transaction has been approved."))
: (WS_ResponseCode="01")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Card Issuer has declined the payment request."))
: (WS_ResponseCode="02")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Card Issuer has had special conditions applied to the card."))
: (WS_ResponseCode="03")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Merchant ID not found on Bank's System."))
: (WS_ResponseCode="04")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Card Issuer has declined the transaction and requested the card be retained."))
: (WS_ResponseCode="05")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("The bank that issued this card to your customer has imposed some special conditions on the card or the use of the card. This could also indicate that the use of the card has been temporarily suspended."))
: (WS_ResponseCode="06")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("The message sent by the terminal to the bank's system contained an error."))
: (WS_ResponseCode="07")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Card Issuer has declined the transaction and requested the card be retained."))
: (WS_ResponseCode="08")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("This transaction is approved subject to the usual fraud checks and the operator's satisfactory assessment that the card user is the legal user and that signatures match."))
: (WS_ResponseCode="12")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("The bank that issued this card to your customer has declined the transaction as the type of transaction is not valid for the type of card. e.g. Selecting to pay from a credit card account with standard issue EFTPOS card."))
: (WS_ResponseCode="13")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("The transaction amount is invalid."))
: (WS_ResponseCode="14")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("The Credit Card number presented is Invalid. This could be because the card number or card series has been revoked or the number was simply miskeyed."))
: (WS_ResponseCode="15")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("The Credit Card number presented is Invalid. This could be because the card number or card series has been revoked or the number was simply miskeyed."))
: (WS_ResponseCode="19")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("The transaction has not been processed. Retry the transaction."))
: (WS_ResponseCode="21")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Reversal Approved"))
: (WS_ResponseCode="30")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Message Format Error."))
: (WS_ResponseCode="31")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("The Card Issuer is not supported."))
: (WS_ResponseCode="33")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Card has expired"))
: (WS_ResponseCode="36")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Restricted Card"))
: (WS_ResponseCode="38")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Card Issuer has indicated that the card has exceeded the maximum number of PIN tries."))
: (WS_ResponseCode="39")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("There is no credit account linked to the card."))
: (WS_ResponseCode="41")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Card has been reported as lost."))
: (WS_ResponseCode="43")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Card has been reported as stolen."))
: (WS_ResponseCode="51")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Card/account has insufficient funds for this transaction."))
: (WS_ResponseCode="52")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("No cheque account connected to card."))
: (WS_ResponseCode="53")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("No savings account connected to card."))
: (WS_ResponseCode="54")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Card has expired"))
: (WS_ResponseCode="55")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Cardholder PIN has failed validation"))
: (WS_ResponseCode="56")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Card Issuer has no record of the card."))
: (WS_ResponseCode="57")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Card Issuer has indicated that the transaction is not permitted to cardholder"))
: (WS_ResponseCode="58")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Transaction not permitted on this terminal."))
: (WS_ResponseCode="59")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Card Issuer has indicated that the card is suspected as being fraudulent"))
: (WS_ResponseCode="60")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("There has been a problem processing the transaction."))
: (WS_ResponseCode="61")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Transaction will exceed card/account withdrawal frequency limit."))
: (WS_ResponseCode="62")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Card Issuer has indicated that there are restrictions placed on the card."))
: (WS_ResponseCode="63")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("The terminal's verification code has failed certification."))
: (WS_ResponseCode="65")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Transaction will exceed card/account withdrawal frequency limit."))
: (WS_ResponseCode="67")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Card issuer has indicated the card is suspected counterfeit."))
: (WS_ResponseCode="75")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Card Issuer has indicated that the card has exceeded the maximum number of PIN tries"))
: (WS_ResponseCode="91")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Link with the Card Issuer is not available."))
: (WS_ResponseCode="96")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("There has been a problem processing the transaction."))
: (WS_ResponseCode="98")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("The secure encryption device and the acquiring bank don't agree on the key used in the transaction, therefore the acquiring bank is rejecting the transaction."))
: (WS_ResponseCode="A4")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("The acquiring bank is currently unavailable. This could be due to a telecommunications error, or the bank is currently unable to process transactions."))
: (WS_ResponseCode="A5")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("The secure hardware encryption device is currently offline."))
: (WS_ResponseCode="AA")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Invalid Credit Card Number"))
: (WS_ResponseCode="AB")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Invalid Credit Card Expiry Date"))
: (WS_ResponseCode="AC")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Card has expired"))
: (WS_ResponseCode="AD")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Invalid Account"))
: (WS_ResponseCode="AE")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Unable to connect to a Transaction Server"))
: (WS_ResponseCode="AF")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("The record is not a valid record"))
: (WS_ResponseCode="AV100")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("The request was not formatted correctly"))
: (WS_ResponseCode="AV200")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("The request could not be processed"))
: (WS_ResponseCode="AV300")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("There was an internal error in the gateway"))
: (WS_ResponseCode="AV400")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Operator login failed"))
: (WS_ResponseCode="AV401")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Operator login failed too many times"))
: (WS_ResponseCode="AV402")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("The Operator account has expired"))
: (WS_ResponseCode="AV500")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Operator not authorised to perform request"))
: (WS_ResponseCode="AV501")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("The Merchant account has been disabled"))
: (WS_ResponseCode="AV502")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("The Merchant account does not allow this currency"))
: (WS_ResponseCode="AV503")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Amount is less than minimum payment amount for this Merchant"))
: (WS_ResponseCode="AV504")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Amount is more than maximum payment amount for this Merchant"))
: (WS_ResponseCode="AV505")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Payments are not allowed for this Operator"))
: (WS_ResponseCode="AV506")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Refunds are not allowed for this Operator"))
: (WS_ResponseCode="AV507")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Invalid action supplied, must be P, R, A or C"))
: (WS_ResponseCode="AV508")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Amount is more than the maximum refund amount for this Operator"))
: (WS_ResponseCode="AV509")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Amount is more than the maximum refund amount for this Operator"))
: (WS_ResponseCode="AV510")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Amount is more than the maximum payment amount for this Operator"))
: (WS_ResponseCode="AV511")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Pre-authorisations are not allowed for this Operator"))
: (WS_ResponseCode="AV512")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Completions are not allowed for this Operator"))
: (WS_ResponseCode="AV513")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Operator is not authorised for this Merchant"))
: (WS_ResponseCode="AV600")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("The credit card number is incorrect or invalid"))
: (WS_ResponseCode="AV610")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Card has expired"))
: (WS_ResponseCode="AV700")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("Pre-Authorisation Number is required"))
: (WS_ResponseCode="AV800")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("The Original Receipt Number is required for a refund"))
: (WS_ResponseCode="AV900")
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText+" "+Get localized string("An error has occurred with third-party software at the acquiring bank."))
Else 
AlertMessage (Get localized string("Result Code")+": "+$0+" - "+WS_ResponseText)
End case 
End if 
End if 
vCCText:=WS_ResponseText
Else 
If ($Logging=1)
SyncRecordLog ($Sendcode)
SyncRecordLog ("TCP/IP Error")
End if 
End if 

$Error:=IT_SetTimeOut (30)

ON ERR CALL("ErrorLog")


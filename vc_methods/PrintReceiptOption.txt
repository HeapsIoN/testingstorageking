//%attributes = {"lang":"en"} comment added and reserved by 4D.
C_BOOLEAN($1)//true = reservation; false = agreement 

If (Count parameters>0)
$Reserv:=$1
Else 
$Reserv:=False
End if 

SAVE RECORD([Customer])
CREATE SET([Customer];"CustRestore")
CREATE SET([Trxs];"ToRestore")
If ($Reserv)
SAVE RECORD([Reservation])
CREATE SET([Reservation];"ResRestore")
QUERY([Unit];[Unit]ReservedTo=[Reservation]RReserveNo)
Else 
SAVE RECORD([Agreement])
CREATE SET([Agreement];"AgreeRestore")
QUERY([Unit];[Unit]AgreeNo=[Agreement]RAgreeNo)
End if 

If (vMisc)
USE SET("UserSet")
End if 
If ([Trxs]AgreeNo#"") | (vMisc=False)

If ([Facility]UseReceiptPrinter)
LOAD RECORD([Trxs])
Case of 
: ([Trxs]Charge=True)
AlertMessage (Get localized string("You cannot print a receipt for a charge!"))
: ([Trxs]TrxDate=!00-00-00!)//18/11/14 DAM Added to fix printing receipt when no trx selected
AlertMessage ("Please select a receipt")
: ([Trxs]Charge=False)
$OK:=True
If ([Trxs]AnalysisCode#[Analysis]Code)
RELATE ONE([Trxs]AnalysisCode)
End if 
If ($OK)
//ACCEPT
If ([Facility]UseReceiptPrinter=True)
$Name:=Get current printer
SET CURRENT PRINTER([Facility]ReceiptName)
End if 
If (vMisc=True)
vAddr1:=""
$Narration:=[Trxs]Narration
For ($i;1;5)
$Pos:=Position(Char(17);$Narration;*)
$String:=Substring($Narration;1;$Pos-1)
$Narration:=Substring($Narration;$Pos+1)
Case of 

: ($i=1)
vAddr2:=$String//[Transaction]MiscDetls'CustName
: ($i=2)
vAddr3:=$String//[Transaction]MiscDetls'MailAddress
: ($i=3)
vAddr4:=$String//[Transaction]MiscDetls'MailCity
: ($i=4)
vAddr5:=$String//[Transaction]MiscDetls'MailState
: ($i=5)
vAddr6:=$String//[Transaction]MiscDetls'MailPostZIPCode
Else 
//do nothing 
End case 
End for 
vAddr7:=""
End if 
$CustomerCode:=[Trxs]CustomerCode
$Match:=[Trxs]Match
vBal:=[Trxs]TotAmt
vTax:=0
$Facility:=Substring([Trxs]CustomerCode;1;5)
If ($Match#0) & ([Facility]NoChargeRec=False)
QUERY([Trxs];[Trxs]CustomerCode=$CustomerCode;*)
QUERY([Trxs]; & ;[Trxs]Charge=True;*)
QUERY([Trxs]; & ;[Trxs]Match=$Match)
vTax:=Sum([Trxs]TaxAmt)
End if 
If ([Facility]UseCustomReceipt)
FORM SET OUTPUT([Facility];"ReceiptOnly")
// Settingd for SVG
C_TEXT($vXML)
If (BLOB size([Facility]Receipt_)#0)
LoadReferences (3)
End if 
SET PRINT OPTION(Orientation option;1)//Portrait
SET PRINT OPTION(Number of copies option;[Facility]ReceiptCopies)
If ([Facility]PrtDialogInv) | ([Facility]UseReceiptPrinter=False)
PRINT SETTINGS
PRINT RECORD([Facility];>)
Else 
SET PRINT PREVIEW(False)
PRINT RECORD([Facility];>)
End if 
FORM SET OUTPUT([Facility];"Output")
Else 
FORM SET OUTPUT([Trxs];"InvRecNarrow")
SET PRINT OPTION(Orientation option;1)//Portrait
SET PRINT OPTION(Number of copies option;[Facility]ReceiptCopies)
If ([Facility]PrtDialogInv) | ([Facility]UseReceiptPrinter=False)
PRINT SETTINGS
If ($Match#0) & ([Facility]NoChargeRec=False)
$print:=PrintSelection ("P*";->[Trxs];False;False)
Else 
PRINT RECORD([Trxs];>)
End if 
Else 
SET PRINT PREVIEW(False)
If ($Match#0) & ([Facility]NoChargeRec=False)
$print:=PrintSelection ("P*";->[Trxs];False;False)
Else 
PRINT RECORD([Trxs];>)
End if 
End if 
FORM SET OUTPUT([Trxs];"Output")
End if 
If ([Facility]UseReceiptPrinter=True)
SET CURRENT PRINTER($Name)
End if 
End if 
OBJECT SET VISIBLE(bAbort;False)
If (In transaction)
SAVE RECORD([Agreement])
SAVE RECORD([Reservation])
SAVE RECORD([Customer])
VALIDATE TRANSACTION
START TRANSACTION
End if 
Else 
//Do Nothing
End case 
Else 
//PrintReceipt 
OBJECT SET VISIBLE(bAbort;False)
If (In transaction)
SAVE RECORD([Agreement])
SAVE RECORD([Reservation])
SAVE RECORD([Customer])
VALIDATE TRANSACTION
START TRANSACTION
End if 
CREATE SET([Trxs];"$TransList")
If (vMisc=True)
USE SET("UserSet")
CREATE EMPTY SET([Trxs];"PrintAll")
ADD TO SET([Trxs];"PrintAll")
vAddr1:=""
$Narration:=[Trxs]Narration
For ($i;1;5)
$Pos:=Position(Char(17);$Narration;*)
$String:=Substring($Narration;1;$Pos-1)
$Narration:=Substring($Narration;$Pos+1)
Case of 

: ($i=1)
vAddr2:=$String//[Transaction]MiscDetls'CustName
: ($i=2)
vAddr3:=$String//[Transaction]MiscDetls'MailAddress
: ($i=3)
vAddr4:=$String//[Transaction]MiscDetls'MailCity
: ($i=4)
vAddr5:=$String//[Transaction]MiscDetls'MailState
: ($i=5)
vAddr6:=$String//[Transaction]MiscDetls'MailPostZIPCode
Else 
//do nothing 
End case 
End for 
vAddr7:=""
$Match:=[Trxs]Match
$Facility:=Substring([Trxs]CustomerCode;1;5)
QUERY([Trxs];[Trxs]CustomerCode=$Facility+"MISCL";*)
QUERY([Trxs]; & ;[Trxs]Charge=True;*)
QUERY([Trxs]; & ;[Trxs]Match=$Match)
For ($v;1;Records in selection([Trxs]))
ADD TO SET([Trxs];"PrintAll")
NEXT RECORD([Trxs])
End for 
REDUCE SELECTION([Unit];0)
REDUCE SELECTION([Agreement];0)
USE SET("PrintAll")
vReprintCopy:=False
If ([Facility]InvStatement>0)
QUERY SELECTION([Trxs];[Trxs]Charge=True)
//CREATE SET("PrintAll")
If ([Trxs]InvNo=0)
CREATE SET([Trxs];"SearchInvNo")
$InvContinue:=False

If ([Facility]CentralAddress="") | (<>sProduct="M@")
If (Not(Semaphore("<>bNextInvNo";1800)))
$InvContinue:=True
End if 
End if 

If ($InvContinue)
//10285

If (Application type=4D Remote mode)
GET PROCESS VARIABLE(-1;<>aiNextInvNo;<>aiNextInvNo)
GET PROCESS VARIABLE(-1;<>asAllSiteCodes;<>asAllSiteCodes)
End if 
$arraypos:=Find in array(<>asAllSiteCodes;[Facility]FacilityCode)

<>aiNextInvNo{$arraypos}:=<>aiNextInvNo{$arraypos}-1
Repeat 
<>aiNextInvNo{$arraypos}:=<>aiNextInvNo{$arraypos}+1
QUERY([Trxs];[Trxs]AgreeNo=[Facility]FacilityCode+"@";*)
QUERY([Trxs]; & ;[Trxs]InvNo>=<>aiNextInvNo{$arraypos})
Until (Records in selection([Trxs])<1)
USE SET("SearchInvNo")
CLEAR SET("SearchInvNo")
APPLY TO SELECTION([Trxs];[Trxs]InvDate:=Current date)
APPLY TO SELECTION([Trxs];[Trxs]InvNo:=<>aiNextInvNo{$arraypos})
APPLY TO SELECTION([Trxs];[Trxs]SetMatch:=False)
[Facility]NextInvNo:=<>aiNextInvNo{$arraypos}+1
<>aiNextInvNo{$arraypos}:=[Facility]NextInvNo
If (Application type=4D Remote mode)
VARIABLE TO VARIABLE(-1;<>aiNextInvNo;<>aiNextInvNo)
End if 
CLEAR SEMAPHORE("<>bNextInvNo")
Else 
$InvNo:=InvoiceNumber 
USE SET("SearchInvNo")
APPLY TO SELECTION([Trxs];[Trxs]InvDate:=Current date)
APPLY TO SELECTION([Trxs];[Trxs]InvNo:=$InvNo)
APPLY TO SELECTION([Trxs];[Trxs]SetMatch:=False)
End if 
Else 
vReprintCopy:=True
End if 
End if 
USE SET("PrintAll")
CLEAR SET("PrintAll")
ORDER BY([Trxs];[Trxs]CustomerCode;>;[Trxs]TrxDate;>;[Trxs]Charge;<;[Trxs]TotAmt;<)
If ([Customer]CustomerCode#[Trxs]CustomerCode)
RELATE ONE([Trxs]CustomerCode)
End if 
[Customer]BalFwdDate:=[Trxs]TrxDate-1
PrintInvRecCode (2;"";True)
Else //Print normal invoices
If (Records in selection([Trxs])>0)
CREATE SET([Trxs];"PrintAll")
//For ($i;1;Records in selection([Transaction]))
//GOTO SELECTED RECORD([Transaction];$i)
//RELATE ONE([Transaction]AgreeNo)
//If ([Agreement]BalanceOwing<0) & ([Agreement]NextBillDate<(Current date+14)) & ($Reserv=False)
//RELATE ONE([Agreement]CustomerCode)
//ConfirmTwo (Get localized string("Customer")+":"+Substring([Transaction]CustomerCode;6)+Char(13)+Get localized string("Next Bill Date")+":"+String([Agreement]NextBillDate)+Char(13)+Get localized string("Bal owing")+":"+<>sCurrency+String([Agreement]BalanceOwing;<>sFormat)+Char(13)+Get localized string("Bill Next Charge")+"?")
//If (OK=1)
//RELATE ONE([Transaction]CustomerCode)  //This line may not be required
//UpdateNewRent 
//DoBillNext 
//End if 
//End if 
//USE SET("PrintAll")
//End for 
USE SET("PrintAll")
CREATE EMPTY SET([Trxs];"ToPrint")
For ($i;1;Records in selection([Trxs]))
GOTO SELECTED RECORD([Trxs];$i)

If ($Reserv=True)
QUERY([Unit];[Unit]ReservedTo=[Trxs]AgreeNo)
If ([Facility]InvUseAgrBalFwd)
QUERY([Trxs];[Trxs]AgreeNo=[Reservation]RReserveNo)
Else 
QUERY([Trxs];[Trxs]CustomerCode=[Reservation]CustomerCode)
End if 
Else 
QUERY([Unit];[Unit]AgreeNo=[Trxs]AgreeNo)
If ([Facility]InvUseAgrBalFwd)
QUERY([Trxs];[Trxs]AgreeNo=[Agreement]RAgreeNo)
Else 
QUERY([Trxs];[Trxs]CustomerCode=[Agreement]CustomerCode)
End if 
End if 
ORDER BY([Trxs];[Trxs]TrxDate;>)
vReprintCopy:=False

If ($Reserv=True)
PrintInvRecCode (1;[Reservation]RReserveNo)
Else 
PrintInvRecCode (1)
End if 
USE SET("PrintAll")
End for 
USE SET("ToPrint")
If ([Facility]InvUseAgrBalFwd)
ORDER BY([Trxs];[Trxs]AgreeNo;>;[Trxs]TrxDate;>;[Trxs]Charge;<;[Trxs]TotAmt;<)
Else 
ORDER BY([Trxs];[Trxs]CustomerCode;>;[Trxs]TrxDate;>;[Trxs]Charge;<;[Trxs]TotAmt;<)
End if 
//If ([Facility]InvStatement=1)`why is this here when it is a receipt this code is used for?
//QUERY SELECTION([Transaction];[Transaction]Charge=True)
//End if 
If ($Reserv=True)
PrintInvRecCode (2;[Reservation]RReserveNo)
Else 
PrintInvRecCode (2)
End if 
Else 
//AlertMessage (Get localized string("Please select transactions to print invoices/receipts for, first"))
AlertMessage ("Please select a transaction!")
End if 
End if 
//tBoolean:=False
USE SET("$TransList")
CLEAR SET("$TransList")
ORDER BY([Trxs];[Trxs]TrxDate;>;[Trxs]Charge;<;[Trxs]TotAmt;<)
End if 

Else 
AlertMessage (Get localized string("Please highlight the transaction to print a receipt for"))
End if 

USE SET("ToRestore")
CLEAR SET("ToRestore")
USE SET("CustRestore")
CLEAR SET("CustRestore")
If ($Reserv)
USE SET("ResRestore")
CLEAR SET("ResRestore")
Else 
USE SET("AgreeRestore")
CLEAR SET("AgreeRestore")
End if 
If (vMisc)
UNLOAD RECORD([Customer])
UNLOAD RECORD([Agreement])
End if 
//If (Count parameters<3)  // added to print group of invoices from accounting menu
//If (vMisc=False)
//ReCalc 
//End if 
//End if 
//%attributes = {"lang":"en"} comment added and reserved by 4D.
//This method imports all records from the following (non-syncing) tables to files in the 'backups' folder
READ WRITE(*)
$NewPK:=0
//Import Supplier records
If (Test path name(<>sBackupPath+"Supplier.4ie")=Is a document)
DEFAULT TABLE([Supplier])
$NewPK:=Sequence number([Supplier])
$NewPK:=$NewPK+1
SET CHANNEL(10;<>sBackupPath+"Supplier.4ie")
RECEIVE RECORD
While (OK=1)
[Supplier]PrimaryKey:=$NewPK
$NewPK:=$NewPK+1
SAVE RECORD
RECEIVE RECORD
End while 
SET CHANNEL(11)
SET DATABASE PARAMETER([Supplier];Table sequence number;$NewPK)
SyncRecordLog ("[Supplier] Sequence Number End - "+String($NewPK))
End if 
$NewPK:=0
//Import Cashbook records
If (Test path name(<>sBackupPath+"Cashbook.4ie")=Is a document)
DEFAULT TABLE([CashBook])
$NewPK:=Sequence number([CashBook])
$NewPK:=$NewPK+1
SET CHANNEL(10;<>sBackupPath+"Cashbook.4ie")
RECEIVE RECORD
While (OK=1)
[CashBook]PrimaryKey:=$NewPK
$NewPK:=$NewPK+1
SAVE RECORD
RECEIVE RECORD
End while 
SET CHANNEL(11)
SET DATABASE PARAMETER([CashBook];Table sequence number;$NewPK)
SyncRecordLog ("[CashBook] Sequence Number End - "+String($NewPK))
End if 
$NewPK:=0
//Import CashBookTrxs records
$NewPK:=0
If (Test path name(<>sBackupPath+"CashbookTrxs.4ie")=Is a document)
DEFAULT TABLE([CashBookTrxs])
$NewPK:=Sequence number([CashBookTrxs])
$NewPK:=$NewPK+1
SET CHANNEL(10;<>sBackupPath+"CashbookTrxs.4ie")
RECEIVE RECORD
While (OK=1)
[CashBookTrxs]PrimaryKey:=$NewPK
$NewPK:=$NewPK+1
SAVE RECORD
RECEIVE RECORD
End while 
SET CHANNEL(11)
SET DATABASE PARAMETER([CashBookTrxs];Table sequence number;$NewPK)
SyncRecordLog ("[CashBookTrxs] Sequence Number End - "+String($NewPK))
End if 
$NewPK:=0
//Import Journal records
If (Test path name(<>sBackupPath+"Journal.4ie")=Is a document)
DEFAULT TABLE([Journal])
$NewPK:=Sequence number([Journal])
$NewPK:=$NewPK+1
SET CHANNEL(10;<>sBackupPath+"Journal.4ie")
RECEIVE RECORD
While (OK=1)
[Journal]PrimaryKey:=$NewPK
$NewPK:=$NewPK+1
SAVE RECORD
RECEIVE RECORD
End while 
SET CHANNEL(11)
SET DATABASE PARAMETER([Journal];Table sequence number;$NewPK)
SyncRecordLog ("[Journal] Sequence Number End - "+String($NewPK))
End if 
$NewPK:=0
//Import ChartAccts records
If (Test path name(<>sBackupPath+"ChartAccts.4ie")=Is a document)
DEFAULT TABLE([ChartAccts])
$NewPK:=Sequence number([ChartAccts])
$NewPK:=$NewPK+1
SET CHANNEL(10;<>sBackupPath+"ChartAccts.4ie")
RECEIVE RECORD
While (OK=1)
[ChartAccts]PrimaryKey:=$NewPK
$NewPK:=$NewPK+1
SAVE RECORD
RECEIVE RECORD
End while 
SET CHANNEL(11)
SET DATABASE PARAMETER([ChartAccts];Table sequence number;$NewPK)
SyncRecordLog ("[ChartAccts] Sequence Number End - "+String($NewPK))
End if 
$NewPK:=0
//Import UserLogins records
If (Test path name(<>sBackupPath+"UserLogins.4ie")=Is a document)
DEFAULT TABLE([UserLogins])
$NewPK:=Sequence number([UserLogins])
$NewPK:=$NewPK+1
SET CHANNEL(10;<>sBackupPath+"UserLogins.4ie")
RECEIVE RECORD
While (OK=1)
[UserLogins]PrimaryKey:=$NewPK
$NewPK:=$NewPK+1
SAVE RECORD
RECEIVE RECORD
End while 
SET CHANNEL(11)
SET DATABASE PARAMETER([UserLogins];Table sequence number;$NewPK)
SyncRecordLog ("[UserLogins] Sequence Number End - "+String($NewPK))
End if 
$NewPK:=0
//Import ChartTotals records
If (Test path name(<>sBackupPath+"ChartTotals.4ie")=Is a document)
DEFAULT TABLE([ChartTotals])
$NewPK:=Sequence number([ChartTotals])
$NewPK:=$NewPK+1
SET CHANNEL(10;<>sBackupPath+"ChartTotals.4ie")
RECEIVE RECORD
While (OK=1)
[ChartTotals]PrimaryKey:=$NewPK
$NewPK:=$NewPK+1
SAVE RECORD
RECEIVE RECORD
End while 
SET CHANNEL(11)
SET DATABASE PARAMETER([ChartTotals];Table sequence number;$NewPK)
SyncRecordLog ("[ChartTotals] Sequence Number End - "+String($NewPK))
End if 
$NewPK:=0
//Import Groups records
If (Test path name(<>sBackupPath+"Groups.4ie")=Is a document)
DEFAULT TABLE([Groups])
$NewPK:=Sequence number([Groups])
$NewPK:=$NewPK+1
SET CHANNEL(10;<>sBackupPath+"Groups.4ie")
RECEIVE RECORD
While (OK=1)
[Groups]PrimaryKey:=$NewPK
$NewPK:=$NewPK+1
SAVE RECORD
RECEIVE RECORD
End while 
SET CHANNEL(11)
SET DATABASE PARAMETER([Groups];Table sequence number;$NewPK)
SyncRecordLog ("[Groups] Sequence Number End - "+String($NewPK))
End if 
$NewPK:=0
//Import Usergroup records
If (Test path name(<>sBackupPath+"Usergroup.4ie")=Is a document)
DEFAULT TABLE([UserGroup])
$NewPK:=Sequence number([UserGroup])
$NewPK:=$NewPK+1
SET CHANNEL(10;<>sBackupPath+"Usergroup.4ie")
RECEIVE RECORD
While (OK=1)
[UserGroup]PrimaryKey:=$NewPK
$NewPK:=$NewPK+1
SAVE RECORD
RECEIVE RECORD
End while 
SET CHANNEL(11)
SET DATABASE PARAMETER([UserGroup];Table sequence number;$NewPK)
SyncRecordLog ("[UserGroup] Sequence Number End - "+String($NewPK))
End if 
$NewPK:=0
//Import Facility records
If (Test path name(<>sBackupPath+"Facility.4ie")=Is a document)
DEFAULT TABLE([Facility])
$NewPK:=Sequence number([Facility])
$NewPK:=$NewPK+1
SET CHANNEL(10;<>sBackupPath+"Facility.4ie")
RECEIVE RECORD
While (OK=1)
[Facility]PrimaryKey:=$NewPK
$NewPK:=$NewPK+1
SAVE RECORD
RECEIVE RECORD
End while 
SET CHANNEL(11)
SET DATABASE PARAMETER([Facility];Table sequence number;$NewPK)
SyncRecordLog ("[Facility] Sequence Number End - "+String($NewPK))
End if 
$NewPK:=0
READ ONLY(*)
UnloadAll 
LOAD RECORD([UserLogins])
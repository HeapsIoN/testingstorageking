//%attributes = {"publishedSoap":true,"lang":"en"} comment added and reserved by 4D.
SOAP DECLARATION(WS_Cust_Code;Is text;SOAP input)
SOAP DECLARATION(WS_UnitIDFrom;Is text;SOAP input)
SOAP DECLARATION(WS_UnitIDTo;Is text;SOAP input)
SOAP DECLARATION(WS_Start_Date;Is date;SOAP input)

$String:="Start WS_Insomniac_GetTranserCost"+Char(13)
$String:=$String+"WS_Cust_Code: "+WS_Cust_Code+Char(13)
$String:=$String+"WS_UnitIDFrom: "+WS_UnitIDFrom+Char(13)
$String:=$String+"WS_UnitIDTo: "+WS_UnitIDTo+Char(13)
$String:=$String+"WS_Start_Date: "+String(WS_Start_Date)+Char(13)

WSRECORDLOG ($String)
SOAP DECLARATION(WS_RET_CODE;Is Boolean;SOAP output)
SOAP DECLARATION(WS_InternalUnitID;Text array;SOAP output)
SOAP DECLARATION(WS_ExternalUnitID;Text array;SOAP output)
SOAP DECLARATION(WS_ItemDescription;Text array;SOAP output)
SOAP DECLARATION(WS_ItemAmount;Real array;SOAP output)
SOAP DECLARATION(WS_ItemTaxAmountt;Real array;SOAP output)
SOAP DECLARATION(WS_StartDateStr;Text array;SOAP output)
SOAP DECLARATION(WS_EndDateStr;Text array;SOAP output)
SOAP DECLARATION(WS_ERROR;Is text;SOAP output)

ARRAY TEXT(WS_InternalUnitID;0)
ARRAY TEXT(WS_ExternalUnitID;0)
ARRAY TEXT(WS_ItemDescription;0)
ARRAY REAL(WS_ItemAmount;0)
ARRAY REAL(WS_ItemTaxAmountt;0)
ARRAY TEXT(WS_StartDateStr;0)
ARRAY TEXT(WS_EndDateStr;0)

QUERY([Unit];[Unit]RUnitNo=Substring(WS_Cust_Code;1;5)+WS_UnitIDFrom)
RELATE ONE([Unit]AgreeNo)
If (Records in selection([Agreement])#0)
If (Records in selection([Unit])#0)
WS_RET_CODE:=True
$X:=[Agreement]NextBillDate-WS_Start_Date
$Y:=[Agreement]NextBillDate-[Agreement]LastBillDate
$N:=[Agreement]MthsAdv
$Credit:=$N*[Unit]RentedValue*($X/$Y)

QUERY([Unit];[Unit]RUnitNo=Substring(WS_Cust_Code;1;5)+WS_UnitIDTo;*)
QUERY([Unit]; & ;[Unit]Vacant=True)
If (Records in selection([Unit])#0)
QUERY([UnitType];[UnitType]RUnitType=[Unit]UnitTypeCode)
$X:=[Agreement]NextBillDate-WS_Start_Date
$Y:=[Agreement]NextBillDate-[Agreement]LastBillDate
$N:=[Agreement]MthsAdv
$Charge:=$N*[UnitType]MonthlyRate*($X/$Y)

INSERT IN ARRAY(WS_InternalUnitID;Size of array(WS_InternalUnitID)+1)
INSERT IN ARRAY(WS_ExternalUnitID;Size of array(WS_ExternalUnitID)+1)
INSERT IN ARRAY(WS_ItemDescription;Size of array(WS_ItemDescription)+1)
INSERT IN ARRAY(WS_ItemAmount;Size of array(WS_ItemAmount)+1)
INSERT IN ARRAY(WS_ItemTaxAmountt;Size of array(WS_ItemTaxAmountt)+1)
INSERT IN ARRAY(WS_StartDateStr;Size of array(WS_StartDateStr)+1)
INSERT IN ARRAY(WS_EndDateStr;Size of array(WS_EndDateStr)+1)
WS_InternalUnitID{1}:=[Unit]UnitNo
WS_ExternalUnitID{1}:=[Unit]UnitNo
WS_ItemDescription{1}:="Transefer Cost"
WS_ItemAmount{1}:=Round($Charge-$Credit;2)
WS_ItemTaxAmountt{1}:=0
WS_StartDateStr{1}:=String(WS_Start_Date)
WS_EndDateStr{1}:="00/00/00"
Else 
WS_RET_CODE:=False
WS_ERROR:="Unit TO Not Found"
End if 
Else 
WS_RET_CODE:=False
WS_ERROR:="Unit FROM Not Found"
End if 
Else 
WS_RET_CODE:=False
WS_ERROR:="Agreement Not Found"
End if 

$String:="End WS_Insomniac_GetTranserCost"+Char(13)
$String:=$String+"WS_RET_CODE: "+String(WS_RET_CODE)+Char(13)
$sizeofarray:=Size of array(WS_InternalUnitID)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_InternalUnitID("+String($vlElem)+"):"+WS_InternalUnitID{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_ExternalUnitID)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_ExternalUnitID("+String($vlElem)+"):"+WS_ExternalUnitID{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_ItemDescription)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_ItemDescription("+String($vlElem)+"):"+WS_ItemDescription{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_ItemAmount)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_ItemAmount("+String($vlElem)+"):"+String(WS_ItemAmount{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_ItemTaxAmountt)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_ItemTaxAmountt("+String($vlElem)+"):"+String(WS_ItemTaxAmountt{$vlElem})+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_StartDateStr)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_StartDateStr("+String($vlElem)+"):"+WS_StartDateStr{$vlElem}+Char(13)
End for 
$vlElem:=1
$sizeofarray:=Size of array(WS_EndDateStr)
For ($vlElem;1;$sizeofarray)
$String:=$String+"WS_EndDateStr("+String($vlElem)+"):"+WS_EndDateStr{$vlElem}+Char(13)
End for 
$String:=$String+"WS_ERROR: "+WS_ERROR+Char(13)

WSRECORDLOG ($String)
//%attributes = {"publishedSoap":true,"publishedWsdl":true,"lang":"en"} comment added and reserved by 4D.

// ----------------------------------------------------
// User name (OS): 
// Date and time: 00/00/00, 00:00:00 (old)
// API Version: 1.0
// ----------------------------------------------------
// Method: WS_CreateReservation1
// Description
// 
//
// Parameters
// ----------------------------------------------------


SOAP DECLARATION(WS_ORFacilityCode;Is string var;SOAP input)
SOAP DECLARATION(WS_ORCustomerName;Is string var;SOAP input)
SOAP DECLARATION(WS_ORCustomerEmail;Is string var;SOAP input)
SOAP DECLARATION(WS_ORCustomerEmailSend;Is Boolean;SOAP input)
SOAP DECLARATION(WS_ORFacilityEmailSend;Is Boolean;SOAP input)
SOAP DECLARATION(WS_ORCustomerPhone;Is string var;SOAP input)
SOAP DECLARATION(WS_ORUnitTypeCode;Is string var;SOAP input)
//WS_DATECHANGE=SOAP DECLARATION(WS_ORDateUnitRequired;Is String Var;SOAP Input)
SOAP DECLARATION(WS_ReservedDate;Is date;SOAP input)
SOAP DECLARATION(WS_ORUnitRateSelected;Is string var;SOAP input)
SOAP DECLARATION(WS_Username;Is string var;SOAP input)
SOAP DECLARATION(WS_CustPass;Is string var;SOAP input)
SOAP DECLARATION(WS_ORUnitSelect;Is text;SOAP input)
SOAP DECLARATION(WS_OREnquiryNo;Is string var;SOAP input)
SOAP DECLARATION(WS_CTCustType;Is text;SOAP input)
SOAP DECLARATION(WS_CallTakenBy;Is text;SOAP input)
SOAP DECLARATION(WS_CTStoredBefore;Is integer;SOAP input)
SOAP DECLARATION(WS_MarketSrce;Is string var;SOAP input)
SOAP DECLARATION(WS_CustomRate;Is real;SOAP input)
SOAP DECLARATION(WS_CustomRateSet;Is Boolean;SOAP input)
SOAP DECLARATION(WS_WebServicePassword;Is text;SOAP input)

SOAP DECLARATION(WS_CustomerID;Is string var;SOAP output;"WS_CustomerID")
SOAP DECLARATION(WS_ReservationID;Is string var;SOAP output)

SOAP DECLARATION(WS_ORSuccess;Is Boolean;SOAP output)
SOAP DECLARATION(WS_ORErrorCode;Is integer;SOAP output)
SOAP DECLARATION(WS_ORErrorDescription;Is string var;SOAP output)

$String:="Start WS_CreateReservation1"+Char(13)
$String:=$String+"WS_ORFacilityCode: "+WS_ORFacilityCode+Char(13)
$String:=$String+"WS_ORCustomerName: "+WS_ORCustomerName+Char(13)
$String:=$String+"WS_ORCustomerEmail: "+WS_ORCustomerEmail+Char(13)
$String:=$String+"WS_ORCustomerEmailSend: "+String(WS_ORCustomerEmailSend)+Char(13)
$String:=$String+"WS_ORFacilityEmailSend: "+String(WS_ORFacilityEmailSend)+Char(13)
$String:=$String+"WS_ORCustomerPhone: "+WS_ORCustomerPhone+Char(13)
$String:=$String+"WS_ORUnitTypeCode: "+WS_ORUnitTypeCode+Char(13)
$String:=$String+"WS_ReservedDate: "+String(WS_ReservedDate)+Char(13)
$String:=$String+"WS_ORUnitRateSelected: "+WS_ORUnitRateSelected+Char(13)
$String:=$String+"WS_Username: "+WS_Username+Char(13)
$String:=$String+"WS_CustPass: "+WS_CustPass+Char(13)
$String:=$String+"WS_ORUnitSelect: "+WS_ORUnitSelect+Char(13)
$String:=$String+"WS_OREnquiryNo: "+WS_OREnquiryNo+Char(13)
C_TEXT($pass)
$pass:=WS_WebServicePassword
$pass:=Replace string($pass;Substring($pass;1;Length($pass)-2);"X"*(Length($pass)-2))
$String:=$String+"WS_WebServicePassword: "+$pass+Char(13)
$String:=$String+"WS_CTCustType: "+WS_CTCustType+Char(13)
$String:=$String+"WS_CallTakenBy: "+WS_CallTakenBy+Char(13)
$String:=$String+"WS_CTStoredBefore: "+String(WS_CTStoredBefore)+Char(13)
$String:=$String+"WS_MarketSrce: "+WS_MarketSrce+Char(13)
$String:=$String+"WS_CustomRate: "+String(WS_CustomRate)+Char(13)
$String:=$String+"WS_CustomRateSet: "+String(WS_CustomRateSet)+Char(13)
WSRecordLog ($String)


READ WRITE([Reservation])
READ WRITE([Contacts])
READ WRITE([Agreement])
READ WRITE([OtherChgs])
READ WRITE([Customer])
READ WRITE([Trxs])
READ WRITE([Authenticate])
READ WRITE([Unit])
READ WRITE([BillPlan])

C_TEXT($CurrencySymbol)

ALL RECORDS([Facility])
ORDER BY([Facility];[Facility]SortOrder;>)
<>sProduct:=[Facility]ProductCode
ARRAY TEXT(<>asSiteCodes;Records in selection([Facility]))
SELECTION TO ARRAY([Facility]FacilityCode;<>asSiteCodes)
ALL RECORDS([Facility])
ORDER BY([Facility];[Facility]SortOrder;>)
//<>sFacility:=WS_ORFacilityCode

If (False)

//PLATFORM PROPERTIES(<>iPlatform;$i)
//<>tClient:=False
//If (Application type>3)
//<>tClient:=True
//End if 
//
//If (<>iPlatform=3)
//<>sSeparator:="\\"  //Windows
//Else 
//<>sSeparator:=":"  //Macintosh
//End if 
//
//If (<>tClient) & (Application type=4D Remote Mode)
//<>sStormanPath:=Get 4D folder(4D Client Database Folder)  //?sStormanPath:=Get 4D folder(3)+Structure file+?sSeparator
//Else 
//If (<>iPlatform=2) & (Application type=4D Volume Desktop)  //OS X Engine
//<>sTutPath:=Application file
//Else 
//<>sTutPath:=Structure file
//End if 
//$i:=Length(<>sTutPath)
//While ($i>2) & (Substring(<>sTutPath;$i;1)#<>sSeparator)
//$i:=$i-1
//End while 
//<>sStormanPath:=Substring(<>sTutPath;1;$i)
//End if 
//<>sBackupPath:=<>sStormanPath+"Backups"
//<>sResourcesPath:=Get 4D folder(Current Resources folder)
//<>sAttachPath:=<>sResourcesPath+"Attachments"+<>sSeparator
//<>sPreferencesPath:=<>sStormanPath+"Preferences"+<>sSeparator
//<>sTutPath:=<>sResourcesPath+"Tutorial"+<>sSeparator
End if 

$CurrencySymbol:=GetTextNo ([Facility]CurrencyFormat;1;";")

//Clear Variables before running method.
WS_ORSuccess:=True
WS_ORErrorCode:=0
WS_ORErrorDescription:=""

ARRAY TEXT(Attachments;0)

$Existing:=False

If (WS_Username>"")
$Existing:=True
QUERY([Customer];[Customer]CustomerCode=WS_Username)
If (Records in selection([Customer])#1)
WS_ORSuccess:=False
WS_ORErrorCode:=1012
WS_ORErrorDescription:="Customer record not found in database Storman."
Else 

If (WS_CustPass#"")
[Customer]Password:=WS_CustPass
SAVE RECORD([Customer])
End if 

End if 
End if 

$Index:=Find in field([Facility]FacilityCode;WS_ORFacilityCode)//Find the Facility Record
If ($Index#-1)
GOTO RECORD([Facility];$Index)
Else //Facility Record Not Found
WS_ORSuccess:=False
WS_ORErrorCode:=1001
WS_ORErrorDescription:="Facility record not found in database Storman."
End if 

If (WS_ORSuccess=True)
If (WS_WebServicePassword=[Facility]ODBCPassword) & ([Facility]ODBCPassword#"")
Else 
WS_ORSuccess:=False
WS_ORErrorCode:=1099
WS_ORErrorDescription:="Web Service Password is incorrect."
End if 
End if 


If (WS_ORSuccess=True)//Check the Date Required Date
//WS_ReservedDate:=Substring(WS_ReservedDate;9;2)+"/"+Substring(WS_ReservedDate;6;2)+"/"+Substring(WS_ReservedDate;1;4)
If (WS_ReservedDate<Current date)
WS_ORSuccess:=False
WS_ORErrorCode:=1027
WS_ORErrorDescription:="Invalid Reservation date."
End if 
End if 


If (WS_ORSuccess=True) & (WS_ORCustomerEmailSend=True)//Check the Customer Email Address
If (Length(WS_ORCustomerEmail)<1)
WS_ORErrorCode:=1002
WS_ORErrorDescription:="Invalid Customer email address."
End if 
End if 

If (WS_ORSuccess=True) & (WS_ORFacilityEmailSend=True)//Check the Facility Email Address
If (Length([Facility]OResFacNotifEmail)<1)
WS_ORErrorCode:=1028
WS_ORErrorDescription:="Reservation email address not defined in database Storman."
End if 
End if 

If (WS_ORSuccess=True) & (Length(WS_ORCustomerName)<1)//Check the Customer Name
WS_ORSuccess:=False//checkme
WS_ORErrorCode:=1003
WS_ORErrorDescription:="Invalid Customer name."
End if 

If (WS_ORSuccess=True) & ($Existing=False)//Create the Customer
ORName:=WS_ORCustomerName
ORName:=RemoveSpecial (ORName)
If (ORName#"")
CREATE RECORD([Customer])
$i:=0
$Base:=Substring(Uppercase(Replace string(Replace string(ORName;" ";"");",";""));1;6)
Repeat 
$j:=5-Length(String($i;"#####"))
$Code:=[Facility]FacilityCode+Substring($Base;1;$j)+String($i;"#####")
$i:=$i+1
Until (Find in field([Customer]CustomerCode;$Code)<0)
[Customer]CustomerCode:=$Code
[Customer]CustomerName:=WS_ORCustomerName
[Customer]EmailAddress:=WS_ORCustomerEmail
[Customer]PhonePrivate:=WS_ORCustomerPhone
[Customer]MarketSrce:="Web"
If (WS_MarketSrce#"")
[Customer]MarketSrce:=WS_MarketSrce
End if 
[Customer]Password:=WS_CustPass
$i:=Position(",";[Customer]CustomerName)
If ($i>0) & ([Facility]AutoFirstName>1)
[Customer]FirstName:=Reverse ([Customer]CustomerName;[Facility]AutoFirstName)
End if 
[Customer]GateTimeZone:=[Facility]GateTimeZoneDefault
SAVE RECORD([Customer])
Else 
WS_ORSuccess:=False
WS_ORErrorCode:=1004
WS_ORErrorDescription:="Customer name contains invalid characters."
End if 
End if 
READ WRITE([Contacts])
If (WS_ORSuccess=True)
If (WS_OREnquiryNo#"")
QUERY([Contacts];[Contacts]ContactNo=WS_OREnquiryNo)
If (Records in selection([Contacts])=1)
//22-12-16 DAM moved 4 lines below to 615
//[Contacts]Outcome:="Reserved"
//[Contacts]OutComeDate:=Current date
//[Contacts]FollowUpDate:=!00-00-00!
//[Contacts]FollowUpDone:=True

//15/07/13 DAM Added to set the cust type for customer record to be the same as for contact, WS_CTCustType - has higher priority
[Customer]CustType:=[Contacts]CustType
If (WS_CTCustType#"")
[Customer]CustType:=WS_CTCustType
End if 
If (WS_CTStoredBefore#0)
[Contacts]StoredBefore:=WS_CTStoredBefore
End if 
If (WS_MarketSrce#"")
[Customer]MarketSrce:=WS_MarketSrce
End if 
SAVE RECORD([Customer])
SAVE RECORD([Contacts])
End if 
Else 
If ([Facility]SaleInqRequest=True)//Create a Contact
CREATE RECORD([Contacts])
If ([Contacts]ContactNo="")//Pick up the next Sales Enquiry number available
If (<>sProduct="MV")
vOldContact:=500001
Else 
vOldContact:=[Facility]NextContactNo
End if 
$Continue:=False
If (Not(Semaphore("<>bNextSalesInqNo";1800)))
$Continue:=True
End if 
If ($Continue)
//If (Application type=4D Remote Mode)
GET PROCESS VARIABLE(-1;<>aiNextSalesInqNo;<>aiNextSalesInqNo)
//End if 
$arraypos:=Find in array(<>asSiteCodes;[Facility]FacilityCode)
Repeat 
If (<>aiNextSalesInqNo{$arraypos}>vOldContact)
//If (<>sProduct#"MV")
//ConfirmTwo (Get localized string("It appears the next sales inquiry number of")+" "+String(vOldContact;"0000000000")+" "+Get localized string("is already in use. Do you wish to use the next number?");Get localized string("Yes");Get localized string("No"))
//Else 
//OK:=1
//End if 
//If (OK=1)
[Contacts]ContactNo:=[Facility]FacilityCode+String(<>aiNextSalesInqNo{$arraypos};"0000000000")
vOldContact:=vOldContact+1
If (<>sProduct#"MV")
[Facility]NextContactNo:=<>aiNextSalesInqNo{$arraypos}+1
<>aiNextSalesInqNo{$arraypos}:=<>aiNextSalesInqNo{$arraypos}+1
Else 
<>aiNextSalesInqNo{$arraypos}:=<>aiNextSalesInqNo{$arraypos}+1
End if 
//Else 
//[Contacts]ContactNo:=[Facility]FacilityCode+String(vOldContact;"0000000000")
//vOldContact:=vOldContact+1
//If (<>sProduct#"MV")
//[Facility]NextContactNo:=[Facility]NextContactNo+1
//<>aiNextSalesInqNo{$arraypos}:=vOldContact
//End if 
//End if 
Else 
[Contacts]ContactNo:=[Facility]FacilityCode+String(vOldContact;"0000000000")
vOldContact:=vOldContact+1
If (<>sProduct#"MV")
[Facility]NextContactNo:=[Facility]NextContactNo+1
End if 
<>aiNextSalesInqNo{$arraypos}:=vOldContact
End if 
$Key:=[Contacts]ContactNo
$i:=Find in field([Contacts]ContactNo;$Key)
Until ($i<=0)
SAVE RECORD([Facility])
READ ONLY([Facility])
LOAD RECORD([Facility])
//If (Application type=4D Remote Mode)
VARIABLE TO VARIABLE(-1;<>aiNextSalesInqNo;<>aiNextSalesInqNo)
//End if 
CLEAR SEMAPHORE("<>bNextSalesInqNo")
Else 
Repeat 
[Contacts]ContactNo:=[Facility]FacilityCode+String(vOldContact;"0000000000")
vOldContact:=vOldContact+1
If (<>sProduct#"MV")
[Facility]NextContactNo:=[Facility]NextContactNo+1
End if 
$Key:=[Contacts]ContactNo
$i:=Find in field([Contacts]ContactNo;$Key)
Until ($i<=0)
SAVE RECORD([Facility])
READ ONLY([Facility])
LOAD RECORD([Facility])
End if 
End if 

//Fills out the Sales Enquiry
[Contacts]Facility:=[Facility]FacilityCode
[Contacts]ContactName:=[Customer]CustomerName
[Contacts]Firstname:=[Customer]FirstName
[Contacts]EmailAddress:=[Customer]EmailAddress
[Contacts]CustType:=WS_CTCustType
[Contacts]Outcome:="Reserved"
[Contacts]OutComeDate:=Current date
[Contacts]CallDate:=Current date
[Contacts]ContactPhone:=[Customer]PhonePrivate
[Contacts]MarketSrce:="Web"
[Contacts]FollowUpDate:=!00-00-00!
[Contacts]FollowUpDone:=True
If (WS_MarketSrce#"")
[Contacts]MarketSrce:=WS_MarketSrce
[Customer]MarketSrce:=WS_MarketSrce
End if 
[Contacts]CallTakenBy:="Web"
QUERY([UnitType];[UnitType]RUnitType=WS_ORUnitTypeCode)
[Contacts]SizeQuoted:=[UnitType]Description
//15/07/13 DAM Added to set the cust type for customer record to be the same as for contact, WS_CTCustType - has higher priority
[Customer]CustType:=[Contacts]CustType
If (WS_CallTakenBy#"")
[Contacts]CallTakenBy:=WS_CallTakenBy
End if 
If (WS_CTCustType#"")
[Customer]CustType:=WS_CTCustType
[Contacts]CustType:=WS_CTCustType
End if 
If (WS_CTStoredBefore#0)
[Contacts]StoredBefore:=WS_CTStoredBefore
End if 
SAVE RECORD([Customer])
SAVE RECORD([Contacts])
End if 
End if 
End if 


If (WS_ORSuccess=True)//Create Reservation
$Create:=True

If (Length(WS_ORUnitTypeCode)>=6)
QUERY([UnitType];[UnitType]RUnitType=WS_ORUnitTypeCode)
If (Records in selection([UnitType])>0)
RELATE MANY([UnitType]RUnitType)
QUERY SELECTION([Unit];[Unit]Vacant=True;*)
//13/04/15 DAM Added for KSS to include units ToClean
If ([Facility]FacilityCode="KE@")
QUERY SELECTION([Unit]; & ;[Unit]Status=<>asUnitStatus{2};*)//Vacant
QUERY SELECTION([Unit]; | ;[Unit]Status=<>asUnitStatus{6})//ToClean
Else 
QUERY SELECTION([Unit]; & ;[Unit]Status=<>asUnitStatus{2})//SDD Previous search included units ToClean
End if 
//add something here to mention there are no vacants to be rented? Johnno SK

ORDER BY([Unit];[Unit]UnitNo;>)
QUERY([Analysis];[Analysis]Code=[Facility]FacilityCode+"@";*)
QUERY([Analysis]; & ;[Analysis]SortOrder=2)

//Old 
If (WS_ORUnitSelect>"")
QUERY SELECTION([Unit];[Unit]RUnitNo=WS_ORUnitSelect)
While ((Locked([Unit])=True) | (Read only state([Unit])=True)) & (End selection([Unit])=False)
NEXT RECORD([Unit])
End while 
Else 
FIRST RECORD([Unit])
While ((Locked([Unit])=True) | (Read only state([Unit])=True)) & (End selection([Unit])=False)
NEXT RECORD([Unit])
End while 
End if 


//If (WS_ORUnitSelect>"")
//QUERY SELECTION([Unit];[Unit]RUnitNo=WS_ORUnitSelect)
//While ((Locked([Unit])=True) | (Read only state([Unit])=True))  //& (End selection([Unit])=False) //Doesn't need "end of selection" should be only one record selected
//NEXT RECORD([Unit])
//End while 
//Else 
//FIRST RECORD([Unit])
//If (Records in selection([Unit])=1) & ([Unit]UnitNo#"") & (Locked([Unit])=False) & (Read only state([Unit])=False)
//  //Continue
//  //Do not need to do anything
//Else 
//While ((Locked([Unit])=True) | (Read only state([Unit])=True))  //& (End selection([Unit])=False)
//NEXT RECORD([Unit])
//End while 
//End if 
//End if 

WSRecordLog ("Unit Locked: "+String(Locked([Unit]))+" Read only State: "+String(Read only state([Unit]))+" End Selection: "+String(End selection([Unit])))

If (End selection([Unit])=False)//New ([Unit]UnitNo#"") 
//ORes.xml
If (OR_ReadOResXML ="True")//Does the XML file exist?
$vtCreatechargeTransaction:=OR_ReadOResXML ("ChargeTransaction";"Create")//Find out what the deposit value for this Facility Code is
If ($vtCreatechargeTransaction="")//If value not found then default to True - Create Charge Transaction
$vtCreatechargeTransaction:="TRUE"
End if 
$vtDepositAmt:=OR_ReadOResXML ("deposit";[Facility]FacilityCode)//Find out what the deposit value for this Facility Code is
If ($vtDepositAmt="")//If a Deposit value is found from the XML file, apply it to the array
$vtDepositAmt:="0"
End if 
Else 
$vtCreatechargeTransaction:="TRUE"
$vtDepositAmt:="0"
End if 

CREATE RECORD([Reservation])
[Reservation]ActiveReserve:=True
[Reservation]CustomerCode:=[Customer]CustomerCode
[Reservation]DateDepPaid:=!00-00-00!
[Reservation]DepositAmt:=[UnitType]DepositAmt+[Analysis]DfltSellAmt
If ($vtCreatechargeTransaction#"TRUE") | ([Facility]AgreeOnlyDeposit=True)
[Reservation]DepositAmt:=0
End if 
[Reservation]ExpMoveIn:=WS_ReservedDate
[Reservation]ReservedDate:=Current date
[Reservation]ReservedTime:=Current time
[Reservation]Balance:=[Reservation]DepositAmt

If ($vtDepositAmt#"0")
[Reservation]Balance:=Num($vtDepositAmt)
End if 

[Reservation]UserLogin:="Web"
[Reservation]CallTakenBy:="Web"
[Reservation]ContactNo:=[Contacts]ContactNo
//15/07/13 DAM Added for KSS mobile
If (WS_CallTakenBy#"")
[Reservation]CallTakenBy:=WS_CallTakenBy
[Reservation]UserLogin:=WS_CallTakenBy
End if 
[Reservation]UnitsReserved:=[Unit]UnitNo
[Reservation]OutcomeDate:=!00-00-00!
[Reservation]OnlineRes:=True
If (WS_ORUnitRateSelected="W")
[Reservation]Weekly:=True
Else 
[Reservation]Weekly:=False
End if 
If ([Reservation]ReserveNo="")
$vliNextReserveNo:=[Facility]NextReserveNo
$Continue:=False
If (Not(Semaphore("<>bNextResNo";1800)))
$Continue:=True
End if 
If ($Continue)
//If (Application type=4D Remote Mode)
GET PROCESS VARIABLE(-1;<>aiNextResNo;<>aiNextResNo)
//End if 
$arraypos:=Find in array(<>asSiteCodes;[Facility]FacilityCode)

Repeat 

//If (<>aiNextResNo{$arraypos}>[Facility]NextReserveNo)
//ConfirmTwo (Get localized string("It appears the next reservation number of")+" "+String([Facility]NextReserveNo;"00000000")+" "+Get localized string("is already in use. Do you wish to use the next number?");Get localized string("Yes");Get localized string("No"))
//If (OK=1)
[Reservation]ReserveNo:=String(<>aiNextResNo{$arraypos};"00000000")
[Facility]NextReserveNo:=<>aiNextResNo{$arraypos}+1
//Else 
//[Reservation]ReserveNo:=String([Facility]NextReserveNo;"00000000")
//[Facility]NextReserveNo:=[Facility]NextReserveNo+1
//End if 
//Else 
//[Reservation]ReserveNo:=String([Facility]NextReserveNo;"00000000")
//[Facility]NextReserveNo:=[Facility]NextReserveNo+1
//End if 
<>aiNextResNo{$arraypos}:=[Facility]NextReserveNo
$Key:=[Facility]FacilityCode+[Reservation]ReserveNo
$i:=Find in field([Reservation]RReserveNo;$Key)

Until ($i<0)
//If (Application type=4D Remote Mode)
VARIABLE TO VARIABLE(-1;<>aiNextResNo;<>aiNextResNo)
//End if 
CLEAR SEMAPHORE("<>bNextResNo")
Else 
Repeat 

[Reservation]ReserveNo:=String([Facility]NextReserveNo;"00000000")
[Facility]NextReserveNo:=[Facility]NextReserveNo+1

$Key:=[Facility]FacilityCode+[Reservation]ReserveNo
$i:=Find in field([Reservation]RReserveNo;$Key)

Until ($i<0)
End if 
[Reservation]RReserveNo:=$Key
[Reservation]TaxExempt:=[Facility]TaxFreeDefault
SAVE RECORD([Reservation])
End if 

If (WS_ORUnitRateSelected="W")
[Unit]QuotedRate:=[UnitType]OnlineWeeklyRate
Else 
[Unit]QuotedRate:=[UnitType]OnlineMonthlyRate
End if 

If (WS_CustomRateSet)
[Unit]QuotedRate:=WS_CustomRate
End if 

//Modify Unit Table values as appropriate
[Unit]ReservedTo:=[Reservation]RReserveNo
[Unit]ReserveDeposit:=[UnitType]DepositAmt
If ($vtCreatechargeTransaction#"TRUE") | ([Facility]AgreeOnlyDeposit=True)
[Unit]ReserveDeposit:=0
End if 
[Unit]ReservedDate:=Current date
[Unit]LastStatusDate:=Current date
If ([Unit]Vacant=True)
[Unit]Status:="Reserved"
End if 
SAVE RECORD([Unit])

If ($vtCreatechargeTransaction="TRUE")
CREATE RECORD([Trxs])
[Trxs]AgreeNo:=[Reservation]RReserveNo
[Trxs]CustomerCode:=[Customer]CustomerCode
[Trxs]TrxDate:=Current date
[Trxs]Charge:=True
[Trxs]Balance:=[Reservation]DepositAmt
[Trxs]UnitNo:=[Unit]UnitNo
[Trxs]Qty:=1
[Trxs]DateFrom:=[Reservation]ExpMoveIn
[Trxs]TrxTime:=Current time
[Trxs]UserLogin:="Web"
[Trxs]AnalysisCode:=[Facility]FacilityCode+"DP"
[Trxs]Description:=[Analysis]Description+" Unit "+[Unit]UnitNo
[Trxs]TotAmt:=[Reservation]DepositAmt//RoundAmt ([UnitType]DepositAmt)
[Trxs]TaxAmt:=CalcTaxAmt ([Trxs]TotAmt)
[Trxs]Confirmed:=False
If ([Trxs]TotAmt#0)
SAVE RECORD([Trxs])
End if 
End if 


If (WS_ORFacilityEmailSend=True)
If ([Facility]OResFacNotifEmail#"")
$MessageBody:="A new Online Reservation has been created:"+Char(Carriage return)+Char(Carriage return)
$MessageBody:=$MessageBody+"Reservation Number: "+[Facility]FacilityCode+[Reservation]ReserveNo+Char(Carriage return)
$MessageBody:=$MessageBody+"Date: "+String(Current date;5)+Char(Carriage return)
$MessageBody:=$MessageBody+"Time: "+String(Current time)+Char(Carriage return)+Char(Carriage return)
$MessageBody:=$MessageBody+"Customer Name: "+WS_ORCustomerName+Char(Carriage return)
$MessageBody:=$MessageBody+"Email Address: "+WS_ORCustomerEmail+Char(Carriage return)
$MessageBody:=$MessageBody+"Phone Number: "+WS_ORCustomerPhone+Char(Carriage return)+Char(Carriage return)
$MessageBody:=$MessageBody+"Facility: "+[Facility]FacilityName+Char(Carriage return)
$MessageBody:=$MessageBody+"Description: "+[UnitType]Description+Char(Carriage return)
$MessageBody:=$MessageBody+"Reservation Deposit Cost: "+$CurrencySymbol+String([UnitType]DepositAmt+[Analysis]DfltSellAmt;"#####0.00")+Char(Carriage return)
$MessageBody:=$MessageBody+"Date Required: "+String(WS_ReservedDate)+Char(Carriage return)
If ([Reservation]Weekly=True)
$WeeklyMonthly:="Weekly"
Else 
$WeeklyMonthly:="Monthly"
End if 
$MessageBody:=$MessageBody+"Weekly / Monthly: "+$WeeklyMonthly+Char(Carriage return)
$OK:=OR_NewMailMessage ("";[Facility]OResFacNotifEmail;"";"";[Facility]BusinessName+AddDelimitedTextIfNotBlank ([Facility]FacilityName;",";" ")+" - New Online Reservation";$MessageBody;False;->Attachments;"";"";"";"";"";"";"")//Notification Email to Facility
If ($OK=False)
WS_ORErrorCode:=1009
WS_ORErrorDescription:="Facility notification email failed."
End if 
End if 
End if 


If (WS_ORCustomerEmailSend=True)
If ([Facility]EmailAddress#"")
vtDepositAmt:=String([UnitType]DepositAmt+[Analysis]DfltSellAmt)
vtDateUnitRequired:=String(WS_ReservedDate)
$OK:=OR_EmailCust //("";"";"";"";"";"";False;->Attachments;"";"";"";"";"";"";"")  `Notification Email to Customer - details of email are filled in from 'OR_EmailNotice' method 
If ($OK=False)
WS_ORErrorCode:=1010
WS_ORErrorDescription:="Customer notificaion email failed"
End if 
End if 
End if 

//22-12-16 DM moved code from above here
[Contacts]Outcome:="Reserved"
[Contacts]OutComeDate:=Current date
[Contacts]FollowUpDate:=!00-00-00!
[Contacts]FollowUpDone:=True
SAVE RECORD([Contacts])

Else 

WS_ORErrorCode:=1007
WS_ORErrorDescription:="Unit record not found in database Storman. Or there are no Units available."
[Contacts]FollowUpDate:=Current date+1
[Contacts]FollowUpDone:=False
[Contacts]Outcome:=""
[Contacts]OutComeDate:=!00-00-00!
SAVE RECORD([Contacts])
End if 
Else 
WS_ORSuccess:=False
WS_ORErrorCode:=1006
WS_ORErrorDescription:="Unit Type record not found in database Storman."
End if 
Else 
WS_ORSuccess:=False
WS_ORErrorCode:=1005
WS_ORErrorDescription:="Requested Unit Type Code is invalid."
End if 
End if 


If (WS_ORSuccess=True)
WS_CustomerID:=[Customer]CustomerCode
WS_ReservationID:=[Reservation]ReserveNo
VALIDATE TRANSACTION
Else 
WS_CustomerID:="Invalid"
CANCEL TRANSACTION
End if 


//11/07/13 DAM added to release Contact record after creating a reservation
READ ONLY([Contacts])
UNLOAD RECORD([Contacts])
READ ONLY([Reservation])
UNLOAD RECORD([Reservation])
READ ONLY([Customer])
UNLOAD RECORD([Customer])

$String:="End WS_CreateReservation1"+Char(13)
$String:=$String+"WS_CustomerID: "+WS_CustomerID+Char(13)
$String:=$String+"WS_ReservationID: "+WS_ReservationID+Char(13)
$String:=$String+"WS_ORSuccess: "+String(WS_ORSuccess)+Char(13)
$String:=$String+"WS_ORErrorCode: "+String(WS_ORErrorCode)+Char(13)
$String:=$String+"WS_ORErrorDescription: "+WS_ORErrorDescription+Char(13)
WSRecordLog ($String)


ReadOnlyAll 
UnloadAll 

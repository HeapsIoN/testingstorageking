//%attributes = {"lang":"en"} comment added and reserved by 4D.

// ----------------------------------------------------
// User name (OS): robert.richardson
// Date and time: 18/03/10, 17:06:23
// ----------------------------------------------------
// Method: CloneModuleDefault
// Description
// Sets the variables to store the selected facility to compare against for the Settings Module
//
// Parameters
//$1 is True if not being called from CloneModule
// ----------------------------------------------------

//System Setup
C_BOOLEAN($1)
vFacilityCode:=[Facility]FacilityCode
vFacilityName:=[Facility]FacilityName
vAgreemtSortDefault:=[Facility]AgreemtSortDefault
vCreditSort:=[Facility]CreditSort
vAutoFirstName:=[Facility]AutoFirstName
vShowHistoryDefault:=[Facility]ShowHistoryDefault
vThreatLevelAlert:=[Facility]ThreatLevelAlert
vPhoneFormat:=[Facility]PhoneFormat
vTransWebURL:=[Facility]TransWebURL
vAcctgSystem:=[Facility]AcctgSystem
vUseCashBook:=[Facility]UseCashBook
vCashBookStart:=[Facility]CashBookStart
vCashAccrual:=[Facility]CashAccrual
vStockSysStart:=[Facility]StockSysStart
vYearStartDate:=[Facility]YearStartDate
vRefundOther:=[Facility]RefundOtherRegChgs
vDisableTender:=[Facility]DisableTender
vRequireZeroBal:=[Facility]RequireZeroBal
vBillonFirst:=[Facility]BillonFirst
vRentWeeklyMthly:=[Facility]RentWeeklyMthly
vInsWeeklyMthly:=[Facility]InsWeeklyMthly
vCurrencyFormat:=[Facility]CurrencyFormat
vRoundDefault:=[Facility]RoundDefault
vAllowTaxExempt:=[Facility]AllowTaxExempt
vTaxAddtoAmt:=[Facility]TaxAddtoAmt
vTaxFromDate:=[Facility]TaxFromDate
vTaxRate:=[Facility]TaxRate
vTaxNewRate:=[Facility]TaxNewRate
vLCPartPayReset:=[Facility]LCPartPayReset
vMinBalArrears:=[Facility]MinBalArrears
vMaximumWaived:=[Facility]MaximumWaived
vWaivedMonthReset:=[Facility]WaivedMonthReset
vUnlimitedWaived:=[Facility]UnlimitedWaived
vDelinquentSystem:=[Facility]DelinquentSystem
vDelinquentSystemPrompt:=[Facility]DelinquentSystemPrompt
vInsuranceAgent:=[Facility]InsuranceAgent
vInsuranceAgentType:=[Facility]InsuranceAgentType
vRefundInsurance:=[Facility]RefundInsurance
vAgedDebtorBreaks:=[Facility]AgedDebtorBreaks
vRentAdvFlag:=[Facility]RentAdvFlag
vPrepaidAnalysisCat:=[Facility]PrepaidAnalysisCat
vUnitNoRpts:=[Facility]UnitNoRpts
vShowRecKeyStats:=[Facility]ShowRecKeyStats
vKeyStatsCustom:=[Facility]KeyStatsCustom
vAutoPayShow:=[Facility]AutoPayShow
vCalcOccupValOption:=[Facility]CalcOccupValOption
vRefundPolicy:=[Facility]RefundPolicy
vNoticeDaysReqd:=[Facility]NoticeDaysReqd
vMaxRefund:=[Facility]MaxRefund
vRefndWklyMths:=[Facility]RefndWklyMths
vBatchRefunds:=[Facility]BatchRefunds
vStaffPinsHOF:=[Facility]StaffPinsHOF
vComplexPassword:=[Facility]ComplexPassword
vPasswordLength:=[Facility]PasswordLength
vMinDaysPassword:=[Facility]MinDaysPassword
vMaxDaysPassword:=[Facility]MaxDaysPassword
vLoginStartup:=[Facility]LoginStartup
vAutoLogoutTime:=[Facility]AutoLogoutTime
vAutoLogoutOnInactivity:=[Facility]AutoLogoutOnInactivity
vUsePDFWriter:=[Facility]UsePDFWriter
vPDFName:=[Facility]PDFName
vNoSplash:=[Facility]NoSplash
vHideGraphics:=[Facility]HideGraphics
vHideKeyRent:=[Facility]HideKeyRent
vPhotoCompression:=[Facility]PhotoCompression
vSaleInqRequest:=[Facility]SaleInqRequest
vDisableCSTabs:=[Facility]DisableCSTabs
vVacantToClean:=[Facility]VacantToClean
vVTCDays:=[Facility]VTCDays
vUnitPerAgreement:=[Facility]UnitPerAgreement
vPrintAfterMoveout:=[Facility]PrintafterMoveOut
vMoveOutUnitStatus:=[Facility]MoveOutUnitStatus
vRemindFollowups:=[Facility]RemindFollowups
vFutureMoveIns:=[Facility]FutureMoveIns
vCustom1:=[Facility]Custom1
vCustom2:=[Facility]Custom2
vCustom3:=[Facility]Custom3
vCustom4:=[Facility]Custom4
vWeekEndDay:=[Facility]WeekEndDay
vCantModPrior:=[Facility]CantModPrior
vAutoUpdateCantMod:=[Facility]AutoUpdateCantMod
vCantModDaysBehind:=[Facility]CantModDaysBehind
vBankRecCantModPrior:=[Facility]BankRecCantModPrior
vPrintListAP:=[Facility]PrintListAP
vPrtMthRptsDP:=[Facility]PrtMthRptsDP
vStopEndLateCycle:=[Facility]StopEndLateCycle
vPrintInvsDP:=[Facility]PrintInvsDP
vPrintOverdues:=[Facility]PrintOverdues
vRentIncreaseAP:=[Facility]RentIncreaseAP
vMarketingTypeTitle:=[Facility]MarketingTypeTitle
vCustomerTypeTitle:=[Facility]CustomerTypeTitle
vBusinessTypeTitle:=[Facility]BusinessTypeTitle
vBatchSettings:=[Facility]BatchSettings
vDailyBatch:=[Facility]DailyBatch
vWeeklyBatch:=[Facility]WeeklyBatch
vMonthlyBatch:=[Facility]MonthlyBatch
vYearlyBatch:=[Facility]YearlyBatch
vDailyBatchOrder:=[Facility]DailyBatchOrder
vWeeklyBatchOrder:=[Facility]WeeklyBatchOrder
vMonthlyBatchOrder:=[Facility]MonthlyBatchOrder
vYearlyBatchOrder:=[Facility]YearlyBatchOrder
vRoundCredit:=[Facility]RoundCredit
vHideGateLockList:=[Facility]HideGateLockList
vShowAdhoc:=[Facility]ShowAdhoc
vWaitingListDelay:=[Facility]WaitingListDelay
vResetLateCyclePaid:=[Facility]ResetLateCyclePaid
vFieldSettings:=[Facility]FieldSettings
vOResCompMarketType:=[Facility]OResCompMarketType
vRoundMethod:=[Facility]RoundMethod
vLogAlertNote:=[Facility]LogAlertNote
vAutoPayIncrease:=[Facility]AutoPayIncrease
vBillWithMoveOut:=[Facility]BillWithMoveOut
vCTPrices:=[Facility]CTPrices
vTaxFreeDefault:=[Facility]TaxFreeDefault
vLateFeeReset:=[Facility]LateFeeReset
vMoveOutDays:=[Facility]MoveOutDays

//Invoice Setup

vCombineNxtDueDays:=[Facility]CombineNxtDueDays
vAPFormDaysPrior:=[Facility]APFormDaysPrior
vInvDateDetail:=[Facility]InvDateDetail
vPaidtoDateonInv:=[Facility]PaidtoDateonInv
vShowBalDueDateInv:=[Facility]ShowBalDueDateInv
vBalDueinDays:=[Facility]BalDueinDays
vBalFwdDateOpt:=[Facility]BalFwdDateOpt
vInvCurrentDate:=[Facility]InvCurrentDate
vPrtDialogInv:=[Facility]PrtDialogInv
vInvUseAgrBalFwd:=[Facility]InvUseAgrBalFwd
vInvAgreeCust:=[Facility]InvAgreeCust
vShowSizeonInv:=[Facility]ShowSizeonInv
vInvShowTotal:=[Facility]InvShowTotal
vHideNxtChgInv:=[Facility]HideNxtChgInv
vChqsPayableOption:=[Facility]ChqsPayableOption
vShowNxtChgsInv:=[Facility]ShowNxtChgsInv
vShowABNInv:=[Facility]ShowABNInv
vInvMessage:=[Facility]InvMessage
vInvDetailsOpt:=[Facility]InvDetailsOpt
vAPFormCustRef:=[Facility]APFormCustRef
vAddressXPos:=[Facility]AddressXPos
vAddressYPos:=[Facility]AddressYPos
vAddressStyle:=[Facility]AddressStyle
vGraphiconInv:=[Facility]GraphiconInv
vHeaderonInv:=[Facility]HeaderonInv
vHeaderEmail:=[Facility]HeaderEmail
vCustomInvFooter:=[Facility]CustomInvFooter
vStandardInvFooter:=[Facility]StandardInvFooter
vAcceptedCrCards:=[Facility]AcceptedCrCards
vUseCustomReceipt:=[Facility]UseCustomReceipt
vReceiptCopies:=[Facility]ReceiptCopies
vStatementLastZeroBal:=[Facility]StatementLastZeroBal
vInvToDate:=[Facility]InvToDate
vSatementDetail:=[Facility]StatementDetail

If ($1=True)
//Marketing Type Titles
asDescription{1}:=[Facility]MarketingTypeTitle
asDescription{2}:=[Facility]CustomerTypeTitle
asDescription{3}:=[Facility]BusinessTypeTitle

ARRAY TEXT(aBPAnalysisCode;Size of array(asBillPlanDescription))
ARRAY TEXT(aBPAnalysisDesc;Size of array(asBillPlanDescription))
ARRAY BOOLEAN(aBPBillRentEachUnit;Size of array(asBillPlanDescription))
ARRAY TEXT(aBPCode;Size of array(asBillPlanDescription))
ARRAY LONGINT(aBPDefltNoticePlan;Size of array(asBillPlanDescription))
ARRAY REAL(aBPDiscFixedAmt;Size of array(asBillPlanDescription))
ARRAY BOOLEAN(aBPDiscOnlyMoveIn;Size of array(asBillPlanDescription))
ARRAY REAL(aBPDiscPercentage;Size of array(asBillPlanDescription))
ARRAY REAL(aBPFreeMths;Size of array(asBillPlanDescription))
ARRAY LONGINT(aBPFreePeriodStart;Size of array(asBillPlanDescription))
ARRAY BOOLEAN(aBPKioskInactive;Size of array(asBillPlanDescription))
ARRAY LONGINT(aBPMthsNoRefund;Size of array(asBillPlanDescription))
ARRAY LONGINT(aBPMthsRevIncent;Size of array(asBillPlanDescription))
ARRAY REAL(aBPMthstoPay;Size of array(asBillPlanDescription))
ARRAY REAL(aBPPenalty;Size of array(asBillPlanDescription))
ARRAY BOOLEAN(aBPPeriodicBilling;Size of array(asBillPlanDescription))
ARRAY LONGINT(aBPRefundDays;Size of array(asBillPlanDescription))
ARRAY BOOLEAN(aBPRemoveDiscMO;Size of array(asBillPlanDescription))
ARRAY BOOLEAN(aBPShowIncentonInv;Size of array(asBillPlanDescription))
ARRAY LONGINT(aBPSortOrder;Size of array(asBillPlanDescription))
ARRAY TEXT(aBPSwaptoCode;Size of array(asBillPlanDescription))
ARRAY BOOLEAN(aBPUseDescInv;Size of array(asBillPlanDescription))
ARRAY TEXT(aBPPlanPeriod;Size of array(asBillPlanDescription))
ARRAY BOOLEAN(aBPCasualBilling;Size of array(asBillPlanDescription))
ARRAY TEXT(aBPCTPrices;Size of array(asBillPlanDescription))
ARRAY REAL(aBPFixedBill;Size of array(asBillPlanDescription))
ARRAY BOOLEAN(aBPFixedBillPeriod;Size of array(asBillPlanDescription))
ARRAY BOOLEAN(aBPIncReference;Size of array(asBillPlanDescription))
ARRAY TEXT(aBPWebDescription;Size of array(asBillPlanDescription))

For ($i;1;Size of array(asBillPlanDescription))
QUERY([BillPlan];[BillPlan]Code=vFacilityCode+"@";*)
QUERY([BillPlan]; & [BillPlan]Inactive=False;*)
QUERY([BillPlan]; & ;[BillPlan]Description=asBillPlanDescription{$i})

If (Records in selection([BillPlan])>0)
aBPAnalysisCode{$i}:=[BillPlan]AnalysisCode
aBPAnalysisDesc{$i}:=[BillPlan]AnalysisDesc
aBPBillRentEachUnit{$i}:=[BillPlan]BillRentEachUnit
aBPCode{$i}:=Substring([BillPlan]Code;6)
aBPDefltNoticePlan{$i}:=[BillPlan]DefltNoticePlan
aBPDiscFixedAmt{$i}:=[BillPlan]DiscFixedAmt
aBPDiscOnlyMoveIn{$i}:=[BillPlan]DiscOnlyMoveIn
aBPDiscPercentage{$i}:=[BillPlan]DiscPercentage
aBPFreeMths{$i}:=[BillPlan]FreePeriods
aBPFreePeriodStart{$i}:=[BillPlan]FreePeriodStart
aBPKioskInactive{$i}:=[BillPlan]KioskInactive
aBPMthsNoRefund{$i}:=[BillPlan]MthsNoRefund
aBPMthsRevIncent{$i}:=[BillPlan]MthsRevIncent
aBPMthstoPay{$i}:=[BillPlan]PeriodstoPay
aBPPenalty{$i}:=[BillPlan]Penalty
aBPPeriodicBilling{$i}:=[BillPlan]PeriodicBilling
aBPRefundDays{$i}:=[BillPlan]RefundDays
aBPRemoveDiscMO{$i}:=[BillPlan]RemoveDiscMO
aBPShowIncentonInv{$i}:=[BillPlan]ShowIncentonInv
aBPSortOrder{$i}:=[BillPlan]SortOrder
aBPSwaptoCode{$i}:=[BillPlan]SwaptoCode
aBPUseDescInv{$i}:=[BillPlan]UseDescInv
aBPPlanPeriod{$i}:=[BillPlan]PlanPeriod
aBPCasualBilling{$i}:=[BillPlan]CasualBilling
aBPCTPrices{$i}:=[BillPlan]CTPrices
aBPFixedBill{$i}:=[BillPlan]FixedBill
aBPFixedBillPeriod{$i}:=[BillPlan]FixedBillPeriod
aBPIncReference{$i}:=[BillPlan]IncReference
aBPWebDescription{$i}:=[BillPlan]WebDescription
Else 
aBPAnalysisCode{$i}:=""
aBPAnalysisDesc{$i}:=""
aBPBillRentEachUnit{$i}:=False
aBPCode{$i}:=""
aBPDefltNoticePlan{$i}:=0
aBPDiscFixedAmt{$i}:=0
aBPDiscOnlyMoveIn{$i}:=False
aBPDiscPercentage{$i}:=0
aBPFreeMths{$i}:=0
aBPFreePeriodStart{$i}:=0
aBPKioskInactive{$i}:=False
aBPMthsNoRefund{$i}:=0
aBPMthsRevIncent{$i}:=0
aBPMthstoPay{$i}:=0
aBPPenalty{$i}:=0
aBPPeriodicBilling{$i}:=False
aBPRefundDays{$i}:=0
aBPRemoveDiscMO{$i}:=False
aBPShowIncentonInv{$i}:=False
aBPSortOrder{$i}:=0
aBPSwaptoCode{$i}:=""
aBPUseDescInv{$i}:=False
aBPPlanPeriod{$i}:=""
aBPCasualBilling{$i}:=False
aBPCTPrices{$i}:=""
aBPFixedBill{$i}:=0
aBPFixedBillPeriod{$i}:=False
aBPIncReference{$i}:=False
aBPWebDescription{$i}:=""
End if 
End for 

ARRAY TEXT(aMPAnalysisCodes;Size of array(asMerchPlanDescription))
ARRAY TEXT(aMPDiscountAnalysis;Size of array(asMerchPlanDescription))
ARRAY TEXT(aMPDiscountDescription;Size of array(asMerchPlanDescription))
ARRAY REAL(aMPFixedDiscount;Size of array(asMerchPlanDescription))
ARRAY LONGINT(aMPItemQuantity;Size of array(asMerchPlanDescription))
ARRAY TEXT(aMPMerchPlanID;Size of array(asMerchPlanDescription))
ARRAY REAL(aMPPercDiscount;Size of array(asMerchPlanDescription))
ARRAY LONGINT(aMPPriority;Size of array(asMerchPlanDescription))
ARRAY BOOLEAN(aMPRepeatMP;Size of array(asMerchPlanDescription))
ARRAY BOOLEAN(aMPShowDiscount;Size of array(asMerchPlanDescription))

For ($i;1;Size of array(asMerchPlanDescription))
QUERY([MerchPlan];[MerchPlan]MerchPlanID=vFacilityCode+"@";*)
QUERY([MerchPlan]; & [MerchPlan]Inactive=False;*)
QUERY([MerchPlan]; & ;[MerchPlan]Description=asMerchPlanDescription{$i})

If (Records in selection([MerchPlan])>0)
aMPAnalysisCodes{$i}:=[MerchPlan]AnalysisCodes
aMPDiscountAnalysis{$i}:=[MerchPlan]DiscountAnalysis
aMPDiscountDescription{$i}:=[MerchPlan]DiscountDescription
aMPFixedDiscount{$i}:=[MerchPlan]FixedDiscount
aMPItemQuantity{$i}:=[MerchPlan]ItemQuantity
aMPMerchPlanID{$i}:=Substring([MerchPlan]MerchPlanID;6)
aMPPercDiscount{$i}:=[MerchPlan]PercDiscount
aMPPriority{$i}:=[MerchPlan]Priority
aMPRepeatMP{$i}:=[MerchPlan]RepeatMP
aMPShowDiscount{$i}:=[MerchPlan]ShowDiscount
Else 
aMPAnalysisCodes{$i}:=""
aMPDiscountAnalysis{$i}:=""
aMPDiscountDescription{$i}:=""
aMPFixedDiscount{$i}:=0
aMPItemQuantity{$i}:=0
aMPMerchPlanID{$i}:=""
aMPPercDiscount{$i}:=0
aMPPriority{$i}:=0
aMPRepeatMP{$i}:=False
aMPShowDiscount{$i}:=False
End if 

End for 

ARRAY BOOLEAN(aACBillMoveIn;Size of array(asAnalysisCodeDescription))
ARRAY BOOLEAN(aACBillMoveOut;Size of array(asAnalysisCodeDescription))
ARRAY TEXT(aACCode;Size of array(asAnalysisCodeDescription))
ARRAY REAL(aACCostPrice;Size of array(asAnalysisCodeDescription))
ARRAY REAL(aACCreditPercentage;Size of array(asAnalysisCodeDescription))
ARRAY REAL(aACDfltSellAmt;Size of array(asAnalysisCodeDescription))
ARRAY BOOLEAN(aACDontExport;Size of array(asAnalysisCodeDescription))
ARRAY BOOLEAN(aACDontShowBank;Size of array(asAnalysisCodeDescription))
ARRAY TEXT(aACGLCode;Size of array(asAnalysisCodeDescription))
ARRAY TEXT(aACGroups;Size of array(asAnalysisCodeDescription))
ARRAY BOOLEAN(aACHdrforRptCols;Size of array(asAnalysisCodeDescription))
ARRAY BOOLEAN(aACInclBankRpt;Size of array(asAnalysisCodeDescription))
ARRAY REAL(aACInvAlertQty;Size of array(asAnalysisCodeDescription))
ARRAY BOOLEAN(aACInvItem;Size of array(asAnalysisCodeDescription))
ARRAY TEXT(aACKeyStatsCategory;Size of array(asAnalysisCodeDescription))
ARRAY REAL(aACMaxAmt;Size of array(asAnalysisCodeDescription))
ARRAY REAL(aACMinAmt;Size of array(asAnalysisCodeDescription))
ARRAY BOOLEAN(aACSetBankedDate;Size of array(asAnalysisCodeDescription))
ARRAY LONGINT(aACSortOrder;Size of array(asAnalysisCodeDescription))
ARRAY LONGINT(aACSpecialOptions;Size of array(asAnalysisCodeDescription))
ARRAY BOOLEAN(aACTaxable;Size of array(asAnalysisCodeDescription))
ARRAY REAL(aACTaxRate;Size of array(asAnalysisCodeDescription))
ARRAY BOOLEAN(aACWholeNumbers;Size of array(asAnalysisCodeDescription))
ARRAY BOOLEAN(aACPromotions;Size of array(asAnalysisCodeDescription))
ARRAY LONGINT(aACReceiptShow;Size of array(asAnalysisCodeDescription))
ARRAY LONGINT(aACChargeShow;Size of array(asAnalysisCodeDescription))
ARRAY REAL(aACNewTaxRate;Size of array(asAnalysisCodeDescription))
ARRAY DATE(aACTaxChangeDate;Size of array(asAnalysisCodeDescription))

For ($i;1;Size of array(asAnalysisCodeDescription))
Case of 
: (vsAnalysisCatDescription="Charges")
QUERY([Analysis];[Analysis]SortOrder<=50;*)
QUERY([Analysis]; & [Analysis]Inactive=False;*)
QUERY([Analysis]; & ;[Analysis]Code=vFacilityCode+"@";*)
QUERY([Analysis]; & ;[Analysis]Description=asAnalysisCodeDescription{$i})
: (vsAnalysisCatDescription="Receipts")
QUERY([Analysis];[Analysis]SortOrder>50;*)
QUERY([Analysis]; & [Analysis]Inactive=False;*)
QUERY([Analysis]; & ;[Analysis]Code=vFacilityCode+"@";*)
QUERY([Analysis]; & ;[Analysis]Description=asAnalysisCodeDescription{$i})
Else 
QUERY([Analysis];[Analysis]SortOrder<=50;*)
QUERY([Analysis]; & [Analysis]Inactive=False;*)
QUERY([Analysis]; & ;[Analysis]Code=vFacilityCode+"@";*)
QUERY([Analysis]; & ;[Analysis]Description=asAnalysisCodeDescription{$i};*)
QUERY([Analysis]; & ;[Analysis]AnalysisCategory=vsAnalysisCatDescription)
End case 

If (Records in selection([Analysis])>0)
aACBillMoveIn{$i}:=[Analysis]BillMoveIn
aACBillMoveOut{$i}:=[Analysis]BillMoveOut
aACCode{$i}:=Substring([Analysis]Code;6)
aACCostPrice{$i}:=[Analysis]CostPrice
aACCreditPercentage{$i}:=[Analysis]CreditPercentage
aACDfltSellAmt{$i}:=[Analysis]DfltSellAmt
aACDontExport{$i}:=[Analysis]DontExport
aACDontShowBank{$i}:=[Analysis]DontShowBank
aACGLCode{$i}:=[Analysis]GLCode
aACGroups{$i}:=[Analysis]Groups
aACHdrforRptCols{$i}:=[Analysis]HdrforRptCols
aACInclBankRpt{$i}:=[Analysis]InclBankRpt
aACInvAlertQty{$i}:=[Analysis]InvAlertQty
aACInvItem{$i}:=[Analysis]InvItem
aACKeyStatsCategory{$i}:=[Analysis]KeyStatsCategory
aACMaxAmt{$i}:=[Analysis]MaxAmt
aACMinAmt{$i}:=[Analysis]MinAmt
aACSetBankedDate{$i}:=[Analysis]SetBankedDate
aACSortOrder{$i}:=[Analysis]SortOrder
aACSpecialOptions{$i}:=[Analysis]SpecialOptions
aACTaxable{$i}:=[Analysis]Taxable
aACTaxRate{$i}:=[Analysis]TaxRate
aACWholeNumbers{$i}:=[Analysis]WholeNumbers
aACPromotions{$i}:=[Analysis]Promotions
aACReceiptShow{$i}:=[Analysis]ReceiptShow
aACChargeShow{$i}:=[Analysis]ChargeShow
aACNewTaxRate{$i}:=[Analysis]NewTaxRate
aACTaxChangeDate{$i}:=[Analysis]TaxChangeDate
Else 
aACBillMoveIn{$i}:=False
aACBillMoveOut{$i}:=False
aACCode{$i}:=""
aACCostPrice{$i}:=0
aACCreditPercentage{$i}:=0
aACDfltSellAmt{$i}:=0
aACDontExport{$i}:=False
aACDontShowBank{$i}:=False
aACGLCode{$i}:=""
aACGroups{$i}:=""
aACHdrforRptCols{$i}:=False
aACInclBankRpt{$i}:=False
aACInvAlertQty{$i}:=0
aACInvItem{$i}:=False
aACKeyStatsCategory{$i}:=""
aACMaxAmt{$i}:=0
aACMinAmt{$i}:=0
aACSetBankedDate{$i}:=False
aACSortOrder{$i}:=0
aACSpecialOptions{$i}:=0
aACTaxable{$i}:=False
aACTaxRate{$i}:=0
aACWholeNumbers{$i}:=False
aACPromotions{$i}:=False
aACReceiptShow{$i}:=0
aACChargeShow{$i}:=0
aACNewTaxRate{$i}:=0
aACTaxChangeDate{$i}:=!00-00-00!
End if 

End for 

ARRAY BOOLEAN(aNPActive;Size of array(asNoticesDescription))
ARRAY TEXT(aNPAnalysisCode;Size of array(asNoticesDescription))
ARRAY LONGINT(aNPAttachInvoice;Size of array(asNoticesDescription))
ARRAY LONGINT(aNPAttachStatement;Size of array(asNoticesDescription))
ARRAY BOOLEAN(aNPBalanceZeroLess;Size of array(asNoticesDescription))
ARRAY BOOLEAN(aNPBillNextRent;Size of array(asNoticesDescription))
ARRAY DATE(aNPDateFrom;Size of array(asNoticesDescription))
ARRAY LONGINT(aNPDaysAfter;Size of array(asNoticesDescription))
ARRAY LONGINT(aNPEmail;Size of array(asNoticesDescription))
ARRAY BOOLEAN(aNPEmailBlank;Size of array(asNoticesDescription))
ARRAY TEXT(aNPEmailSubject;Size of array(asNoticesDescription))
ARRAY BOOLEAN(aNPExcludeifAutoPay;Size of array(asNoticesDescription))
ARRAY BOOLEAN(aNPFeeonMonthlyRent;Size of array(asNoticesDescription))
ARRAY BOOLEAN(aNPFeeonRentOnly;Size of array(asNoticesDescription))
ARRAY REAL(aNPInvoiceFee;Size of array(asNoticesDescription))
ARRAY TEXT(aNPInvoiceFeeAnalysis;Size of array(asNoticesDescription))
ARRAY TEXT(aNPLateFeeTiers;Size of array(asNoticesDescription))
ARRAY BOOLEAN(aNPLateFeeUnit;Size of array(asNoticesDescription))
ARRAY LONGINT(aNPLetter;Size of array(asNoticesDescription))
ARRAY BOOLEAN(aNPLetterBlank;Size of array(asNoticesDescription))
ARRAY BOOLEAN(aNPLetterOnly;Size of array(asNoticesDescription))
ARRAY LONGINT(aNPMinDaysBeforeNewRentDate;Size of array(asNoticesDescription))
ARRAY REAL(aNPMinimumCharge;Size of array(asNoticesDescription))
ARRAY REAL(aNPMinimumPCent;Size of array(asNoticesDescription))
ARRAY BOOLEAN(aNPOnePerCustomer;Size of array(asNoticesDescription))
ARRAY BOOLEAN(aNPOnlyBillifLtrSent;Size of array(asNoticesDescription))
ARRAY BOOLEAN(aNPPrintOnMoveout;Size of array(asNoticesDescription))
ARRAY LONGINT(aNPRefDateField;Size of array(asNoticesDescription))
ARRAY LONGINT(aNPSendPriority;Size of array(asNoticesDescription))
ARRAY BOOLEAN(aNPSendToAll;Size of array(asNoticesDescription))
ARRAY BOOLEAN(aNPSetOverDue;Size of array(asNoticesDescription))
ARRAY BOOLEAN(aNPSetOverlock;Size of array(asNoticesDescription))
ARRAY BOOLEAN(aNPSetReplaceLock;Size of array(asNoticesDescription))
ARRAY TEXT(aNPSMSMessage;Size of array(asNoticesDescription))
ARRAY BOOLEAN(aNPTieredLateFeeOn;Size of array(asNoticesDescription))
ARRAY BOOLEAN(aNPUseAgrDaysPrior;Size of array(asNoticesDescription))
ARRAY BOOLEAN(aNPLateCycleIgnore;Size of array(asNoticesDescription))

For ($i;1;Size of array(asNoticesDescription))
QUERY([Notices];[Notices]RuleNotice=False;*)
QUERY([Notices]; & ;[Notices]NoticePlanNo=viNoticesPlanNo;*)
QUERY([Notices]; & ;[Notices]FacilityCode=vFacilityCode+"@";*)
QUERY([Notices]; & ;[Notices]Description=asNoticesDescription{$i})

If (Records in selection([Notices])>0)
aNPActive{$i}:=[Notices]Active
aNPAnalysisCode{$i}:=[Notices]AnalysisCode
aNPAttachInvoice{$i}:=[Notices]AttachInvoice
aNPAttachStatement{$i}:=[Notices]AttachStatement
aNPBalanceZeroLess{$i}:=[Notices]BalanceZeroLess
aNPBillNextRent{$i}:=[Notices]BillNextRent
aNPDateFrom{$i}:=[Notices]DateFrom
aNPDaysAfter{$i}:=[Notices]DaysAfter
aNPEmail{$i}:=BLOB size([Notices]Email)
aNPEmailBlank{$i}:=[Notices]EmailBlank
aNPEmailSubject{$i}:=[Notices]EmailSubject
aNPExcludeifAutoPay{$i}:=[Notices]ExcludeifAutoPay
aNPFeeonMonthlyRent{$i}:=[Notices]FeeonMonthlyRent
aNPFeeonRentOnly{$i}:=[Notices]FeeonRentOnly
aNPInvoiceFee{$i}:=[Notices]InvoiceFee
aNPInvoiceFeeAnalysis{$i}:=[Notices]InvoiceFeeAnalysis
aNPLateFeeTiers{$i}:=[Notices]LateFeeTiers
aNPLateFeeUnit{$i}:=[Notices]LateFeeUnit
aNPLetter{$i}:=BLOB size([Notices]Letter)
aNPLetterBlank{$i}:=[Notices]LetterBlank
aNPLetterOnly{$i}:=[Notices]LetterOnly
aNPMinDaysBeforeNewRentDate{$i}:=[Notices]MinDaysBeforeNewRentDate
aNPMinimumCharge{$i}:=[Notices]MinimumCharge
aNPMinimumPCent{$i}:=[Notices]MinimumPCent
aNPOnePerCustomer{$i}:=[Notices]OnePerCustomer
aNPOnlyBillifLtrSent{$i}:=[Notices]OnlyBillifLtrSent
aNPPrintOnMoveout{$i}:=[Notices]PrintOnMoveout
aNPRefDateField{$i}:=[Notices]RefDateField
aNPSendPriority{$i}:=[Notices]SendPriority
aNPSendToAll{$i}:=[Notices]SendToAll
aNPSetOverDue{$i}:=[Notices]SetOverDue
aNPSetOverlock{$i}:=[Notices]SetOverlock
aNPSetReplaceLock{$i}:=[Notices]SetReplaceLock
aNPSMSMessage{$i}:=[Notices]SMSMessage
aNPTieredLateFeeOn{$i}:=[Notices]TieredLateFeeOn
aNPUseAgrDaysPrior{$i}:=[Notices]UseAgrDaysPrior
aNPLateCycleIgnore{$i}:=[Notices]LateCycleIgnore
Else 
aNPActive{$i}:=False
aNPAnalysisCode{$i}:=""
aNPAttachInvoice{$i}:=0
aNPAttachStatement{$i}:=0
aNPBalanceZeroLess{$i}:=False
aNPBillNextRent{$i}:=False
aNPDateFrom{$i}:=!00-00-00!
aNPDaysAfter{$i}:=0
aNPEmail{$i}:=0
aNPEmailBlank{$i}:=False
aNPEmailSubject{$i}:=""
aNPExcludeifAutoPay{$i}:=False
aNPFeeonMonthlyRent{$i}:=False
aNPFeeonRentOnly{$i}:=False
aNPInvoiceFee{$i}:=0
aNPInvoiceFeeAnalysis{$i}:=""
aNPLateFeeTiers{$i}:=""
aNPLateFeeUnit{$i}:=False
aNPLetter{$i}:=0
aNPLetterBlank{$i}:=False
aNPLetterOnly{$i}:=False
aNPMinDaysBeforeNewRentDate{$i}:=0
aNPMinimumCharge{$i}:=0
aNPMinimumPCent{$i}:=0
aNPOnePerCustomer{$i}:=False
aNPOnlyBillifLtrSent{$i}:=False
aNPPrintOnMoveout{$i}:=False
aNPRefDateField{$i}:=0
aNPSendPriority{$i}:=0
aNPSendToAll{$i}:=False
aNPSetOverDue{$i}:=False
aNPSetOverlock{$i}:=False
aNPSetReplaceLock{$i}:=False
aNPSMSMessage{$i}:=""
aNPTieredLateFeeOn{$i}:=False
aNPUseAgrDaysPrior{$i}:=False
aNPLateCycleIgnore{$i}:=False
End if 

End for 

ARRAY BOOLEAN(aRIActive;Size of array(asRentIncreaseDescription))
ARRAY TEXT(aRIAnalysisCode;Size of array(asRentIncreaseDescription))
ARRAY LONGINT(aRIAttachInvoice;Size of array(asRentIncreaseDescription))
ARRAY LONGINT(aRIAttachStatement;Size of array(asRentIncreaseDescription))
ARRAY BOOLEAN(aRIBalanceZeroLess;Size of array(asRentIncreaseDescription))
ARRAY BOOLEAN(aRIBillNextRent;Size of array(asRentIncreaseDescription))
ARRAY DATE(aRIDateFrom;Size of array(asRentIncreaseDescription))
ARRAY LONGINT(aRIDaysAfter;Size of array(asRentIncreaseDescription))
ARRAY LONGINT(aRIEmail;Size of array(asRentIncreaseDescription))
ARRAY BOOLEAN(aRIEmailBlank;Size of array(asRentIncreaseDescription))
ARRAY TEXT(aRIEmailSubject;Size of array(asRentIncreaseDescription))
ARRAY BOOLEAN(aRIExcludeifAutoPay;Size of array(asRentIncreaseDescription))
ARRAY BOOLEAN(aRIFeeonMonthlyRent;Size of array(asRentIncreaseDescription))
ARRAY BOOLEAN(aRIFeeonRentOnly;Size of array(asRentIncreaseDescription))
ARRAY REAL(aRIInvoiceFee;Size of array(asRentIncreaseDescription))
ARRAY TEXT(aRIInvoiceFeeAnalysis;Size of array(asRentIncreaseDescription))
ARRAY TEXT(aRILateFeeTiers;Size of array(asRentIncreaseDescription))
ARRAY BOOLEAN(aRILateFeeUnit;Size of array(asRentIncreaseDescription))
ARRAY LONGINT(aRILetter;Size of array(asRentIncreaseDescription))
ARRAY BOOLEAN(aRILetterBlank;Size of array(asRentIncreaseDescription))
ARRAY BOOLEAN(aRILetterOnly;Size of array(asRentIncreaseDescription))
ARRAY LONGINT(aRIMinDaysBeforeNewRentDate;Size of array(asRentIncreaseDescription))
ARRAY REAL(aRIMinimumCharge;Size of array(asRentIncreaseDescription))
ARRAY REAL(aRIMinimumPCent;Size of array(asRentIncreaseDescription))
ARRAY BOOLEAN(aRIOnePerCustomer;Size of array(asRentIncreaseDescription))
ARRAY BOOLEAN(aRIOnlyBillifLtrSent;Size of array(asRentIncreaseDescription))
ARRAY BOOLEAN(aRIPrintOnMoveout;Size of array(asRentIncreaseDescription))
ARRAY LONGINT(aRIRefDateField;Size of array(asRentIncreaseDescription))
ARRAY LONGINT(aRISendPriority;Size of array(asRentIncreaseDescription))
ARRAY BOOLEAN(aRISendToAll;Size of array(asRentIncreaseDescription))
ARRAY BOOLEAN(aRISetOverDue;Size of array(asRentIncreaseDescription))
ARRAY BOOLEAN(aRISetOverlock;Size of array(asRentIncreaseDescription))
ARRAY BOOLEAN(aRISetReplaceLock;Size of array(asRentIncreaseDescription))
ARRAY TEXT(aRISMSMessage;Size of array(asRentIncreaseDescription))
ARRAY BOOLEAN(aRITieredLateFeeOn;Size of array(asRentIncreaseDescription))
ARRAY BOOLEAN(aRIUseAgrDaysPrior;Size of array(asRentIncreaseDescription))

For ($i;1;Size of array(asRentIncreaseDescription))
QUERY([Notices];[Notices]RuleNotice=True;*)
QUERY([Notices]; & ;[Notices]FacilityCode=vFacilityCode+"@";*)
QUERY([Notices]; & ;[Notices]Description=asRentIncreaseDescription{$i})

If (Records in selection([Notices])>0)
aRIActive{$i}:=[Notices]Active
aRIAnalysisCode{$i}:=[Notices]AnalysisCode
aRIAttachInvoice{$i}:=[Notices]AttachInvoice
aRIAttachStatement{$i}:=[Notices]AttachStatement
aRIBalanceZeroLess{$i}:=[Notices]BalanceZeroLess
aRIBillNextRent{$i}:=[Notices]BillNextRent
aRIDateFrom{$i}:=[Notices]DateFrom
aRIDaysAfter{$i}:=[Notices]DaysAfter
aRIEmail{$i}:=BLOB size([Notices]Email)
aRIEmailBlank{$i}:=[Notices]EmailBlank
aRIEmailSubject{$i}:=[Notices]EmailSubject
aRIExcludeifAutoPay{$i}:=[Notices]ExcludeifAutoPay
aRIFeeonMonthlyRent{$i}:=[Notices]FeeonMonthlyRent
aRIFeeonRentOnly{$i}:=[Notices]FeeonRentOnly
aRIInvoiceFee{$i}:=[Notices]InvoiceFee
aRIInvoiceFeeAnalysis{$i}:=[Notices]InvoiceFeeAnalysis
aRILateFeeTiers{$i}:=[Notices]LateFeeTiers
aRILateFeeUnit{$i}:=[Notices]LateFeeUnit
aRILetter{$i}:=BLOB size([Notices]Letter)
aRILetterBlank{$i}:=[Notices]LetterBlank
aRILetterOnly{$i}:=[Notices]LetterOnly
aRIMinDaysBeforeNewRentDate{$i}:=[Notices]MinDaysBeforeNewRentDate
aRIMinimumCharge{$i}:=[Notices]MinimumCharge
aRIMinimumPCent{$i}:=[Notices]MinimumPCent
aRIOnePerCustomer{$i}:=[Notices]OnePerCustomer
aRIOnlyBillifLtrSent{$i}:=[Notices]OnlyBillifLtrSent
aRIPrintOnMoveout{$i}:=[Notices]PrintOnMoveout
aRIRefDateField{$i}:=[Notices]RefDateField
aRISendPriority{$i}:=[Notices]SendPriority
aRISendToAll{$i}:=[Notices]SendToAll
aRISetOverDue{$i}:=[Notices]SetOverDue
aRISetOverlock{$i}:=[Notices]SetOverlock
aRISetReplaceLock{$i}:=[Notices]SetReplaceLock
aRISMSMessage{$i}:=[Notices]SMSMessage
aRITieredLateFeeOn{$i}:=[Notices]TieredLateFeeOn
aRIUseAgrDaysPrior{$i}:=[Notices]UseAgrDaysPrior
Else 
aRIActive{$i}:=False
aRIAnalysisCode{$i}:=""
aRIAttachInvoice{$i}:=0
aRIAttachStatement{$i}:=0
aRIBalanceZeroLess{$i}:=False
aRIBillNextRent{$i}:=False
aRIDateFrom{$i}:=!00-00-00!
aRIDaysAfter{$i}:=0
aRIEmail{$i}:=0
aRIEmailBlank{$i}:=False
aRIEmailSubject{$i}:=""
aRIExcludeifAutoPay{$i}:=False
aRIFeeonMonthlyRent{$i}:=False
aRIFeeonRentOnly{$i}:=False
aRIInvoiceFee{$i}:=0
aRIInvoiceFeeAnalysis{$i}:=""
aRILateFeeTiers{$i}:=""
aRILateFeeUnit{$i}:=False
aRILetter{$i}:=0
aRILetterBlank{$i}:=False
aRILetterOnly{$i}:=False
aRIMinDaysBeforeNewRentDate{$i}:=0
aRIMinimumCharge{$i}:=0
aRIMinimumPCent{$i}:=0
aRIOnePerCustomer{$i}:=False
aRIOnlyBillifLtrSent{$i}:=False
aRIPrintOnMoveout{$i}:=False
aRIRefDateField{$i}:=0
aRISendPriority{$i}:=0
aRISendToAll{$i}:=False
aRISetOverDue{$i}:=False
aRISetOverlock{$i}:=False
aRISetReplaceLock{$i}:=False
aRISMSMessage{$i}:=""
aRITieredLateFeeOn{$i}:=False
aRIUseAgrDaysPrior{$i}:=False
End if 

End for 

ARRAY TEXT(aMTCustType;Size of array(asMarketingDescription))
ARRAY TEXT(aMTFacilityList;Size of array(asMarketingDescription))
ARRAY TEXT(aMTInfo;Size of array(asMarketingDescription))
ARRAY TEXT(aMTList;Size of array(asMarketingDescription))
ARRAY BOOLEAN(aMTSecurity;Size of array(asMarketingDescription))
ARRAY LONGINT(aMTSortOrder;Size of array(asMarketingDescription))

For ($i;1;Size of array(asMarketingDescription))
QUERY([MarketingTypes];[MarketingTypes]ListCode=asDotted{asDescription};*)
QUERY([MarketingTypes]; & ;[MarketingTypes]Facility=vFacilityCode;*)
QUERY([MarketingTypes]; & ;[MarketingTypes]Description=asMarketingDescription{$i})

If (Records in selection([MarketingTypes])>0)
aMTCustType{$i}:=[MarketingTypes]CustType
aMTFacilityList{$i}:=[MarketingTypes]FacilityList
aMTInfo{$i}:=[MarketingTypes]Info
aMTList{$i}:=[MarketingTypes]List
aMTSecurity{$i}:=[MarketingTypes]Security
aMTSortOrder{$i}:=[MarketingTypes]SortOrder
Else 
aMTCustType{$i}:=""
aMTFacilityList{$i}:=""
aMTInfo{$i}:=""
aMTList{$i}:=""
aMTSecurity{$i}:=False
aMTSortOrder{$i}:=0
End if 

End for 

ARRAY REAL(aIREndValue;Size of array(asInsuranceRateStart))
ARRAY REAL(aIRPremium;Size of array(asInsuranceRateStart))
ARRAY BOOLEAN(aIRRepeat;Size of array(asInsuranceRateStart))
ARRAY BOOLEAN(aIRVerify;Size of array(asInsuranceRateStart))

For ($i;1;Size of array(asInsuranceRateStart))
QUERY([InsuranceRates];[InsuranceRates]Facility=vFacilityCode+"@";*)
QUERY([InsuranceRates]; & ;[InsuranceRates]StartValue=asInsuranceRateStart{$i})

If (Records in selection([InsuranceRates])>0)
aIREndValue{$i}:=[InsuranceRates]EndValue
aIRPremium{$i}:=[InsuranceRates]Premium
aIRRepeat{$i}:=[InsuranceRates]RepeatOn
aIRVerify{$i}:=[InsuranceRates]Verify
Else 
aIREndValue{$i}:=0
aIRPremium{$i}:=0
aIRRepeat{$i}:=False
aIRVerify{$i}:=False
End if 

End for 
End if 
//%attributes = {"lang":"en"} comment added and reserved by 4D.
C_BOOLEAN($1;$Found;$Abort)
C_LONGINT($i)
$Found:=$1
$Abort:=False
If ($Found=True)
If ([Unit]ReservedTo>"")
Case of 
: (<>sProduct="@B")
ConfirmTwo (Get localized string("This berth has already been reserved on reservation no")+" "+[Unit]ReservedTo+". "+Get localized string("Ignore reservation and rent this berth anyway?");Get localized string("No");Get localized string("Yes"))
: (<>sProduct="@R")
ConfirmTwo (Get localized string("This appliance has already been reserved on reservation no")+" "+[Unit]ReservedTo+". "+Get localized string("Ignore reservation and rent this appliance anyway?");Get localized string("No");Get localized string("Yes"))
: (<>sProduct="@C")
ConfirmTwo (Get localized string("This space has already been reserved on reservation no")+" "+[Unit]ReservedTo+". "+Get localized string("Ignore reservation and rent this space anyway?");Get localized string("No");Get localized string("Yes"))
Else 
ConfirmTwo (Get localized string("This unit has already been reserved on reservation no")+" "+[Unit]ReservedTo+". "+Get localized string("Ignore reservation and rent this unit anyway?");Get localized string("No");Get localized string("Yes"))
End case 

//ConfirmTwo (Get localized string("This unit has already been reserved on reservation no")+" "+[Unit]ReservedTo+". "Get localized string("Ignore reservation and rent this unit anyway?");Get localized string("No");Get localized string("Yes"))
If (OK=1)
QUERY([Unit];[Unit]ReservedTo=[Reservation]RReserveNo)
$Abort:=True
End if 
Else 
If ([Unit]Status#"Vacant")
Case of 
: (<>sProduct="@B")
ConfirmTwo (Get localized string("This berth status is showing")+" "+[Unit]Status+". "+Get localized string("Ignore status and Reserve this berth anyway?");Get localized string("No");Get localized string("Yes"))
: (<>sProduct="@R")
ConfirmTwo (Get localized string("This appliance status is showing")+" "+[Unit]Status+". "+Get localized string("Ignore status and Reserve this appliance anyway?");Get localized string("No");Get localized string("Yes"))
: (<>sProduct="@C")
ConfirmTwo (Get localized string("This space status is showing")+" "+[Unit]Status+". "+Get localized string("Ignore status and Reserve this space anyway?");Get localized string("No");Get localized string("Yes"))
Else 
ConfirmTwo (Get localized string("This unit status is showing")+" "+[Unit]Status+". "+Get localized string("Ignore status and Reserve this unit anyway?");Get localized string("No");Get localized string("Yes"))
End case 
//ConfirmTwo (Get localized string("This unit status is showing")+" "+[Unit]Status+". "+Get localized string("Ignore status and Reserve this <vtUnits> anyway?");Get localized string("No");Get localized string("Yes"))
If (OK=1)
QUERY([Unit];[Unit]ReservedTo=[Reservation]RReserveNo)
$Abort:=True
End if 
End if 
End if 
If ($Abort=False)
If (Locked([Unit]))
Case of 
: (<>sProduct="@B")
AlertMessage (Get localized string("This berth is locked by another process. Unable to add to this agreement."))
: (<>sProduct="@R")
AlertMessage (Get localized string("This appliance is locked by another process. Unable to add to this agreement."))
: (<>sProduct="@C")
AlertMessage (Get localized string("This space is locked by another process. Unable to add to this agreement."))
Else 
AlertMessage (Get localized string("This unit is locked by another process. Unable to add to this agreement."))
End case 
Else 
RELATE ONE([Unit]UnitTypeCode)
[Unit]ReservedTo:=[Reservation]RReserveNo
If ([Unit]Status#<>asUnitStatus{1})
[Unit]Status:=<>asUnitStatus{3}
End if 
If ([Unit]Status#Old([Unit]Status))
[Unit]LastStatusDate:=Current date
End if 
RELATE ONE([Unit]UnitTypeCode)

[Unit]QuotedRate:=[Quote]Price

If ([UnitType]VariableLength)
$UseQuote:=True
ConfirmTwo (Get localized string("Was this quote on a per increment basis or total length?");Get localized string("Per Incr");Get localized string("Total1"))
If (OK=1)
$UseQuote:=False
End if 
$Continue:=False
Repeat 
$Length:=Num(RequestMessage (Get localized string("Please enter the length used. Do not exceed maximum length of")+" "+String([UnitType]UnitTypeLength);String([Quote]Lngth)))
If ($Length<=[UnitType]UnitTypeLength)
$Continue:=True
End if 
Until ($Continue)
If ($UseQuote=False)
If ($Length<[UnitType]VariableMinimum)
[Unit]QuotedRate:=Round([Unit]QuotedRate*[UnitType]VariableMinimum;2)
Else 
[Unit]QuotedRate:=Round([Unit]QuotedRate*$Length;2)
End if 
End if 
[Unit]ReservedLength:=$Length
End if 

[Unit]ReservedDate:=Current date
[Unit]ReserveDeposit:=[UnitType]DepositAmt
If ([Facility]AgreeOnlyDeposit=True)
[Unit]ReserveDeposit:=0
End if 
SAVE RECORD([Unit])
RELATE ONE([Unit]UnitTypeCode)
If ([UnitType]DepositAmt>0)
If ([Facility]AgreeOnlyDeposit=True)
OK:=0
Else 
ConfirmTwo (Get localized string("Do you wish to charge the deposit of")+" "+<>sCurrency+String([UnitType]DepositAmt;<>sFormat)+"?";Get localized string("Yes");Get localized string("No"))
End if 

If (OK=1)
QUERY([Analysis];[Analysis]SortOrder=2)
READ WRITE([Trxs])
CREATE RECORD([Trxs])
[Trxs]CustomerCode:=[Reservation]CustomerCode
[Trxs]AgreeNo:=[Reservation]RReserveNo
[Trxs]Charge:=True
[Trxs]AnalysisCode:=<>sFacility+"DP"
[Trxs]Description:=[Analysis]Description+" "+<>vtUnitsCap+" "+[Unit]UnitNo
[Trxs]TrxDate:=GetValidDate ([Unit]ReservedDate)
[Trxs]DateFrom:=[Unit]ReservedDate
[Trxs]DateTo:=[Unit]ReservedDate
[Trxs]TotAmt:=RoundAmt ([UnitType]DepositAmt)
[Trxs]Confirmed:=True
[Trxs]TaxAmt:=CalcTaxAmt ([Trxs]TotAmt)
SAVE RECORD([Trxs])
[Customer]Balance:=Round([Customer]Balance+[Trxs]TotAmt;2)
If ([Trxs]TrxDate>[Customer]LatestTrxDate)
[Customer]LatestTrxDate:=[Trxs]TrxDate
End if 
vRecalc:=True
READ ONLY([Trxs])
Else 
[Unit]ReserveDeposit:=0
End if 
End if 
End if 
End if 
End if 
QUERY([Unit];[Unit]ReservedTo=[Reservation]RReserveNo)
FIRST RECORD([Unit])
vTotal:=0
vQuote:=0
//[Reservation]DepositAmt:=0
[Reservation]UnitsReserved:=""
For ($i;1;Records in selection([Unit]))
RELATE ONE([Unit]UnitTypeCode)
vTotal:=vTotal+CalculateBaseRate (2;1)
vQuote:=vQuote+[Unit]QuotedRate
[Reservation]DepositAmt:=[Reservation]DepositAmt+[Unit]ReserveDeposit
[Reservation]UnitsReserved:=[Reservation]UnitsReserved+[Unit]UnitNo+", "
NEXT RECORD([Unit])
End for 
If (Length([Reservation]UnitsReserved)>2)
[Reservation]UnitsReserved:=Substring([Reservation]UnitsReserved;1;Length([Reservation]UnitsReserved)-2)
End if 
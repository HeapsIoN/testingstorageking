//%attributes = {"lang":"en"} comment added and reserved by 4D.
C_BLOB($ExportProject)
C_LONGINT($Path;$ExportFacCust;$j;$k;$m;$n)
C_DATE($Date)
$Date:=Current date-1
$ExportFacCust:=0
$j:=0
$k:=0
$m:=0
$n:=0
QUERY([Activity];[Activity]ActivityDate=$Date)
ORDER BY([Activity];[Activity]FacilityCode;>)
$Path:=Test path name(<>sExportPath+"Activity.4SI")
If ($Path=1) & (Records in selection([Activity])>0)
$ExportFacCust:=$ExportFacCust+1
DOCUMENT TO BLOB(<>sExportPath+"Activity.4SI";$ExportProject)
//EXPORT DATA(<>sExportPath+"Activity"+String(Year of($Date))+String(Month of($Date))+String(Day of($Date))+".txt";$ExportProject)
EXPORT DATA(<>sExportPath+"Activity"+yyyymmdd ($Date)+".txt";$ExportProject)//fb8540 by eugene, 24/04/2015
End if 
ALL RECORDS([UnitType])
ORDER BY([UnitType];[UnitType]RUnitType;>)
$Path:=Test path name(<>sExportPath+"UnitType.4SI")
If ($Path=1) & (Records in selection([UnitType])>0)
$ExportFacCust:=$ExportFacCust+1
DOCUMENT TO BLOB(<>sExportPath+"UnitType.4SI";$ExportProject)
//EXPORT DATA(<>sExportPath+"UnitType"+String(Year of($Date))+String(Month of($Date))+String(Day of($Date))+".txt";$ExportProject)
EXPORT DATA(<>sExportPath+"UnitType"+yyyymmdd ($Date)+".txt";$ExportProject)
End if 
ALL RECORDS([UnitHistory])
ORDER BY([UnitHistory];[UnitHistory]MoveIn;>)
$Path:=Test path name(<>sExportPath+"UnitHistory.4SI")
If ($Path=1) & (Records in selection([UnitHistory])>0)
$ExportFacCust:=$ExportFacCust+1
DOCUMENT TO BLOB(<>sExportPath+"UnitHistory.4SI";$ExportProject)
//EXPORT DATA(<>sExportPath+"UnitHistory"+String(Year of($Date))+String(Month of($Date))+String(Day of($Date))+".txt";$ExportProject)
EXPORT DATA(<>sExportPath+"UnitHistory"+yyyymmdd ($Date)+".txt";$ExportProject)
End if 
ALL RECORDS([Unit])
ORDER BY([Unit];[Unit]RUnitNo;>)
$Path:=Test path name(<>sExportPath+"Unit.4SI")
If ($Path=1) & (Records in selection([Unit])>0)
$ExportFacCust:=$ExportFacCust+1
DOCUMENT TO BLOB(<>sExportPath+"Unit.4SI";$ExportProject)
//EXPORT DATA(<>sExportPath+"Unit"+String(Year of($Date))+String(Month of($Date))+String(Day of($Date))+".txt";$ExportProject)
EXPORT DATA(<>sExportPath+"Unit"+yyyymmdd ($Date)+".txt";$ExportProject)
End if 
ALL RECORDS([Analysis])
ORDER BY([Analysis];[Analysis]Code;>)
$Path:=Test path name(<>sExportPath+"Analysis.4SI")
If ($Path=1) & (Records in selection([Analysis])>0)
$ExportFacCust:=$ExportFacCust+1
DOCUMENT TO BLOB(<>sExportPath+"Analysis.4SI";$ExportProject)
//EXPORT DATA(<>sExportPath+"Analysis"+String(Year of($Date))+String(Month of($Date))+String(Day of($Date))+".txt";$ExportProject)
EXPORT DATA(<>sExportPath+"Analysis"+yyyymmdd ($Date)+".txt";$ExportProject)
End if 
QUERY([Trxs];[Trxs]TrxDate>=(Add to date(Current date;0;0;-90)))
ORDER BY([Trxs];[Trxs]TrxDate;>)
$Path:=Test path name(<>sExportPath+"Transaction.4SI")
If ($Path=1) & (Records in selection([Trxs])>0)
$ExportFacCust:=$ExportFacCust+1
DOCUMENT TO BLOB(<>sExportPath+"Transaction.4SI";$ExportProject)
//EXPORT DATA(<>sExportPath+"Transaction"+String(Year of($Date))+String(Month of($Date))+String(Day of($Date))+".txt";$ExportProject)
EXPORT DATA(<>sExportPath+"Transaction"+yyyymmdd ($Date)+".txt";$ExportProject)
End if 
QUERY([GateLog];[GateLog]GateDate>=(Add to date(Current date;0;0;-7)))
ORDER BY([GateLog];[GateLog]GateDate;>)
$Path:=Test path name(<>sExportPath+"GateLog.4SI")
If ($Path=1) & (Records in selection([GateLog])>0)
$ExportFacCust:=$ExportFacCust+1
DOCUMENT TO BLOB(<>sExportPath+"GateLog.4SI";$ExportProject)
//EXPORT DATA(<>sExportPath+"GateLog"+String(Year of($Date))+String(Month of($Date))+String(Day of($Date))+".txt";$ExportProject)
EXPORT DATA(<>sExportPath+"GateLog"+yyyymmdd ($Date)+".txt";$ExportProject)
End if 

ALL RECORDS([Agreement])
ORDER BY([Agreement];[Agreement]RAgreeNo;>)
$Path:=Test path name(<>sExportPath+"Agreement.4SI")
If ($Path=1) & (Records in selection([Agreement])>0)
$ExportFacCust:=$ExportFacCust+1
DOCUMENT TO BLOB(<>sExportPath+"Agreement.4SI";$ExportProject)
//EXPORT DATA(<>sExportPath+"Agreement"+String(Year of($Date))+String(Month of($Date))+String(Day of($Date))+".txt";$ExportProject)
EXPORT DATA(<>sExportPath+"Agreement"+yyyymmdd ($Date)+".txt";$ExportProject)
End if 
ALL RECORDS([Reservation])
ORDER BY([Reservation];[Reservation]ReserveNo;>)
$Path:=Test path name(<>sExportPath+"Reservation.4SI")
If ($Path=1) & (Records in selection([Reservation])>0)
$ExportFacCust:=$ExportFacCust+1
DOCUMENT TO BLOB(<>sExportPath+"Reservation.4SI";$ExportProject)
//EXPORT DATA(<>sExportPath+"Reservation"+String(Year of($Date))+String(Month of($Date))+String(Day of($Date))+".txt";$ExportProject)
EXPORT DATA(<>sExportPath+"Reservation"+yyyymmdd ($Date)+".txt";$ExportProject)
End if 
ALL RECORDS([Contacts])
ORDER BY([Contacts];[Contacts]CallDate;>)
$Path:=Test path name(<>sExportPath+"Contacts.4SI")
If ($Path=1) & (Records in selection([Contacts])>0)
$ExportFacCust:=$ExportFacCust+1
DOCUMENT TO BLOB(<>sExportPath+"Contacts.4SI";$ExportProject)
//EXPORT DATA(<>sExportPath+"Contacts"+String(Year of($Date))+String(Month of($Date))+String(Day of($Date))+".txt";$ExportProject)
EXPORT DATA(<>sExportPath+"Contacts"+yyyymmdd ($Date)+".txt";$ExportProject)
End if 
QUERY([NotesHistory];[NotesHistory]NoteDate>=(Add to date(Current date;0;-1;0)))
ORDER BY([NotesHistory];[NotesHistory]NoteDate;>)
$Path:=Test path name(<>sExportPath+"NotesHistory.4SI")
If ($Path=1) & (Records in selection([NotesHistory])>0)
$ExportFacCust:=$ExportFacCust+1
DOCUMENT TO BLOB(<>sExportPath+"NotesHistory.4SI";$ExportProject)
//EXPORT DATA(<>sExportPath+"NotesHistory"+String(Year of($Date))+String(Month of($Date))+String(Day of($Date))+".txt";$ExportProject)
EXPORT DATA(<>sExportPath+"NotesHistory"+yyyymmdd ($Date)+".txt";$ExportProject)
End if 

ALL RECORDS([Quote])
$Path:=Test path name(<>sExportPath+"Quote.4SI")
If ($Path=1) & (Records in selection([Quote])>0)
$ExportFacCust:=$ExportFacCust+1
DOCUMENT TO BLOB(<>sExportPath+"Quote.4SI";$ExportProject)
//EXPORT DATA(<>sExportPath+"Quote"+String(Year of($Date))+String(Month of($Date))+String(Day of($Date))+".txt";$ExportProject)
EXPORT DATA(<>sExportPath+"Quote"+yyyymmdd ($Date)+".txt";$ExportProject)
End if 

ALL RECORDS([InsuranceRates])
$Path:=Test path name(<>sExportPath+"InsuranceRates.4SI")
If ($Path=1) & (Records in selection([InsuranceRates])>0)
$ExportFacCust:=$ExportFacCust+1
DOCUMENT TO BLOB(<>sExportPath+"InsuranceRates.4SI";$ExportProject)
//EXPORT DATA(<>sExportPath+"InsuranceRates"+String(Year of($Date))+String(Month of($Date))+String(Day of($Date))+".txt";$ExportProject)
EXPORT DATA(<>sExportPath+"InsuranceRates"+yyyymmdd ($Date)+".txt";$ExportProject)
End if 

ALL RECORDS([OtherChgs])
$Path:=Test path name(<>sExportPath+"OtherChgs.4SI")
If ($Path=1) & (Records in selection([OtherChgs])>0)
$ExportFacCust:=$ExportFacCust+1
DOCUMENT TO BLOB(<>sExportPath+"OtherChgs.4SI";$ExportProject)
//EXPORT DATA(<>sExportPath+"OtherChgs"+String(Year of($Date))+String(Month of($Date))+String(Day of($Date))+".txt";$ExportProject)
EXPORT DATA(<>sExportPath+"OtherChgs"+yyyymmdd ($Date)+".txt";$ExportProject)
End if 

ALL RECORDS([MerchPlan])
$Path:=Test path name(<>sExportPath+"MerchPlan.4SI")
If ($Path=1) & (Records in selection([MerchPlan])>0)
$ExportFacCust:=$ExportFacCust+1
DOCUMENT TO BLOB(<>sExportPath+"MerchPlan.4SI";$ExportProject)
//EXPORT DATA(<>sExportPath+"MerchPlan"+String(Year of($Date))+String(Month of($Date))+String(Day of($Date))+".txt";$ExportProject)
EXPORT DATA(<>sExportPath+"MerchPlan"+yyyymmdd ($Date)+".txt";$ExportProject)
End if 

ALL RECORDS([UnitStatusTrx])
$Path:=Test path name(<>sExportPath+"UnitStatusTrx.4SI")
If ($Path=1) & (Records in selection([UnitStatusTrx])>0)
$ExportFacCust:=$ExportFacCust+1
DOCUMENT TO BLOB(<>sExportPath+"UnitStatusTrx.4SI";$ExportProject)
//EXPORT DATA(<>sExportPath+"UnitStatusTrx"+String(Year of($Date))+String(Month of($Date))+String(Day of($Date))+".txt";$ExportProject)
EXPORT DATA(<>sExportPath+"UnitStatusTrx"+yyyymmdd ($Date)+".txt";$ExportProject)
End if 


ALL RECORDS([Promotions])
ORDER BY([Promotions];[Promotions]Active;>)
$Path:=Test path name(<>sExportPath+"Promotions.4SI")
If ($Path=1) & (Records in selection([Promotions])>0)
$ExportFacCust:=$ExportFacCust+1
DOCUMENT TO BLOB(<>sExportPath+"Promotions.4SI";$ExportProject)
//EXPORT DATA(<>sExportPath+"Promotions"+String(Year of($Date))+String(Month of($Date))+String(Day of($Date))+".txt";$ExportProject)
EXPORT DATA(<>sExportPath+"Promotions"+yyyymmdd ($Date)+".txt";$ExportProject)
End if 

ALL RECORDS([PromotionHistory])
ORDER BY([PromotionHistory];[PromotionHistory]RedeemedDate;>)
$Path:=Test path name(<>sExportPath+"PromotionHistory.4SI")
If ($Path=1) & (Records in selection([PromotionHistory])>0)
$ExportFacCust:=$ExportFacCust+1
DOCUMENT TO BLOB(<>sExportPath+"PromotionHistory.4SI";$ExportProject)
//EXPORT DATA(<>sExportPath+"PromotionHistory"+String(Year of($Date))+String(Month of($Date))+String(Day of($Date))+".txt";$ExportProject)
EXPORT DATA(<>sExportPath+"PromotionHistory"+yyyymmdd ($Date)+".txt";$ExportProject)
End if 

ALL RECORDS([BillPlan])
$Path:=Test path name(<>sExportPath+"BillPlan.4SI")
If ($Path=1) & (Records in selection([BillPlan])>0)
$ExportFacCust:=$ExportFacCust+1
DOCUMENT TO BLOB(<>sExportPath+"BillPlan.4SI";$ExportProject)
//EXPORT DATA(<>sExportPath+"BillPlan"+String(Year of($Date))+String(Month of($Date))+String(Day of($Date))+".txt";$ExportProject)
EXPORT DATA(<>sExportPath+"BillPlan"+yyyymmdd ($Date)+".txt";$ExportProject)
End if 

ALL RECORDS([Customer])
ORDER BY([Customer];[Customer]CustomerCode;>)
$Path:=Test path name(<>sExportPath+"Customer.4SI")
If ($Path=1) & (Records in selection([Customer])>0)
$ExportFacCust:=$ExportFacCust+1
DOCUMENT TO BLOB(<>sExportPath+"Customer.4SI";$ExportProject)
//EXPORT DATA(<>sExportPath+"Customer"+String(Year of($Date))+String(Month of($Date))+String(Day of($Date))+".txt";$ExportProject)
EXPORT DATA(<>sExportPath+"Customer"+yyyymmdd ($Date)+".txt";$ExportProject)
End if 

If ([Facility]FacilityCode="KE@")
QUERY([Agreement];[Agreement]MoveIn>=(Current date-1))
CREATE EMPTY SET([Customer];"Repeat")
For ($o;1;Records in selection([Agreement]))
RELATE ONE([Agreement]CustomerCode)
SET QUERY DESTINATION(Into variable;$Repeat)
$First:=True

$Repeat:=0
If ([Customer]ABNNo>"")
QUERY([Customer];[Customer]ABNNo=[Customer]ABNNo;*)
$First:=False
End if 

If ([Customer]LicenceNo>"")
If ($First=True)
QUERY([Customer];[Customer]LicenceNo=[Customer]LicenceNo)
Else 
QUERY([Customer]; | ;[Customer]LicenceNo=[Customer]LicenceNo)
End if 
Else 
If ([Customer]ABNNo>"")
QUERY([Customer])
End if 
End if 

If ([Customer]ABNNo>"") | ([Customer]LicenceNo>"")
QUERY SELECTION([Customer];[Customer]CustomerName=[Customer]CustomerName;*)
If ([Customer]MobilePhone>"")
QUERY SELECTION([Customer]; | ;[Customer]MobilePhone=[Customer]MobilePhone;*)
End if 
If ([Customer]PhonePrivate>"")
QUERY SELECTION([Customer]; | ;[Customer]PhonePrivate=[Customer]PhonePrivate;*)
End if 
If ([Customer]EmailAddress>"")
QUERY SELECTION([Customer]; | ;[Customer]EmailAddress=[Customer]EmailAddress;*)
End if 
QUERY SELECTION([Customer])
Else 
$Repeat:=0
End if 
SET QUERY DESTINATION(Into current selection)
If ($Repeat>1)
ADD TO SET([Customer];"Repeat")
End if 
NEXT RECORD([Agreement])
End for 
USE SET("Repeat")
CLEAR SET("Repeat")
ORDER BY([Customer];[Customer]CustomerCode;>)
$Path:=Test path name(<>sExportPath+"Customer.4SI")
If ($Path=1) & (Records in selection([Customer])>0)
$ExportFacCust:=$ExportFacCust+1
DOCUMENT TO BLOB(<>sExportPath+"Customer.4SI";$ExportProject)
//EXPORT DATA(<>sExportPath+"KSSRepeatCustomers"+String(Year of($Date))+String(Month of($Date))+String(Day of($Date))+".txt";$ExportProject)
EXPORT DATA(<>sExportPath+"KSSRepeatCustomers"+yyyymmdd ($Date)+".txt";$ExportProject)
End if 
End if 

If ($ExportFacCust>1)//want to only export Facility and Customer data if they are deliberately exporting other data
$t:=Char(9)
//$Doc:=Create document(<>sExportPath+"Facility"+String(Year of($Date))+String(Month of($Date))+String(Day of($Date));"TEXT") //FB11193
$Doc:=Create document(<>sExportPath+"Facility"+yyyymmdd ($Date);"TEXT")//FB11193
SEND PACKET($Doc;"FacilityCode"+$t+"FacilityName"+$t+"LastDaily"+$t+"LastBanking"+$t+"LastBankRec"+$t)
SEND PACKET($Doc;"BankRecBal"+$t+"UnrecTot"+$t+"CantModPrior"+$t+"CantModUpdated"+$t)
SEND PACKET($Doc;"EventSeqNo"+$t+"GLCodeExt"+$t+"NextAgreeNo"+$t+"NextReserveNo"+$t)
SEND PACKET($Doc;"ReCalcActivity"+$t+"SyncingOn"+$t+"StockSysStart"+$t+"TrxSeqNo"+$t)
SEND PACKET($Doc;"WeekEndDay"+$t+"YearStartDate"+$t+"LastGateDate"+$t+"LastGateLoad"+$t)
SEND PACKET($Doc;"LastGateTime"+$t+"LastLogSent"+$t+"LastLogTime"+$t+"LastUpdateCheck"+$t)
SEND PACKET($Doc;"Version"+$t+"VersionDate"+$t)
SEND PACKET($Doc;"BankAccountName"+$t+"BankAccountNo"+$t+"BankName"+$t+"BankBranch"+$t+"TaxNo"+$t)
SEND PACKET($Doc;"Address"+$t+"City"+$t+"State"+$t+"PostZIPCode"+$t)
SEND PACKET($Doc;"CCMerchant"+$t+"DDMerchant"+$t+"SMSMerchant"+Char(Carriage return)+Char(Line feed))
ORDER BY([Facility];[Facility]FacilityCode;>)
For ($j;1;Records in selection([Facility]))
If ([Facility]SyncingOn=True)
$SyncingOn:="True"
Else 
$SyncingOn:="False"
End if 
SEND PACKET($Doc;[Facility]FacilityCode+$t+[Facility]FacilityName+$t+String([Facility]LastDaily;ISO date)+$t+String([Facility]LastBanking;ISO date)+$t+String([Facility]LastBankRec;ISO date)+$t)
SEND PACKET($Doc;String([Facility]BankRecBal)+$t+String([Facility]UnrecTot)+$t+String([Facility]CantModPrior;ISO date)+$t+String([Facility]CantModUpdated;ISO date)+$t)
SEND PACKET($Doc;String([Facility]EventSeqNo)+$t+[Facility]GLCodeExt+$t+String([Facility]NextAgreeNo)+$t+String([Facility]NextReserveNo)+$t)
SEND PACKET($Doc;String([Facility]ReCalcActivity)+$t+$SyncingOn+$t+String([Facility]StockSysStart)+$t+String([Facility]TrxSeqNo)+$t)
SEND PACKET($Doc;String([Facility]WeekEndDay)+$t+String([Facility]YearStartDate;ISO date)+$t+String([Facility]LastGateDate;ISO date)+$t+String([Facility]LastGateLoad;ISO date)+$t)
SEND PACKET($Doc;String([Facility]LastGateTime;ISO time)+$t+String(UTCDate ([Facility]LastSyncTime;False;[Facility]LastSyncDate);ISO date)+$t+String(UTCTime ([Facility]LastSyncTime;False);ISO time)+$t+String([Facility]LastUpdateCheck;ISO date)+$t)
SEND PACKET($Doc;String([Facility]Version)+$t+String([Facility]VersionDate)+$t)
SEND PACKET($Doc;[Facility]BankAcName+$t+[Facility]BankAcNo+$t+[Facility]BankName+$t+[Facility]BankBranch+$t+[Facility]TaxNumber+$t)
SEND PACKET($Doc;[Facility]Address+$t+[Facility]City+$t+[Facility]State+$t+[Facility]PostZIPCode+$t)
SEND PACKET($Doc;[Facility]MerchantDetails+$t+[Facility]DDAccountDetails+$t+[Facility]SMSAcctDetails+Char(Carriage return)+Char(Line feed))
NEXT RECORD([Facility])
End for 
CLOSE DOCUMENT($Doc)
End if 

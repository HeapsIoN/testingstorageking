//%attributes = {"lang":"en"} comment added and reserved by 4D.
SyncRecordLog ("Storman Update: AU_CryptoPlugin: Start";"UpdateLog")
// ----------------------------------------------------
// User name (OS): Johnno
// Date and time: 25/01/17, 16:18:03
// ----------------------------------------------------
// Method: AU_CryptoPlugin
// Description
// 
//
// Parameters
// ----------------------------------------------------



C_TEXT($DownloadPath)
C_TEXT($extra_path;$App;$AppFolder;$zipfile)
C_LONGINT($lngth)

ALL RECORDS([Facility])
READ WRITE([Facility])

If (Records in selection([Facility])=0)
If (<>sFacility="ST@")
QUERY([Facility];[Facility]FacilityCode="STHOF")
Else 
SetFacility 
End if 
End if 


$App:=Application file
$App:=Replace string($App;"Storman.exe";"")


SyncRecordLog ("Storman Update: AU_CryptoPlugin: Application path: "+$App;"UpdateLog")

$DownloadPath:=[Facility]DownloadFolder+"Extra"+Folder separator
SyncRecordLog ("Storman Update: AU_CryptoPlugin: Extra files path: "+$DownloadPath;"UpdateLog")

If (Test path name($DownloadPath)=Is a folder)

DOCUMENT LIST($DownloadPath;Files)

For ($c;1;Size of array(Files))
SyncRecordLog ("Storman Update: AU_CryptoPlugin: Extra file included with this update "+Files{$c};"UpdateLog")
End for 


For ($b;1;Size of array(Files))

Case of 
: (Test path name($DownloadPath+Files{$b})=Is a document)

$lngth:=Length(Files{$b})
If (Substring(Files{$b};$lngth-2;3)=".sm")

$Doc:=Open document($DownloadPath+Files{$b})
RECEIVE PACKET($Doc;$Location;Char(13))
CLOSE DOCUMENT($Doc)
$zipfile:=Substring(Files{$b};1;$lngth-2)+"zip"

If (Test path name($DownloadPath+$zipfile)=Is a document)
$AppFolder:=$App+$Location

If (Test path name($AppFolder+Folder separator+$zipfile)=Is a document)
SyncRecordLog ("Storman Update: AU_CryptoPlugin: "+$AppFolder+Folder separator+$zipfile+" already exists";"UpdateLog")
Else 
COPY DOCUMENT($DownloadPath+$zipfile;$AppFolder+Folder separator)
SyncRecordLog ("Storman Update: AU_CryptoPlugin: Copying file "+$DownloadPath+$zipfile;"UpdateLog")
SyncRecordLog ("Storman Update: AU_CryptoPlugin: Copying file to "+$AppFolder;"UpdateLog")
If (AU_Unzip2 ($AppFolder;$zipfile))
DELETE DOCUMENT($AppFolder+Folder separator+$zipfile)
End if 
End if 

End if 
End if 
End case 

End for 
End if 

SyncRecordLog ("Storman Update: AU_CryptoPlugin: End";"UpdateLog")


//For ($b;1;Size of array(Folders))

//Case of 

//: (Test path name(Files{$b})=Is a document)
//SyncRecordLog ("Storman Update: AU_ExtraFiles: Extra file included with this update "+Files{$b};"UpdateLog")

//$Doc:=Open document([Facility]DownloadFolder+Folder separator+"Extra"+Files{$b}+".sm")
//RECEIVE PACKET($Doc;$Location;Char(13))
//CLOSE DOCUMENT($Doc)

//SyncRecordLog ("Storman Update: AU_ExtraFiles: Extra file location "+$Location;"UpdateLog")

//COPY DOCUMENT(Files{$b};$Location)

//SyncRecordLog ("Storman Update: AU_ExtraFiles: Copying file "+Files{$b};"UpdateLog")
//SyncRecordLog ("Storman Update: AU_ExtraFiles: Copying file to "+$Location;"UpdateLog")




//: (Test path name([Facility]DownloadFolder+Folder separator+"Extra"+Folder separator+Folders{$b})=Is a folder)
//SyncRecordLog ("Storman Update: AU_ExtraFiles: Extra folder included with this update "+Folders{$b};"UpdateLog")
//$Folder:=Files{$b}

//$Doc:=Open document([Facility]DownloadFolder+Folder separator+"Extra"+Folder separator+Folders{$b}+".sm")
//RECEIVE PACKET($Doc;$Location;Char(13))
//CLOSE DOCUMENT($Doc)

//SyncRecordLog ("Storman Update: AU_ExtraFiles: Extra folder location "+$Location;"UpdateLog")

//COPY DOCUMENT([Facility]DownloadFolder+Folder separator+"Extra"+Folder separator+Folders{$b}+Folder separator;[Facility]DownloadFolder+Folder separator+$Location)

//SyncRecordLog ("Storman Update: AU_ExtraFiles: Copying folder "+Folders{$b};"UpdateLog")
//SyncRecordLog ("Storman Update: AU_ExtraFiles: Copying folder to "+$Location;"UpdateLog")

//End case 



//End for 










//$App:=Application file
//$AppFolder:=Replace string($App;"Storman.exe";"")
//$NewBuild:=[Facility]DownloadFolder+Folder separator  //+"Storman"+Folder separator

//SyncRecordLog ("Storman Update: AU_CopyInstallation: Copying Storman installation from "+$AppFolder;"UpdateLog")
//SyncRecordLog ("Storman Update: AU_CopyInstallation: Copying Storman installation to "+$NewBuild;"UpdateLog")


//COPY DOCUMENT($AppFolder;$NewBuild)

//$OldStructure:=[Facility]DownloadFolder+Folder separator+"Storman"+Folder separator+"Database"+Folder separator+"StormanOld"+String(<>iVersion)+Folder separator
//$Old4DC:=[Facility]DownloadFolder+Folder separator+"Storman"+Folder separator+"Database"+Folder separator+"Storman.4DC"
//$Old4DIndy:=[Facility]DownloadFolder+Folder separator+"Storman"+Folder separator+"Database"+Folder separator+"Storman.4DIndy"


//SyncRecordLog ("Storman Update: AU_CopyInstallation: Backing up old strucutre "+$Old4DC;"UpdateLog")
//SyncRecordLog ("Storman Update: AU_CopyInstallation: Backing up old strucutre "+$Old4DIndy;"UpdateLog")
//SyncRecordLog ("Storman Update: AU_CopyInstallation: Backing up old strucutre to "+$OldStructure;"UpdateLog")

//CREATE FOLDER($OldStructure)
//COPY DOCUMENT($Old4DC;$OldStructure)
//COPY DOCUMENT($Old4DIndy;$OldStructure)



//SyncRecordLog ("Storman Update: AU_CopyInstallation: End";"UpdateLog")












//SyncRecordLog ("Storman Update: AU_AutoCleanUp: Start";"UpdateLog")
//  // ----------------------------------------------------
//  // User name (OS): Johnno
//  // Date and time: 19/11/16, 14:36:50
//  // ----------------------------------------------------
//  // Method: AU_AutoCleanUp
//  // Description
//  // 
//  //
//  // Parameters
//  // ----------------------------------------------------


//If (Records in selection([Facility])=0)
//If (<>sFacility="ST@")
//QUERY([Facility];[Facility]FacilityCode="STHOF")
//Else 
//SetFacility 
//End if 
//End if 

//$TempPath:=Get 4D folder(Current resources folder)+"HTML"+Folder separator
//$Bat:="RD /S /Q "+Char(Double quote)+[Facility]DownloadFolder+Folder separator+"Storman"+Char(Double quote)

//$Doc:=Create document($TempPath+"Cleaup.bat")
//SEND PACKET($Doc;$Bat)
//CLOSE DOCUMENT($Doc)

//LAUNCH EXTERNAL PROCESS($TempPath+"Cleaup.bat")

//SyncRecordLog ("Storman Update: AU_AutoCleanUp: Removing temp folder "+[Facility]DownloadFolder+Folder separator+"Storman";"UpdateLog")

//DELETE DOCUMENT($TempPath+"Cleaup.bat")



//DOCUMENT LIST([Facility]DownloadFolder;Files)

//For ($a;1;Size of array(Files))

//SyncRecordLog ("Storman Update: AU_AutoCleanUp: Removing temp file "+[Facility]DownloadFolder+Folder separator+Files{$a};"UpdateLog")
//DELETE DOCUMENT([Facility]DownloadFolder+Folder separator+Files{$a})

//End for 

//AU_ClearUpdateRecords 




//SyncRecordLog ("Storman Update: AU_AutoCleanUp: End";"UpdateLog")



//  //  //Returns OK=1 if successful 

//  //C_TEXT($1;$tFolderPath)ÊÊ  //The path to the folder we want to delete (should end with a delimiter) 

//  //$tFolderPath:=$1

//  //C_LONGINT($x)
//  //C_TEXT($tFilePath)
//  //ARRAY TEXT($atFileName;0)
//  //ARRAY TEXT($atFolderName;0)

//  //OK:=1

//  //If (Test path name($tFolderPath)=Is a directory)
//  //ÊÊ  //First delete documents 
//  //DOCUMENT LIST($tFolderPath;$atFileName)
//  //For ($x;1;Size of array($atFileName))
//  //$tFilePath:=$tFolderPath+$atFileName{$x}
//  //Diagnostic_OnErrCall("File_OnErr_General")
//  //DELETE DOCUMENT($tFilePath)
//  //Diagnostic_OnErrCall("")
//  //End for 

//  //ÊÊ  //Delete the folders 
//  //FOLDER LIST($tFolderPath;$atFolderName)
//  //For ($x;1;Size of array($atFolderName))
//  //File_DeleteFolder($tFolderPath+$atFolderName{$x}+×tDirectorySymbol)ÊÊ  //Recursively nest here 
//  //End for 

//  //ÊÊ  //Delete this folder last 
//  //Diagnostic_OnErrCall("File_OnErr_General")
//  //DELETE FOLDER($tFolderPath)
//  //Diagnostic_OnErrCall("")

//  //End if 















//  //C_LONGINT(iLevel)

//  //If (iLevel=0)  // we are in the first loop
//  //iLevel:=1
//  //yCanDeleteAll:=True
//  ////ON ERR CALL("ErrorHandler")
//  //Else 
//  //iLevel:=iLevel+1
//  //End if 
//  //PLATFORM PROPERTIES($iPlatform;$iSystem)
//  //ARRAY TEXT($FolderList;0)
//  //If ($iPlatform=Windows)
//  //$DirSep:="\\"
//  //Else 
//  //$DirSep:=":"
//  //End if 
//  //If (Test path name($Path)=Is a folder)
//  //  // first delete all the files
//  //ARRAY TEXT($aFileList;0)
//  //DOCUMENT LIST($Path;$aFileList)
//  //For ($i;1;Size of array($aFileList))
//  //$tDocument:=$Path+$aFileList{$i}
//  //DELETE DOCUMENT($tDocument)
//  //If (OK=0)  // the file couldn't be deleted
//  //yCanDeleteAll:=False
//  //End if 
//  //End for 
//  //FOLDER LIST($Path;$FolderList)
//  //For ($i;1;Size of array($FolderList))
//  //Delete Folder($Path+$DirSep+$FolderList{$i}+$DirSep)
//  //End for 

//  //DELETE FOLDER($Path)
//  //End if 
//  //iLevel:=iLevel-1
//  //If (iLevel=0)
//  //ON ERR CALL("")
//  //End if 
//  //$0:=yCanDeleteAll








//  //  //  //DOCUMENT LIST("C:\\4D\\StormanV15Build\\Client Server executable\\StorMan Client";Files)
//  //  //  //$Path:="C:\\4D\\StormanV15Build\\Client Server executable\\StorMan Client"+Folder separator
//  //  //  // 
//  //  //  //For ($a;1;Size of array(Files))

//  //  //  //DELETE DOCUMENT($Path+Files{$a})

//  //  //  //end for




//  //FOLDER LIST("C:\\4D\\StormanV15Build\\Client Server executable\\StorMan Client";Folders)
//  //$Path:="C:\\4D\\StormanV15Build\\Client Server executable\\StorMan Client"+Folder separator

//  //For ($a;1;Size of array(Folders))



//  //FOLDER LIST("C:\\4D\\StormanV15Build\\Client Server executable\\StorMan Client"+Folder separator+Folders{$a};Folders2)

//  //If (Size of array(Folders2)>0)





//  //  //else
//  //  //DELETE folder($Path+Folder separator+Folders{$a})
//  //  //End if 


//  //  //$Path:="C:\\4D\\StormanV15Build\\Client Server executable\\StorMan Client"


//  //  //End for 
//%attributes = {"lang":"en"} comment added and reserved by 4D.
C_POINTER($p)
C_BOOLEAN($Shift)
C_TEXT(Test_TextBlob;vOpenBalText;vCloseBalText)
vReprintCopy:=False
vtInvAgree:=""
//$CustCode:=[Customer]CustomerCode
$Resv:=False
C_BOOLEAN(forCompleted)
forCompleted:=False
If (Count parameters=1)
$Resv:=$1
End if 
$Shift:=False
If (Shift down)
$Shift:=True
End if 
QUERY([Notices];[Notices]FacilityCode=<>sFacility;*)
QUERY([Notices]; & ;[Notices]RuleNotice=False;*)
If ($Resv)
QUERY([Notices]; & ;[Notices]NoticePlanNo=0;*)
Else 
QUERY([Notices]; & ;[Notices]NoticePlanNo=[Agreement]NoticePlanNo;*)//Added 4.1.0
End if 
//QUERY([Notices]; & ;[Notices]RefDateField>10;*)  `Added 4.1.0 to avoid getting movein or moveout letters
//QUERY([Notices]; & ;[Notices]DaysAfter<0;*)
QUERY([Notices]; & ;[Notices]EmailSubject>"  ";*)
QUERY([Notices]; & ;[Notices]HideNotice=False;*)
QUERY([Notices]; & ;[Notices]EmailBlank=False)
$Print:=True
If (Records in selection([Notices])>1)
ORDER BY([Notices];[Notices]RefDateField;>;[Notices]DaysAfter;>)//NextBillDate to come first
$Print:=False
ORDER BY([Notices];[Notices]Description;>)
ARRAY TEXT(asNoticeDesc;0)
SELECTION TO ARRAY([Notices]Description;asNoticeDesc)
vTitle:=Get localized string("Select Email")
Open window((Screen width/2)-199;(Screen height/2)-180;(Screen width/2)+199;(Screen height/2)+180;5;Get localized string("Select Email"))
DIALOG([Notices];"SelectNotice")
CLOSE WINDOW
If (OK=1)
If (asNoticeDesc>=1)
QUERY SELECTION([Notices];[Notices]Description=asNoticeDesc{asNoticeDesc})
$Print:=True
End if 
End if 
End if 
Case of 
: (Records in selection([Notices])=0)
AlertMessage (Get localized string("There are no email notices set up for reminders. Please select Notice Plans from the Maintenance menu, locate your reminder notice and ensure you configure the email options for this notice."))
: ([Customer]EmailAddress="") | (Position(Char(64);[Customer]EmailAddress)=0)
AlertMessage (Get localized string("The customer's email address is not valid. Ensure your customer's email address contains an @ sign, and only letters, numbers, hyphens or underscores. Other symbols are not supported."))
: ([Notices]EmailBlank)
AlertMessage (Get localized string("The email reminder notice is missing an email subject. Please select Notice Plans from the Maintenance menu, locate your reminder notice and add an email subject for the notice."))
Else 
If ($Print=True)
CREATE RECORD([Letters])
If ($Resv)
[Letters]AgreeNo:=[Reservation]RReserveNo
Else 
[Letters]AgreeNo:=[Agreement]RAgreeNo
End if 
[Letters]LetterDesc:=[Notices]Description
[Letters]DateSent:=Current date
$p:=->[Notices]Email
[Letters]SentViaEmail:=True
[Letters]Custom1:=[Notices]EmailSubject
[Letters]SentwithInv:=True
BLOB PROPERTIES($p->;$Compressed)
If ($Compressed#Is not compressed)
EXPAND BLOB($p->)
End if 
$emailText:=Convert to text($p->;"UTF-8")
$emailText:=ProcessStormanHTMLTags ($emailText)
CONVERT FROM TEXT($emailText;"UTF-8";[Letters]LetterBLOB)
[Letters]Custom1:=ProcessStormanHTMLTags ([Letters]Custom1)
//[Letters]LetterBLOB:=FreezeLetter ($p;True)
COMPRESS BLOB([Letters]LetterBLOB)
SAVE RECORD([Letters])
If ($Resv)
QUERY([Letters];[Letters]AgreeNo=[Reservation]RReserveNo)
Else 
QUERY([Letters];[Letters]AgreeNo=[Agreement]RAgreeNo)
End if 
ORDER BY([Letters];[Letters]DateSent;<)
CREATE RECORD([Message])
[Message]Subject:=[Notices]EmailSubject
[Message]Subject:=ProcessStormanHTMLTags ([Message]Subject)
[Message]Address:=[Customer]EmailAddress
[Message]OutIn:=True
[Message]MsgDate:=Current date
[Message]MsgTime:=Current time
[Message]Facility:=Substring([Customer]CustomerCode;1;5)
BLOB PROPERTIES([Letters]LetterBLOB;$Compressed)
If ($Compressed#Is not compressed)
EXPAND BLOB([Letters]LetterBLOB)
End if 
[Message]EmailMsg:=[Letters]LetterBLOB
COMPRESS BLOB([Letters]LetterBLOB)
//$Document:=<>sTutPath+"Email"+[Letters]AgreeNo
//If ((Test path name($Document)=Is a document))
//$vhDocRef:=Open document($Document)  // Select the document of your choice
//CLOSE DOCUMENT($vhDocRef)
//DOCUMENT TO BLOB(Document;$Blob74)
//$Blobtext74:=BLOB to text($Blob74;Mac text without length)
//$Blobtext74:=Replace string($Blobtext74;"./images/";<>sTutPath+"images\\")
//$Blobtext74:=Replace string($Blobtext74;"<p>";"<br>")
//$Blobtext74:=Replace string($Blobtext74;"</p>";"<br>")
//TEXT TO BLOB($Blobtext74;[Message]EmailMsg;Mac text without length)
//DELETE DOCUMENT($Document)
//Else 
//[Message]MsgBody:=vLeg
//End if 
If ([Facility]UsePDFWriter) | (<>iPlatform=2)
If ([Facility]InvUseAgrBalFwd=True)
If ($Resv)
[Message]Attachments:=<>sPDFDocsPath+"Receipt"+[Reservation]RReserveNo+".pdf"
Else 
[Message]Attachments:=<>sPDFDocsPath+"Receipt"+[Agreement]RAgreeNo+".pdf"
End if 
Else 
If ($Resv)
[Message]Attachments:=<>sPDFDocsPath+"Receipt"+[Reservation]CustomerCode+".pdf"
Else 
[Message]Attachments:=<>sPDFDocsPath+"Receipt"+[Agreement]CustomerCode+".pdf"
End if 
End if 
<>tPrintPDF:=True
vPDFName:=[Facility]PDFName
$Name:=SelectPDFDoc (1)
If ($Name="Failed")
ABORT
End if 
SelectPDFDoc (2;[Message]Attachments)
SET PRINT PREVIEW(False)
If ($Shift=True)
SAVE RECORD([Customer])
CREATE SET([Customer];"CustRestore")
If ($Resv)
SAVE RECORD([Reservation])
CREATE SET([Reservation];"ResRestore")
Else 
SAVE RECORD([Agreement])
CREATE SET([Agreement];"AgreeRestore")
End if 
CREATE SET([Trxs];"ToRestore")
FORM SET OUTPUT([Trxs];"InvReceipt")

PrintSelection ("P*";->[Trxs])
FORM SET OUTPUT([Trxs];"TransOut")

USE SET("ToRestore")
CLEAR SET("ToRestore")
USE SET("CustRestore")
CLEAR SET("CustRestore")
If ($Resv)
USE SET("ResRestore")
CLEAR SET("ResRestore")
Else 
USE SET("AgreeRestore")
CLEAR SET("AgreeRestore")
End if 
Else 
OBJECT SET VISIBLE(bAbort;False)
If (In transaction)
SAVE RECORD([Agreement])
SAVE RECORD([Reservation])
SAVE RECORD([Customer])
VALIDATE TRANSACTION
START TRANSACTION
End if 
CREATE SET([Trxs];"$TransList")
If (vMisc=True)
USE SET("UserSet")
CREATE EMPTY SET([Trxs];"PrintAll")
ADD TO SET([Trxs];"PrintAll")
//ALL SUBRECORDS([Transaction]MiscDetls)
//ARRAY LONGINT(aSeqNo;Records in subselection([Transaction]MiscDetls))
//FIRST SUBRECORD([Transaction]MiscDetls)
vAddr1:=""
$Narration:=[Trxs]Narration
For ($i;1;5)
$Pos:=Position(Char(17);$Narration;*)
$String:=Substring($Narration;1;$Pos-1)
$Narration:=Substring($Narration;$Pos+1)
Case of 

: ($i=1)
vAddr2:=$String//[Transaction]MiscDetls'CustName
: ($i=2)
vAddr3:=$String//[Transaction]MiscDetls'MailAddress
: ($i=3)
vAddr4:=$String//[Transaction]MiscDetls'MailCity
: ($i=4)
vAddr5:=$String//[Transaction]MiscDetls'MailState
: ($i=5)
vAddr6:=$String//[Transaction]MiscDetls'MailPostZIPCode
Else 
//do nothing 
End case 
End for 
vAddr7:=""
//vAddr1:=""
//vAddr2:=[Transaction]MiscDetls'CustName
//vAddr3:=[Transaction]MiscDetls'MailAddress
//vAddr4:=[Transaction]MiscDetls'MailCity
//vAddr5:=[Transaction]MiscDetls'MailState
//vAddr6:=[Transaction]MiscDetls'MailPostZIPCode
//vAddr7:=""
//For ($i;1;Records in subselection([Transaction]MiscDetls))
//aSeqNo{$i}:=[Transaction]MiscDetls'SeqNo
//NEXT SUBRECORD([Transaction]MiscDetls)  //InvRecCode
//End for 
$Facility:=Substring([Trxs]CustomerCode;1;5)
For ($i;1;Size of array(aSeqNo))
QUERY([Trxs];[Trxs]CustomerCode=$Facility+"MISCL";*)
QUERY([Trxs]; & ;[Trxs]SeqNo=aSeqNo{$i})
ADD TO SET([Trxs];"PrintAll")
End for 
REDUCE SELECTION([Unit];0)
REDUCE SELECTION([Agreement];0)
USE SET("PrintAll")
vReprintCopy:=False
If ([Facility]InvStatement>0)
QUERY SELECTION([Trxs];[Trxs]Charge=True)
//CREATE SET("PrintAll")
If ([Trxs]InvNo=0)
CREATE SET([Trxs];"SearchInvNo")
$InvContinue:=False

If ([Facility]CentralAddress="") | (<>sProduct="M@")
If (Not(Semaphore("<>bNextInvNo";1800)))
$InvContinue:=True
End if 
End if 
If ($InvContinue)
//10285

If (Application type=4D Remote mode)
GET PROCESS VARIABLE(-1;<>aiNextInvNo;<>aiNextInvNo)
GET PROCESS VARIABLE(-1;<>asAllSiteCodes;<>asAllSiteCodes)
End if 
$arraypos:=Find in array(<>asAllSiteCodes;[Facility]FacilityCode)

<>aiNextInvNo{$arraypos}:=<>aiNextInvNo{$arraypos}-1
Repeat 
<>aiNextInvNo{$arraypos}:=<>aiNextInvNo{$arraypos}+1
QUERY([Trxs];[Trxs]AgreeNo=[Facility]FacilityCode+"@";*)
QUERY([Trxs]; & ;[Trxs]InvNo>=<>aiNextInvNo{$arraypos})
Until (Records in selection([Trxs])<1)
USE SET("SearchInvNo")
CLEAR SET("SearchInvNo")
APPLY TO SELECTION([Trxs];[Trxs]InvDate:=Current date)
APPLY TO SELECTION([Trxs];[Trxs]InvNo:=<>aiNextInvNo{$arraypos})
APPLY TO SELECTION([Trxs];[Trxs]SetMatch:=False)
[Facility]NextInvNo:=<>aiNextInvNo{$arraypos}+1
<>aiNextInvNo{$arraypos}:=[Facility]NextInvNo
If (Application type=4D Remote mode)
VARIABLE TO VARIABLE(-1;<>aiNextInvNo;<>aiNextInvNo)
End if 
CLEAR SEMAPHORE("<>bNextInvNo")
Else 
$InvNo:=InvoiceNumber 
USE SET("SearchInvNo")
APPLY TO SELECTION([Trxs];[Trxs]InvDate:=Current date)
APPLY TO SELECTION([Trxs];[Trxs]InvNo:=$InvNo)
APPLY TO SELECTION([Trxs];[Trxs]SetMatch:=False)
End if 
Else 
vReprintCopy:=True
End if 
End if 
USE SET("PrintAll")
CLEAR SET("PrintAll")
ORDER BY([Trxs];[Trxs]CustomerCode;>;[Trxs]TrxDate;>;[Trxs]Charge;<;[Trxs]TotAmt;<)
RELATE ONE([Trxs]CustomerCode)
[Customer]BalFwdDate:=[Trxs]TrxDate-1

PrintInvRecCode (2;"";True)
Else //Print normal invoices
If (Records in selection([Trxs])>0)
CREATE SET([Trxs];"PrintAll")

USE SET("PrintAll")
CREATE EMPTY SET([Trxs];"ToPrint")
For ($i;1;Records in selection([Trxs]))
GOTO SELECTED RECORD([Trxs];$i)
//RELATE ONE([Transaction]AgreeNo)

If ($Resv=True)
QUERY([Unit];[Unit]ReservedTo=[Trxs]AgreeNo)
If ([Facility]InvUseAgrBalFwd)
QUERY([Trxs];[Trxs]AgreeNo=[Reservation]RReserveNo)
Else 
QUERY([Trxs];[Trxs]CustomerCode=[Reservation]CustomerCode)
End if 
Else 
QUERY([Unit];[Unit]AgreeNo=[Trxs]AgreeNo)
If ([Facility]InvUseAgrBalFwd)
QUERY([Trxs];[Trxs]AgreeNo=[Agreement]RAgreeNo)
Else 
QUERY([Trxs];[Trxs]CustomerCode=[Agreement]CustomerCode)
End if 
End if 
ORDER BY([Trxs];[Trxs]TrxDate;>)
vReprintCopy:=False

If ($Resv=True)
PrintInvRecCode (1;[Reservation]RReserveNo)
Else 
PrintInvRecCode (1)
End if 
USE SET("PrintAll")
End for 
USE SET("ToPrint")
If ([Facility]InvUseAgrBalFwd)
ORDER BY([Trxs];[Trxs]AgreeNo;>;[Trxs]TrxDate;>;[Trxs]Charge;<;[Trxs]TotAmt;<)
Else 
ORDER BY([Trxs];[Trxs]CustomerCode;>;[Trxs]TrxDate;>;[Trxs]Charge;<;[Trxs]TotAmt;<)
End if 
//If ([Facility]InvStatement=1)`why is this here when it is a receipt this code is used for?
//QUERY SELECTION([Transaction];[Transaction]Charge=True)
//End if 
If ($Resv=True)
PrintInvRecCode (2;[Reservation]RReserveNo)
Else 
PrintInvRecCode (2)
End if 
Else 
//AlertMessage (Get localized string("Please select transactions to print invoices/receipts for, first"))
AlertMessage ("Please select a transaction!")
End if 
End if 

End if 
CREATE SET([Trxs];"Temp")
FIRST RECORD([Trxs])

FORM SET OUTPUT([Trxs];"TransOut")
OBJECT SET ENABLED(bAbort;False)
If (In transaction)
SAVE RECORD([Agreement])
SAVE RECORD([Reservation])
SAVE RECORD([Customer])
VALIDATE TRANSACTION
START TRANSACTION
End if 
USE SET("Temp")
CLEAR SET("Temp")
End if 
SelectPDFDoc (3;$Name)
SelectPDFDoc (4;[Message]Attachments)
<>tPrintPDF:=False
$Document:=[Message]Attachments
If (Test path name($Document)=Is a document)
DOCUMENT TO BLOB($Document;[Message]AttachmentBlob)
COMPRESS BLOB([Message]AttachmentBlob)
If ($Resv)
If ([Facility]InvUseAgrBalFwd=True)
[Message]Attachments:="Receipt"+[Reservation]RReserveNo+".pdf"
Else 
[Message]Attachments:="Receipt"+[Reservation]CustomerCode+".pdf"
End if 
Else 
If ([Facility]InvUseAgrBalFwd=True)
[Message]Attachments:="Receipt"+[Agreement]RAgreeNo+".pdf"
Else 
[Message]Attachments:="Receipt"+[Agreement]CustomerCode+".pdf"
End if 
End if 
Else 
AlertMessage (Get localized string("The PDF document could not be created, and is not attached to this Email message!"))
End if 
Else 
AlertMessage (Get localized string("The PDF writer is not available, or not set up correctly. Please check your PDF settings via the Maintenance menu -> System Setup -> Merch Details tab. For PDF printer reinstallation advice, search our Online Support Knowledgebase for: #UTLPXRI01"))
End if 
SAVE RECORD([Message])

ReCalc 

[Letters]Attachments:=<>sPDFDocsPath+[Message]Attachments//fb11178

ConfirmTwo (Get localized string("Do you wish to edit this email message?");Get localized string("Yes");Get localized string("No"))
If (OK=1)
FORM SET INPUT([Message];"MessageEdit")
//Open HTML Email Editor
READ WRITE([Message])
Test_TextBlob:=Convert to text([Message]EmailMsg;"UTF-8")
Test_TheID:=Record number([Message])
Test_Mailpath:=""
//$Window:=Open window((Screen width/2)-409;(Screen height/2)-278;(Screen width/2)+409;(Screen height/2)+278;5;Get localized string("Email Message"))
$Window:=Open window((Screen width/2)-408;(Screen height/2)-338;(Screen width/2)+408;(Screen height/2)+338;4096;Get localized string("Email Message"))
MODIFY RECORD([Message];*)

//EXPAND BLOB([Letters]LetterBLOB)
//wrMessage:=WR New offscreen area 

//BLOB TO DOCUMENT(<>sTutPath+"Receipt"+[Letters]AgreeNo+".htm";[Message]EmailMsg)

//WR OPEN DOCUMENT (wrMessage;<>sTutPath+"Receipt"+[Letters]AgreeNo+".htm";"HTM3")
//[Letters]LetterBLOB:=WR Area to blob (wrMessage;1)
[Letters]LetterDesc:=[Message]Subject
[Letters]LetterBLOB:=[Message]EmailMsg
//WR DELETE OFFSCREEN AREA (wrMessage)
COMPRESS BLOB([Letters]LetterBLOB)
COMPRESS BLOB([Message]EmailMsg)
//SAVE RECORD([Letters])
CLOSE WINDOW($Window)
UNLOAD RECORD([Message])
End if 

SAVE RECORD([Letters])//11178
QUERY([Message];[Message]OutIn=True;*)
QUERY([Message]; & ;[Message]SentRead=False;*)
QUERY([Message]; & ;[Message]Facility=<>sFacility)
If (Records in selection([Message])>0)
READ WRITE([Message])
CheckMail 
READ ONLY([Message])
UNLOAD RECORD([Message])
End if 
OBJECT SET VISIBLE(bAbort;False)
If (In transaction)
SAVE RECORD([Agreement])
SAVE RECORD([Reservation])
SAVE RECORD([Customer])
VALIDATE TRANSACTION
START TRANSACTION
End if 
End case 
//%attributes = {"lang":"en"} comment added and reserved by 4D.
C_BOOLEAN(forCompleted)
forCompleted:=False
vReprintCopy:=False
$Resv:=False
If (Count parameters>=1)//reservation
$Resv:=$1
End if 
SAVE RECORD([Customer])
CREATE SET([Customer];"CustRestore")
CREATE SET([Trxs];"ToRestore")
If ($Resv)
SAVE RECORD([Reservation])
CREATE SET([Reservation];"ResRestore")
QUERY([Unit];[Unit]ReservedTo=[Reservation]RReserveNo)
Else 
SAVE RECORD([Agreement])
CREATE SET([Agreement];"AgreeRestore")
QUERY([Unit];[Unit]AgreeNo=[Agreement]RAgreeNo)
End if 

CREATE EMPTY SET([Trxs];"ToPrint")

Case of 
: ([Facility]InvStatement=2)
If (Count parameters>1)
For ($n;1;Size of array(aiInvoiceNumber))
vReprintCopy:=True
If ($Resv=True)
QUERY([Trxs];[Trxs]AgreeNo=[Reservation]RReserveNo;*)
Else 
QUERY([Trxs];[Trxs]AgreeNo=[Agreement]RAgreeNo;*)
End if 
QUERY([Trxs]; & ;[Trxs]InvNo=aiInvoiceNumber{$n})
CREATE SET([Trxs];"SearchInvNo")
InvState2Calc 
USE SET("SearchInvNo")
CLEAR SET("SearchInvNo")
If ([Facility]InvUseAgrBalFwd)
ORDER BY([Trxs];[Trxs]AgreeNo;>;[Trxs]TrxDate;>;[Trxs]Charge;<;[Trxs]TotAmt;<)
Else 
ORDER BY([Trxs];[Trxs]CustomerCode;>;[Trxs]TrxDate;>;[Trxs]Charge;<;[Trxs]TotAmt;<)
End if 
If ($Resv)
//[Customer]FooterBalance:=Sum([Transaction]TotAmt)
//[Customer]BalFwd:=0
If (PrintInvRecCode (3;[Reservation]RReserveNo))
End if 
Else 
//[Customer]FooterBalance:=Sum([Transaction]TotAmt)
//[Customer]BalFwd:=0
//[Agreement]FooterBalance:=Sum([Transaction]TotAmt)
//[Agreement]BalFwd:=0
If (PrintInvRecCode (3))
End if 
End if 

//Start
QUERY([OtherChgs];[OtherChgs]AgreeNo=[Agreement]RAgreeNo)
If ([Agreement]BalanceOwing#([Agreement]LastBillAmt-[Agreement]LastDiscAmt+Sum([OtherChgs]Amount))) & ([Agreement]BalanceOwing#0)
If ([Facility]InvUseAgrBalFwd=True)
QUERY([Trxs];[Trxs]AgreeNo=[Agreement]RAgreeNo)
Else 
QUERY([Trxs];[Trxs]CustomerCode=[Agreement]CustomerCode)
End if 
CREATE SET([Trxs];"Temp")
FIRST RECORD([Trxs])
$Date1:=vBalFwdStart
$Date2:=adInvoiceDateListing{$n}
//If ([Agreement]PriorLastBill#!00/00/00!)
//$Date1:=[Agreement]PriorLastBill
//Else 
//$Date1:=[Agreement]LastBillDate
//End if 

If ([Facility]StatementLastZeroBal=True)
If ([Facility]InvUseAgrBalFwd=True)
If ([Reservation]RReserveNo>"")
$Date3:=CalculateLastZeroBalance (2)
Else 
$Date3:=CalculateLastZeroBalance (1)
End if 
Else 
$Date3:=CalculateLastZeroBalance (0)
End if 
Else 
$Date3:=$Date1
End if 

If ($Date3<$Date1)
$Date1:=$Date3
End if 

If ($Date1>Current date)
$Date1:=Current date
End if 

//LAST RECORD([Transaction])
//If ($Date1>[Transaction]TrxDate)
//$Date2:=$Date1
//Else 
//$Date2:=[Transaction]TrxDate
//End if 

vOpenBalText:=Get localized string("Opening balance as at")+" "+String($Date1)
vCloseBalText:=Get localized string("Closing balance as at")+" "+String($Date2)
If ([Facility]InvUseAgrBalFwd=True)
If ([Reservation]RReserveNo>"")
vOpenBal:=BalanceDateCalc (0;$Date1;True;[Reservation]RReserveNo)
vCloseBal:=BalanceDateCalc (0;$Date2;False;[Reservation]RReserveNo)
Else 
vOpenBal:=BalanceDateCalc (0;$Date1;True;[Agreement]RAgreeNo)
vCloseBal:=BalanceDateCalc (0;$Date2;False;[Agreement]RAgreeNo)
End if 
Else 
If ([Reservation]RReserveNo>"")
vOpenBal:=BalanceDateCalc (1;$Date1;True;[Reservation]CustomerCode)
vCloseBal:=BalanceDateCalc (1;$Date2;False;[Reservation]CustomerCode)
Else 
vOpenBal:=BalanceDateCalc (1;$Date1;True;[Agreement]CustomerCode)
vCloseBal:=BalanceDateCalc (1;$Date2;False;[Agreement]CustomerCode)
End if 
End if 
If ([Facility]InvStatement>0) & (Windows Ctrl down=False)
CREATE EMPTY SET([Trxs];"Statement")
QUERY SELECTION([Trxs];[Trxs]TrxDate>=$Date1;*)
QUERY SELECTION([Trxs]; & ;[Trxs]TrxDate<=$Date2;*)
QUERY SELECTION([Trxs]; & ;[Trxs]Charge=False)
For ($i;1;Records in selection([Trxs]))
ADD TO SET([Trxs];"Statement")
NEXT RECORD([Trxs])
End for 
USE SET("Temp")
QUERY SELECTION([Trxs];[Trxs]InvDate>=$Date1;*)
QUERY SELECTION([Trxs]; & ;[Trxs]InvDate<=$Date2;*)
QUERY SELECTION([Trxs]; & ;[Trxs]Charge=True)
For ($i;1;Records in selection([Trxs]))
ADD TO SET([Trxs];"Statement")
NEXT RECORD([Trxs])
End for 
USE SET("Statement")
ARRAY DATE(adTransactionDate;0)
ARRAY TEXT(asTransactionDescription;0)
ARRAY REAL(arTransactionCharge;0)
ARRAY REAL(arTransactionReceipt;0)
ARRAY LONGINT(aiTransactionInvNo;0)
DISTINCT VALUES([Trxs]InvNo;aiTransactionInvNo)
For ($i;1;Size of array(aiTransactionInvNo))
If (aiTransactionInvNo{$i}=0)
QUERY SELECTION([Trxs];[Trxs]InvNo=aiTransactionInvNo{$i})
For ($j;1;Records in selection([Trxs]))
INSERT IN ARRAY(adTransactionDate;Size of array(adTransactionDate)+1)
adTransactionDate{Size of array(adTransactionDate)}:=[Trxs]TrxDate
INSERT IN ARRAY(asTransactionDescription;Size of array(asTransactionDescription)+1)
asTransactionDescription{Size of array(asTransactionDescription)}:=[Trxs]Description
INSERT IN ARRAY(arTransactionCharge;Size of array(arTransactionCharge)+1)
arTransactionCharge{Size of array(arTransactionCharge)}:=0
INSERT IN ARRAY(arTransactionReceipt;Size of array(arTransactionReceipt)+1)
arTransactionReceipt{Size of array(arTransactionReceipt)}:=[Trxs]TotAmt
NEXT RECORD([Trxs])
End for 
Else 
QUERY SELECTION([Trxs];[Trxs]InvNo=aiTransactionInvNo{$i})
If ([Facility]StatementDetail)
For ($j;1;Records in selection([Trxs]))
INSERT IN ARRAY(adTransactionDate;Size of array(adTransactionDate)+1)
If ([Facility]InvStatement=2)
adTransactionDate{Size of array(adTransactionDate)}:=[Trxs]TrxDate
Else 
adTransactionDate{Size of array(adTransactionDate)}:=[Trxs]InvDate
End if 
INSERT IN ARRAY(asTransactionDescription;Size of array(asTransactionDescription)+1)
asTransactionDescription{Size of array(asTransactionDescription)}:="Invoice #"+String([Trxs]InvNo)+" "+[Trxs]Description
INSERT IN ARRAY(arTransactionCharge;Size of array(arTransactionCharge)+1)
arTransactionCharge{Size of array(arTransactionCharge)}:=[Trxs]TotAmt
INSERT IN ARRAY(arTransactionReceipt;Size of array(arTransactionReceipt)+1)
arTransactionReceipt{Size of array(arTransactionReceipt)}:=0
NEXT RECORD([Trxs])
End for 
Else 
INSERT IN ARRAY(adTransactionDate;Size of array(adTransactionDate)+1)
adTransactionDate{Size of array(adTransactionDate)}:=[Trxs]InvDate
INSERT IN ARRAY(asTransactionDescription;Size of array(asTransactionDescription)+1)
asTransactionDescription{Size of array(asTransactionDescription)}:="Invoice #"+String([Trxs]InvNo)
INSERT IN ARRAY(arTransactionCharge;Size of array(arTransactionCharge)+1)
arTransactionCharge{Size of array(arTransactionCharge)}:=Sum([Trxs]TotAmt)
INSERT IN ARRAY(arTransactionReceipt;Size of array(arTransactionReceipt)+1)
arTransactionReceipt{Size of array(arTransactionReceipt)}:=0
End if 
End if 
USE SET("Statement")
End for 
REDUCE SELECTION([Trxs];Size of array(adTransactionDate))
SORT ARRAY(adTransactionDate;asTransactionDescription;arTransactionCharge;arTransactionReceipt;>)
vi:=1
Case of 
: ([Facility]CustomInvFooter=True) & ([Facility]StandardInvFooter=False) & ([Facility]InvStatement=2)
FORM SET OUTPUT([Trxs];"InquiryPrintFooterTwo")
: ([Facility]InvStatement=2)
FORM SET OUTPUT([Trxs];"InquiryPrintTwo")
Else 
FORM SET OUTPUT([Trxs];"InquiryPrintNew")
End case 
CLEAR SET("Statement")
Else 
QUERY SELECTION([Trxs];[Trxs]TrxDate>=$Date1;*)
QUERY SELECTION([Trxs]; & ;[Trxs]TrxDate<=$Date2)
ORDER BY([Trxs];[Trxs]TrxDate;>;[Trxs]Charge;<;[Trxs]TotAmt;<)
FORM SET OUTPUT([Trxs];"InquiryPrint")
End if 
PrintSelection ("P";->[Trxs])
FORM SET OUTPUT([Trxs];"TransOut")
OBJECT SET ENABLED(bAbort;False)
If (In transaction)
SAVE RECORD([Agreement])
SAVE RECORD([Reservation])
SAVE RECORD([Customer])
VALIDATE TRANSACTION
START TRANSACTION
End if 
End if 

//end


End for 
Else 
$Select:=False
READ WRITE([Trxs])
READ WRITE([Facility])
LOAD RECORD([Trxs])
LOAD RECORD([Facility])
QUERY SELECTION([Trxs];[Trxs]SetMatch=True;*)
QUERY SELECTION([Trxs]; & ;[Trxs]InvNo=0;*)
QUERY SELECTION([Trxs]; & ;[Trxs]Charge=True)
If (Records in selection([Trxs])>0)
ConfirmTwo (Get localized string("Include")+" "+String(Records in selection([Trxs]))+" "+Get localized string("selected charges/credits on Invoice? Any already invoiced charges/credits or receipts/refunds were automatically removed from the selection");Get localized string("Yes");Get localized string("No"))
If (OK=1)
$Select:=True
CREATE SET([Trxs];"SearchInvNo")
$InvContinue:=False

If ([Facility]CentralAddress="") | (<>sProduct="M@")
If (Not(Semaphore("<>bNextInvNo";1800)))
$InvContinue:=True
End if 
End if 

If ($InvContinue)
//10285

If (Application type=4D Remote mode)
GET PROCESS VARIABLE(-1;<>aiNextInvNo;<>aiNextInvNo)
GET PROCESS VARIABLE(-1;<>asAllSiteCodes;<>asAllSiteCodes)
End if 
$arraypos:=Find in array(<>asAllSiteCodes;[Facility]FacilityCode)

<>aiNextInvNo{$arraypos}:=<>aiNextInvNo{$arraypos}-1
Repeat 
<>aiNextInvNo{$arraypos}:=<>aiNextInvNo{$arraypos}+1
QUERY([Trxs];[Trxs]AgreeNo=[Facility]FacilityCode+"@";*)
QUERY([Trxs]; & ;[Trxs]InvNo>=<>aiNextInvNo{$arraypos})
Until (Records in selection([Trxs])<1)
USE SET("SearchInvNo")
//CLEAR SET("SearchInvNo")
APPLY TO SELECTION([Trxs];[Trxs]InvDate:=Current date)
APPLY TO SELECTION([Trxs];[Trxs]InvNo:=<>aiNextInvNo{$arraypos})
APPLY TO SELECTION([Trxs];[Trxs]SetMatch:=False)
[Facility]NextInvNo:=<>aiNextInvNo{$arraypos}+1
SAVE RECORD([Facility])
<>aiNextInvNo{$arraypos}:=[Facility]NextInvNo
If (Application type=4D Remote mode)
VARIABLE TO VARIABLE(-1;<>aiNextInvNo;<>aiNextInvNo)
End if 
CLEAR SEMAPHORE("<>bNextInvNo")
Else 
$InvNo:=InvoiceNumber 
USE SET("SearchInvNo")
APPLY TO SELECTION([Trxs];[Trxs]InvDate:=Current date)
APPLY TO SELECTION([Trxs];[Trxs]InvNo:=$InvNo)
APPLY TO SELECTION([Trxs];[Trxs]SetMatch:=False)
End if 
If ([Facility]InvUseAgrBalFwd)
ORDER BY([Trxs];[Trxs]AgreeNo;>;[Trxs]TrxDate;>;[Trxs]Charge;<;[Trxs]TotAmt;<)
Else 
ORDER BY([Trxs];[Trxs]CustomerCode;>;[Trxs]TrxDate;>;[Trxs]Charge;<;[Trxs]TotAmt;<)
End if 
If ($Resv)
PrintInvRecCode (1;[Reservation]RReserveNo)
Else 
PrintInvRecCode (1)
End if 
USE SET("SearchInvNo")
CLEAR SET("SearchInvNo")
If ([Facility]InvUseAgrBalFwd)
ORDER BY([Trxs];[Trxs]AgreeNo;>;[Trxs]TrxDate;>;[Trxs]Charge;<;[Trxs]TotAmt;<)
Else 
ORDER BY([Trxs];[Trxs]CustomerCode;>;[Trxs]TrxDate;>;[Trxs]Charge;<;[Trxs]TotAmt;<)
End if 
OBJECT SET ENABLED(bAbort;False)
If (In transaction)
SAVE RECORD([Agreement])
SAVE RECORD([Reservation])
SAVE RECORD([Customer])
VALIDATE TRANSACTION
START TRANSACTION
End if 
If ($Resv)
//[Customer]FooterBalance:=Sum([Transaction]TotAmt)
//[Customer]BalFwd:=0
If (PrintInvRecCode (3;[Reservation]RReserveNo))
End if 
Else 
//[Customer]FooterBalance:=Sum([Transaction]TotAmt)
//[Customer]BalFwd:=0
//[Agreement]FooterBalance:=Sum([Transaction]TotAmt)
//[Agreement]BalFwd:=0
If (PrintInvRecCode (3))
End if 
End if 
Else 
$Select:=False
End if 
End if 
If ($Select=False)
USE SET("ToRestore")
QUERY SELECTION([Trxs];[Trxs]InvNo=0;*)
QUERY SELECTION([Trxs]; & ;[Trxs]Charge=True)
If (Records in selection([Trxs])>0)
ConfirmTwo (Get localized string("Include")+" "+String(Records in selection([Trxs]))+" "+Get localized string("uninvoiced charges/credits on Invoice?");Get localized string("Yes");Get localized string("No"))
If (OK=1)
CREATE SET([Trxs];"SearchInvNo")
$InvContinue:=False
If ([Facility]CentralAddress="") | (<>sProduct="M@")
If (Not(Semaphore("<>bNextInvNo";1800)))
$InvContinue:=True
End if 
End if 

If ($InvContinue)
//10285
If (Application type=4D Remote mode)
GET PROCESS VARIABLE(-1;<>aiNextInvNo;<>aiNextInvNo)
GET PROCESS VARIABLE(-1;<>asAllSiteCodes;<>asAllSiteCodes)
End if 
$arraypos:=Find in array(<>asAllSiteCodes;[Facility]FacilityCode)

<>aiNextInvNo{$arraypos}:=<>aiNextInvNo{$arraypos}-1
Repeat 
<>aiNextInvNo{$arraypos}:=<>aiNextInvNo{$arraypos}+1
QUERY([Trxs];[Trxs]AgreeNo=[Facility]FacilityCode+"@";*)
QUERY([Trxs]; & ;[Trxs]InvNo>=<>aiNextInvNo{$arraypos})
Until (Records in selection([Trxs])<1)
USE SET("SearchInvNo")
//CLEAR SET("SearchInvNo")
APPLY TO SELECTION([Trxs];[Trxs]InvDate:=Current date)
APPLY TO SELECTION([Trxs];[Trxs]InvNo:=<>aiNextInvNo{$arraypos})
[Facility]NextInvNo:=<>aiNextInvNo{$arraypos}+1
SAVE RECORD([Facility])
<>aiNextInvNo{$arraypos}:=[Facility]NextInvNo
If (Application type=4D Remote mode)
VARIABLE TO VARIABLE(-1;<>aiNextInvNo;<>aiNextInvNo)
End if 
CLEAR SEMAPHORE("<>bNextInvNo")
Else 
$InvNo:=InvoiceNumber 
USE SET("SearchInvNo")
APPLY TO SELECTION([Trxs];[Trxs]InvDate:=Current date)
APPLY TO SELECTION([Trxs];[Trxs]InvNo:=$InvNo)
APPLY TO SELECTION([Trxs];[Trxs]SetMatch:=False)
End if 
If ([Facility]InvUseAgrBalFwd)
ORDER BY([Trxs];[Trxs]AgreeNo;>;[Trxs]TrxDate;>;[Trxs]Charge;<;[Trxs]TotAmt;<)
Else 
ORDER BY([Trxs];[Trxs]CustomerCode;>;[Trxs]TrxDate;>;[Trxs]Charge;<;[Trxs]TotAmt;<)
End if 
If ($Resv)
PrintInvRecCode (1;[Reservation]RReserveNo)
Else 
PrintInvRecCode (1)
End if 
USE SET("SearchInvNo")
CLEAR SET("SearchInvNo")
If ([Facility]InvUseAgrBalFwd)
ORDER BY([Trxs];[Trxs]AgreeNo;>;[Trxs]TrxDate;>;[Trxs]Charge;<;[Trxs]TotAmt;<)
Else 
ORDER BY([Trxs];[Trxs]CustomerCode;>;[Trxs]TrxDate;>;[Trxs]Charge;<;[Trxs]TotAmt;<)
End if 
OBJECT SET ENABLED(bAbort;False)
If (In transaction)
SAVE RECORD([Agreement])
SAVE RECORD([Reservation])
SAVE RECORD([Customer])
VALIDATE TRANSACTION
START TRANSACTION
End if 
If ($Resv)
//[Customer]FooterBalance:=Sum([Transaction]TotAmt)
//[Customer]BalFwd:=0
If (PrintInvRecCode (3;[Reservation]RReserveNo))
End if 
Else 
//[Customer]FooterBalance:=Sum([Transaction]TotAmt)
//[Customer]BalFwd:=0
//[Agreement]FooterBalance:=Sum([Transaction]TotAmt)
//[Agreement]BalFwd:=0
If (PrintInvRecCode (3))
End if 
End if 

QUERY([OtherChgs];[OtherChgs]AgreeNo=[Agreement]RAgreeNo)
If ([Agreement]BalanceOwing#([Agreement]LastBillAmt-[Agreement]LastDiscAmt+Sum([OtherChgs]Amount))) & ([Agreement]BalanceOwing#0)
If ([Facility]InvUseAgrBalFwd=True)
QUERY([Trxs];[Trxs]AgreeNo=[Agreement]RAgreeNo)
Else 
QUERY([Trxs];[Trxs]CustomerCode=[Agreement]CustomerCode)
End if 
CREATE SET([Trxs];"Temp")
FIRST RECORD([Trxs])

If ([Agreement]PriorLastBill#!00-00-00!)
$Date1:=[Agreement]PriorLastBill
Else 
$Date1:=[Agreement]LastBillDate
End if 

If ([Facility]StatementLastZeroBal=True)
If ([Facility]InvUseAgrBalFwd=True)
If ([Reservation]RReserveNo>"")
$Date3:=CalculateLastZeroBalance (2)
Else 
$Date3:=CalculateLastZeroBalance (1)
End if 
Else 
$Date3:=CalculateLastZeroBalance (0)
End if 
Else 
$Date3:=$Date1
End if 

If ($Date3<$Date1)
$Date1:=$Date3
End if 

If ($Date1>Current date)
$Date1:=Current date
End if 

LAST RECORD([Trxs])
If ($Date1>[Trxs]TrxDate)
$Date2:=$Date1
Else 
$Date2:=[Trxs]TrxDate
End if 

vOpenBalText:=Get localized string("Opening balance as at")+" "+String($Date1)
vCloseBalText:=Get localized string("Closing balance as at")+" "+String($Date2)
If ([Facility]InvUseAgrBalFwd=True)
If ([Reservation]RReserveNo>"")
vOpenBal:=BalanceDateCalc (0;$Date1;True;[Reservation]RReserveNo)
vCloseBal:=BalanceDateCalc (0;$Date2;False;[Reservation]RReserveNo)
Else 
vOpenBal:=BalanceDateCalc (0;$Date1;True;[Agreement]RAgreeNo)
vCloseBal:=BalanceDateCalc (0;$Date2;False;[Agreement]RAgreeNo)
End if 
Else 
If ([Reservation]RReserveNo>"")
vOpenBal:=BalanceDateCalc (1;$Date1;True;[Reservation]CustomerCode)
vCloseBal:=BalanceDateCalc (1;$Date2;False;[Reservation]CustomerCode)
Else 
vOpenBal:=BalanceDateCalc (1;$Date1;True;[Agreement]CustomerCode)
vCloseBal:=BalanceDateCalc (1;$Date2;False;[Agreement]CustomerCode)
End if 
End if 

If ([Facility]InvStatement>0) & (Windows Ctrl down=False)
CREATE EMPTY SET([Trxs];"Statement")
QUERY SELECTION([Trxs];[Trxs]TrxDate>=$Date1;*)
QUERY SELECTION([Trxs]; & ;[Trxs]TrxDate<=$Date2;*)
QUERY SELECTION([Trxs]; & ;[Trxs]Charge=False)
For ($i;1;Records in selection([Trxs]))
ADD TO SET([Trxs];"Statement")
NEXT RECORD([Trxs])
End for 
USE SET("Temp")
QUERY SELECTION([Trxs];[Trxs]InvDate>=$Date1;*)
QUERY SELECTION([Trxs]; & ;[Trxs]InvDate<=$Date2;*)
QUERY SELECTION([Trxs]; & ;[Trxs]Charge=True)
For ($i;1;Records in selection([Trxs]))
ADD TO SET([Trxs];"Statement")
NEXT RECORD([Trxs])
End for 
USE SET("Statement")
ARRAY DATE(adTransactionDate;0)
ARRAY TEXT(asTransactionDescription;0)
ARRAY REAL(arTransactionCharge;0)
ARRAY REAL(arTransactionReceipt;0)
ARRAY LONGINT(aiTransactionInvNo;0)
DISTINCT VALUES([Trxs]InvNo;aiTransactionInvNo)
For ($i;1;Size of array(aiTransactionInvNo))
If (aiTransactionInvNo{$i}=0)
QUERY SELECTION([Trxs];[Trxs]InvNo=aiTransactionInvNo{$i})
For ($j;1;Records in selection([Trxs]))
INSERT IN ARRAY(adTransactionDate;Size of array(adTransactionDate)+1)
adTransactionDate{Size of array(adTransactionDate)}:=[Trxs]TrxDate
INSERT IN ARRAY(asTransactionDescription;Size of array(asTransactionDescription)+1)
asTransactionDescription{Size of array(asTransactionDescription)}:=[Trxs]Description
INSERT IN ARRAY(arTransactionCharge;Size of array(arTransactionCharge)+1)
arTransactionCharge{Size of array(arTransactionCharge)}:=0
INSERT IN ARRAY(arTransactionReceipt;Size of array(arTransactionReceipt)+1)
arTransactionReceipt{Size of array(arTransactionReceipt)}:=[Trxs]TotAmt
NEXT RECORD([Trxs])
End for 
Else 
QUERY SELECTION([Trxs];[Trxs]InvNo=aiTransactionInvNo{$i})
If ([Facility]StatementDetail)
For ($j;1;Records in selection([Trxs]))
INSERT IN ARRAY(adTransactionDate;Size of array(adTransactionDate)+1)
If ([Facility]InvStatement=2)
adTransactionDate{Size of array(adTransactionDate)}:=[Trxs]TrxDate
Else 
adTransactionDate{Size of array(adTransactionDate)}:=[Trxs]InvDate
End if 
INSERT IN ARRAY(asTransactionDescription;Size of array(asTransactionDescription)+1)
asTransactionDescription{Size of array(asTransactionDescription)}:="Invoice #"+String([Trxs]InvNo)+" "+[Trxs]Description
INSERT IN ARRAY(arTransactionCharge;Size of array(arTransactionCharge)+1)
arTransactionCharge{Size of array(arTransactionCharge)}:=[Trxs]TotAmt
INSERT IN ARRAY(arTransactionReceipt;Size of array(arTransactionReceipt)+1)
arTransactionReceipt{Size of array(arTransactionReceipt)}:=0
NEXT RECORD([Trxs])
End for 
Else 
INSERT IN ARRAY(adTransactionDate;Size of array(adTransactionDate)+1)
adTransactionDate{Size of array(adTransactionDate)}:=[Trxs]InvDate
INSERT IN ARRAY(asTransactionDescription;Size of array(asTransactionDescription)+1)
asTransactionDescription{Size of array(asTransactionDescription)}:="Invoice #"+String([Trxs]InvNo)
INSERT IN ARRAY(arTransactionCharge;Size of array(arTransactionCharge)+1)
arTransactionCharge{Size of array(arTransactionCharge)}:=Sum([Trxs]TotAmt)
INSERT IN ARRAY(arTransactionReceipt;Size of array(arTransactionReceipt)+1)
arTransactionReceipt{Size of array(arTransactionReceipt)}:=0
End if 
End if 
USE SET("Statement")
End for 
REDUCE SELECTION([Trxs];Size of array(adTransactionDate))
SORT ARRAY(adTransactionDate;asTransactionDescription;arTransactionCharge;arTransactionReceipt;>)
vi:=1
Case of 
: ([Facility]CustomInvFooter=True) & ([Facility]StandardInvFooter=False) & ([Facility]InvStatement=2)
FORM SET OUTPUT([Trxs];"InquiryPrintFooterTwo")
: ([Facility]InvStatement=2)
FORM SET OUTPUT([Trxs];"InquiryPrintTwo")
Else 
FORM SET OUTPUT([Trxs];"InquiryPrintNew")
End case 
CLEAR SET("Statement")
Else 
QUERY SELECTION([Trxs];[Trxs]TrxDate>=$Date1;*)
QUERY SELECTION([Trxs]; & ;[Trxs]TrxDate<=$Date2)
ORDER BY([Trxs];[Trxs]TrxDate;>;[Trxs]Charge;<;[Trxs]TotAmt;<)
FORM SET OUTPUT([Trxs];"InquiryPrint")
End if 
PrintSelection ("P";->[Trxs])
FORM SET OUTPUT([Trxs];"TransOut")
OBJECT SET ENABLED(bAbort;False)
If (In transaction)
SAVE RECORD([Agreement])
SAVE RECORD([Reservation])
SAVE RECORD([Customer])
VALIDATE TRANSACTION
START TRANSACTION
End if 
End if 
End if 
Else 
AlertMessage (Get localized string("There are no uninvoiced transactions"))
End if 
End if 
READ ONLY([Trxs])
READ ONLY([Facility])
LOAD RECORD([Trxs])
LOAD RECORD([Facility])
End if 
: ([Facility]InvStatement=1)
If (Count parameters>1)
For ($n;1;Size of array(aiInvoiceNumber))
vReprintCopy:=True
If ($Resv=True)
QUERY([Trxs];[Trxs]AgreeNo=[Reservation]RReserveNo;*)
Else 
QUERY([Trxs];[Trxs]AgreeNo=[Agreement]RAgreeNo;*)
End if 
QUERY([Trxs]; & ;[Trxs]InvNo=aiInvoiceNumber{$n})

FIRST RECORD([Trxs])//DAM Added for reprinting the Invoices to detect is it a cash sale or not
If ([Trxs]AgreeNo="@MISCL")
vMisc:=True
Else 
vMisc:=False
End if 

If ($Resv=True)
QUERY([Trxs];[Trxs]AgreeNo=[Reservation]RReserveNo;*)
Else 
QUERY([Trxs];[Trxs]AgreeNo=[Agreement]RAgreeNo;*)
End if 
QUERY([Trxs]; & ;[Trxs]InvNo=aiInvoiceNumber{$n})

If ([Facility]InvUseAgrBalFwd)
ORDER BY([Trxs];[Trxs]AgreeNo;>;[Trxs]TrxDate;>;[Trxs]Charge;<;[Trxs]TotAmt;<)
Else 
ORDER BY([Trxs];[Trxs]CustomerCode;>;[Trxs]TrxDate;>;[Trxs]Charge;<;[Trxs]TotAmt;<)
End if 
If ($Resv)
[Customer]FooterBalance:=Sum([Trxs]TotAmt)
[Customer]BalFwd:=0
If (PrintInvRecCode (3;[Reservation]RReserveNo))
End if 
Else 
[Customer]FooterBalance:=Sum([Trxs]TotAmt)
[Customer]BalFwd:=0
[Agreement]FooterBalance:=Sum([Trxs]TotAmt)
[Agreement]BalFwd:=0
If (PrintInvRecCode (3))
End if 
End if 
End for 
Else 
$Select:=False
READ WRITE([Trxs])
READ WRITE([Facility])
LOAD RECORD([Trxs])
LOAD RECORD([Facility])
QUERY SELECTION([Trxs];[Trxs]SetMatch=True;*)
QUERY SELECTION([Trxs]; & ;[Trxs]InvNo=0;*)
QUERY SELECTION([Trxs]; & ;[Trxs]Charge=True)
If (Records in selection([Trxs])>0)
ConfirmTwo (Get localized string("Include")+" "+String(Records in selection([Trxs]))+" "+Get localized string("selected charges/credits on Invoice? Any already invoiced charges/credits or receipts/refunds were automatically removed from the selection");Get localized string("Yes");Get localized string("No"))
If (OK=1)
$Select:=True
CREATE SET([Trxs];"SearchInvNo")
$InvContinue:=False

If ([Facility]CentralAddress="") | (<>sProduct="M@")
If (Not(Semaphore("<>bNextInvNo";1800)))
$InvContinue:=True
End if 
End if 

If ($InvContinue)
//10285

If (Application type=4D Remote mode)
GET PROCESS VARIABLE(-1;<>aiNextInvNo;<>aiNextInvNo)
GET PROCESS VARIABLE(-1;<>asAllSiteCodes;<>asAllSiteCodes)
End if 
$arraypos:=Find in array(<>asAllSiteCodes;[Facility]FacilityCode)

<>aiNextInvNo{$arraypos}:=<>aiNextInvNo{$arraypos}-1
Repeat 
<>aiNextInvNo{$arraypos}:=<>aiNextInvNo{$arraypos}+1
QUERY([Trxs];[Trxs]AgreeNo=[Facility]FacilityCode+"@";*)
QUERY([Trxs]; & ;[Trxs]InvNo>=<>aiNextInvNo{$arraypos})
Until (Records in selection([Trxs])<1)
USE SET("SearchInvNo")
CLEAR SET("SearchInvNo")
APPLY TO SELECTION([Trxs];[Trxs]InvDate:=Current date)
APPLY TO SELECTION([Trxs];[Trxs]InvNo:=<>aiNextInvNo{$arraypos})
APPLY TO SELECTION([Trxs];[Trxs]SetMatch:=False)
[Facility]NextInvNo:=<>aiNextInvNo{$arraypos}+1
SAVE RECORD([Facility])
<>aiNextInvNo{$arraypos}:=[Facility]NextInvNo
If (Application type=4D Remote mode)
VARIABLE TO VARIABLE(-1;<>aiNextInvNo;<>aiNextInvNo)
End if 
CLEAR SEMAPHORE("<>bNextInvNo")
Else 
$InvNo:=InvoiceNumber 
USE SET("SearchInvNo")
APPLY TO SELECTION([Trxs];[Trxs]InvDate:=Current date)
APPLY TO SELECTION([Trxs];[Trxs]InvNo:=$InvNo)
APPLY TO SELECTION([Trxs];[Trxs]SetMatch:=False)
End if 
If ([Facility]InvUseAgrBalFwd)
ORDER BY([Trxs];[Trxs]AgreeNo;>;[Trxs]TrxDate;>;[Trxs]Charge;<;[Trxs]TotAmt;<)
Else 
ORDER BY([Trxs];[Trxs]CustomerCode;>;[Trxs]TrxDate;>;[Trxs]Charge;<;[Trxs]TotAmt;<)
End if 
If ($Resv)
[Customer]FooterBalance:=Sum([Trxs]TotAmt)
[Customer]BalFwd:=0
If (PrintInvRecCode (3;[Reservation]RReserveNo))
End if 
Else 
[Customer]FooterBalance:=Sum([Trxs]TotAmt)
[Customer]BalFwd:=0
[Agreement]FooterBalance:=Sum([Trxs]TotAmt)
[Agreement]BalFwd:=0
If (PrintInvRecCode (3))
End if 
End if 
Else 
$Select:=False
End if 
End if 
If ($Select=False)
USE SET("ToRestore")
QUERY SELECTION([Trxs];[Trxs]InvNo=0;*)
QUERY SELECTION([Trxs]; & ;[Trxs]Charge=True)
If (Records in selection([Trxs])>0)
ConfirmTwo (Get localized string("Include")+" "+String(Records in selection([Trxs]))+" "+Get localized string("uninvoiced charges/credits on Invoice?");Get localized string("Yes");Get localized string("No"))
If (OK=1)
CREATE SET([Trxs];"SearchInvNo")
$InvContinue:=False

If ([Facility]CentralAddress="") | (<>sProduct="M@")
If (Not(Semaphore("<>bNextInvNo";1800)))
$InvContinue:=True
End if 
End if 

If ($InvContinue)
//10285

If (Application type=4D Remote mode)
GET PROCESS VARIABLE(-1;<>aiNextInvNo;<>aiNextInvNo)
GET PROCESS VARIABLE(-1;<>asAllSiteCodes;<>asAllSiteCodes)
End if 
$arraypos:=Find in array(<>asAllSiteCodes;[Facility]FacilityCode)
<>aiNextInvNo{$arraypos}:=<>aiNextInvNo{$arraypos}-1
Repeat 
<>aiNextInvNo{$arraypos}:=<>aiNextInvNo{$arraypos}+1
QUERY([Trxs];[Trxs]AgreeNo=[Facility]FacilityCode+"@";*)
QUERY([Trxs]; & ;[Trxs]InvNo>=<>aiNextInvNo{$arraypos})
Until (Records in selection([Trxs])<1)
USE SET("SearchInvNo")
CLEAR SET("SearchInvNo")
APPLY TO SELECTION([Trxs];[Trxs]InvDate:=Current date)
APPLY TO SELECTION([Trxs];[Trxs]InvNo:=<>aiNextInvNo{$arraypos})
[Facility]NextInvNo:=<>aiNextInvNo{$arraypos}+1
SAVE RECORD([Facility])
<>aiNextInvNo{$arraypos}:=[Facility]NextInvNo
If (Application type=4D Remote mode)
VARIABLE TO VARIABLE(-1;<>aiNextInvNo;<>aiNextInvNo)
End if 
CLEAR SEMAPHORE("<>bNextInvNo")
Else 
$InvNo:=InvoiceNumber 
USE SET("SearchInvNo")
APPLY TO SELECTION([Trxs];[Trxs]InvDate:=Current date)
APPLY TO SELECTION([Trxs];[Trxs]InvNo:=$InvNo)
APPLY TO SELECTION([Trxs];[Trxs]SetMatch:=False)
End if 
If ([Facility]InvUseAgrBalFwd)
ORDER BY([Trxs];[Trxs]AgreeNo;>;[Trxs]TrxDate;>;[Trxs]Charge;<;[Trxs]TotAmt;<)
Else 
ORDER BY([Trxs];[Trxs]CustomerCode;>;[Trxs]TrxDate;>;[Trxs]Charge;<;[Trxs]TotAmt;<)
End if 
OBJECT SET ENABLED(bAbort;False)
If (In transaction)
SAVE RECORD([Agreement])
SAVE RECORD([Reservation])
SAVE RECORD([Customer])
VALIDATE TRANSACTION
START TRANSACTION
End if 
If ($Resv)
[Customer]FooterBalance:=Sum([Trxs]TotAmt)
[Customer]BalFwd:=0
If (PrintInvRecCode (3;[Reservation]RReserveNo))
End if 
Else 
[Customer]FooterBalance:=Sum([Trxs]TotAmt)
[Customer]BalFwd:=0
[Agreement]FooterBalance:=Sum([Trxs]TotAmt)
[Agreement]BalFwd:=0
If (PrintInvRecCode (3))
End if 
End if 
End if 
Else 
AlertMessage (Get localized string("There are no uninvoiced transactions"))
End if 
End if 
READ ONLY([Trxs])
READ ONLY([Facility])
LOAD RECORD([Trxs])
LOAD RECORD([Facility])
End if 
Else 
If ($Resv)
PrintInvRecCode (1;[Reservation]RReserveNo)
Else 
PrintInvRecCode (1)
End if 
OBJECT SET ENABLED(bAbort;False)
If (In transaction)
SAVE RECORD([Agreement])
SAVE RECORD([Reservation])
SAVE RECORD([Customer])
VALIDATE TRANSACTION
START TRANSACTION
End if 
If (Records in selection([Trxs])>0) & (OK=1)
If ([Facility]InvUseAgrBalFwd)
ORDER BY([Trxs];[Trxs]AgreeNo;>;[Trxs]TrxDate;>;[Trxs]Charge;<;[Trxs]TotAmt;<)
Else 
ORDER BY([Trxs];[Trxs]CustomerCode;>;[Trxs]TrxDate;>;[Trxs]Charge;<;[Trxs]TotAmt;<)
End if 
If ($Resv)
If (PrintInvRecCode (3;[Reservation]RReserveNo))
End if 
Else 
If (PrintInvRecCode (3))
End if 
End if 
Else 
If (OK=0) & (vDontReset=True)
//if user cancelled the printing of trx list, don't display alert (PrintInvRecCode)
Else 
AlertMessage (Get localized string("No transactions to print"))
End if 
End if 
End case 
USE SET("ToRestore")
CLEAR SET("ToRestore")
USE SET("CustRestore")
CLEAR SET("CustRestore")
If ($Resv)
USE SET("ResRestore")
CLEAR SET("ResRestore")
Else 
USE SET("AgreeRestore")
CLEAR SET("AgreeRestore")
End if 
If (Count parameters<3)// added to print group of invoices from accounting menu
If (vMisc=False)
ReCalc 
End if 
End if 
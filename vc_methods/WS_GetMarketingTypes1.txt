//%attributes = {"publishedSoap":true,"publishedWsdl":true,"lang":"en"} comment added and reserved by 4D.

// ----------------------------------------------------
// User name (OS): jonathon.wildon
// Date and time: 19/02/16, 15:44:04
// ----------------------------------------------------
// Method: WS_GetMarketingTypes1
// Description
// 
//
// Parameters
// ----------------------------------------------------
//TRACE

SOAP DECLARATION(WS_ORFacilityCode;Is string var;SOAP input)
SOAP DECLARATION(WS_TypeCode;Is string var;SOAP input)
SOAP DECLARATION(WS_TypeSites;Is Boolean;SOAP input)
SOAP DECLARATION(WS_WebServicePassword;Is text;SOAP input)// Check WS password for HOF record or one record in selection

SOAP DECLARATION(WS_asMarketingCounts;Integer array;SOAP output)
SOAP DECLARATION(WS_asMarketingCustTypes;Text array;SOAP output)
SOAP DECLARATION(WS_asDescriptions;Text array;SOAP output)
SOAP DECLARATION(WS_asMarketingOnline;Boolean array;SOAP output)
SOAP DECLARATION(WS_asMarketingEmail;Text array;SOAP output)
SOAP DECLARATION(WS_asMarketingFacilities;Text array;SOAP output)
SOAP DECLARATION(WS_asFacilityList;Text array;SOAP output)
SOAP DECLARATION(WS_asMarketingInactive;Boolean array;SOAP output)
SOAP DECLARATION(WS_asMarketingInfo;Text array;SOAP output)
SOAP DECLARATION(WS_asMarketingLists;Text array;SOAP output)
SOAP DECLARATION(WS_asMarketingCodes;Text array;SOAP output)
SOAP DECLARATION(WS_asMarketingLowArea;Real array;SOAP output)
SOAP DECLARATION(WS_asMarketingNo;LongInt array;SOAP output)
SOAP DECLARATION(WS_asMarketingOrgs;Boolean array;SOAP output)
SOAP DECLARATION(WS_asMarketingSecurity;Boolean array;SOAP output)
SOAP DECLARATION(WS_asMarketingSortOrder;LongInt array;SOAP output)
SOAP DECLARATION(WS_asMarketingUpArea;Real array;SOAP output)
SOAP DECLARATION(WS_ORSuccess;Is Boolean;SOAP output)
SOAP DECLARATION(WS_ORErrorCode;Is integer;SOAP output)
SOAP DECLARATION(WS_ORErrorDescription;Is string var;SOAP output)

ARRAY LONGINT(WS_asMarketingCounts;0)
ARRAY TEXT(WS_asMarketingCustTypes;0)
ARRAY TEXT(WS_asDescriptions;0)
ARRAY BOOLEAN(WS_asMarketingOnline;0)
ARRAY TEXT(WS_asMarketingEmail;0)
ARRAY TEXT(WS_asMarketingFacilities;0)
ARRAY TEXT(WS_asFacilityList;0)
ARRAY BOOLEAN(WS_asMarketingInactive;0)
ARRAY TEXT(WS_asMarketingInfo;0)
ARRAY TEXT(WS_asMarketingLists;0)
ARRAY TEXT(WS_asMarketingCodes;0)
ARRAY REAL(WS_asMarketingLowArea;0)
ARRAY LONGINT(WS_asMarketingNo;0)
ARRAY BOOLEAN(WS_asMarketingOrgs;0)
ARRAY BOOLEAN(WS_asMarketingSecurity;0)
ARRAY LONGINT(WS_asMarketingSortOrder;0)
ARRAY REAL(WS_asMarketingUpArea;0)
WS_ORErrorCode:=0
WS_ORErrorDescription:=""
WS_ORSuccess:=True


C_TEXT($String)
$String:="Start WS_GetMarketingTypes1: "+Char(13)
$String:=$String+"WS_ORFacilityCode: "+WS_ORFacilityCode+Char(13)
$String:=$String+"WS_TypeCode: "+WS_TypeCode+" "+Char(13)
$String:=$String+"WS_TypeSites: "+String(WS_TypeSites)+" "+Char(13)
C_TEXT($pass)
$pass:=WS_WebServicePassword
$pass:=Replace string($pass;Substring($pass;1;Length($pass)-2);"X"*(Length($pass)-2))
$String:=$String+"WS_WebServicePassword: "+$pass+Char(13)
WSRecordLog ($String)

QUERY([Facility];[Facility]FacilityCode=WS_ORFacilityCode)

If (WS_WebServicePassword=[Facility]ODBCPassword) & ([Facility]ODBCPassword#"")

If (WS_TypeSites=True)//all facilities

If (WS_TypeCode="ALL")//all facilities & all types

ALL RECORDS([MarketingTypes])
If (Records in selection([MarketingTypes])>0)
SELECTION TO ARRAY([MarketingTypes]Count;WS_asMarketingCounts;[MarketingTypes]CustType;WS_asMarketingCustTypes;\
[MarketingTypes]Description;WS_asDescriptions;[MarketingTypes]DispOnlineReserve;WS_asMarketingOnline;\
[MarketingTypes]Email;WS_asMarketingEmail;[MarketingTypes]Facility;WS_asMarketingFacilities;\
[MarketingTypes]FacilityList;WS_asFacilityList;[MarketingTypes]Inactive;WS_asMarketingInactive;\
[MarketingTypes]Info;WS_asMarketingInfo;[MarketingTypes]List;WS_asMarketingLists;\
[MarketingTypes]ListCode;WS_asMarketingCodes;[MarketingTypes]LowerArea;WS_asMarketingLowArea;\
[MarketingTypes]Number;WS_asMarketingNo;[MarketingTypes]Organization;WS_asMarketingOrgs;\
[MarketingTypes]Security;WS_asMarketingSecurity;[MarketingTypes]SortOrder;WS_asMarketingSortOrder;\
[MarketingTypes]UpperArea;WS_asMarketingUpArea)
WS_ORSuccess:=True
WS_ORErrorCode:=0
WS_ORErrorDescription:=""
Else 
WS_ORSuccess:=False
WS_ORErrorCode:=9999
WS_ORErrorDescription:="No matching Marketing Type reocrds found in database Storman."
End if 


Else //all facilities & one type


QUERY([MarketingTypes];[MarketingTypes]ListCode=WS_TypeCode)
If (Records in selection([MarketingTypes])>0)
SELECTION TO ARRAY([MarketingTypes]Count;WS_asMarketingCounts;[MarketingTypes]CustType;WS_asMarketingCustTypes;\
[MarketingTypes]Description;WS_asDescriptions;[MarketingTypes]DispOnlineReserve;WS_asMarketingOnline;\
[MarketingTypes]Email;WS_asMarketingEmail;[MarketingTypes]Facility;WS_asMarketingFacilities;\
[MarketingTypes]FacilityList;WS_asFacilityList;[MarketingTypes]Inactive;WS_asMarketingInactive;\
[MarketingTypes]Info;WS_asMarketingInfo;[MarketingTypes]List;WS_asMarketingLists;\
[MarketingTypes]ListCode;WS_asMarketingCodes;[MarketingTypes]LowerArea;WS_asMarketingLowArea;\
[MarketingTypes]Number;WS_asMarketingNo;[MarketingTypes]Organization;WS_asMarketingOrgs;\
[MarketingTypes]Security;WS_asMarketingSecurity;[MarketingTypes]SortOrder;WS_asMarketingSortOrder;\
[MarketingTypes]UpperArea;WS_asMarketingUpArea)
WS_ORSuccess:=True
WS_ORErrorCode:=0
WS_ORErrorDescription:=""
Else 
WS_ORSuccess:=False
WS_ORErrorCode:=9999
WS_ORErrorDescription:="No matching Marketing Type reocrds found in database Storman."
End if 
End if 


Else //one facility


If (WS_TypeCode="ALL")//one facility and all types

QUERY([MarketingTypes];[MarketingTypes]Facility=WS_ORFacilityCode)
If (Records in selection([MarketingTypes])>0)
SELECTION TO ARRAY([MarketingTypes]Count;WS_asMarketingCounts;[MarketingTypes]CustType;WS_asMarketingCustTypes;\
[MarketingTypes]Description;WS_asDescriptions;[MarketingTypes]DispOnlineReserve;WS_asMarketingOnline;\
[MarketingTypes]Email;WS_asMarketingEmail;[MarketingTypes]Facility;WS_asMarketingFacilities;\
[MarketingTypes]FacilityList;WS_asFacilityList;[MarketingTypes]Inactive;WS_asMarketingInactive;\
[MarketingTypes]Info;WS_asMarketingInfo;[MarketingTypes]List;WS_asMarketingLists;\
[MarketingTypes]ListCode;WS_asMarketingCodes;[MarketingTypes]LowerArea;WS_asMarketingLowArea;\
[MarketingTypes]Number;WS_asMarketingNo;[MarketingTypes]Organization;WS_asMarketingOrgs;\
[MarketingTypes]Security;WS_asMarketingSecurity;[MarketingTypes]SortOrder;WS_asMarketingSortOrder;\
[MarketingTypes]UpperArea;WS_asMarketingUpArea)
WS_ORSuccess:=True
WS_ORErrorCode:=0
WS_ORErrorDescription:=""
Else 
WS_ORSuccess:=False
WS_ORErrorCode:=9999
WS_ORErrorDescription:="No matching Marketing Type reocrds found in database Storman."
End if 


Else //one facility and one type

QUERY([MarketingTypes];[MarketingTypes]ListCode=WS_TypeCode;*)
QUERY([MarketingTypes]; & ;[MarketingTypes]Facility=WS_ORFacilityCode)
If (Records in selection([MarketingTypes])>0)
SELECTION TO ARRAY([MarketingTypes]Count;WS_asMarketingCounts;[MarketingTypes]CustType;WS_asMarketingCustTypes;\
[MarketingTypes]Description;WS_asDescriptions;[MarketingTypes]DispOnlineReserve;WS_asMarketingOnline;\
[MarketingTypes]Email;WS_asMarketingEmail;[MarketingTypes]Facility;WS_asMarketingFacilities;\
[MarketingTypes]FacilityList;WS_asFacilityList;[MarketingTypes]Inactive;WS_asMarketingInactive;\
[MarketingTypes]Info;WS_asMarketingInfo;[MarketingTypes]List;WS_asMarketingLists;\
[MarketingTypes]ListCode;WS_asMarketingCodes;[MarketingTypes]LowerArea;WS_asMarketingLowArea;\
[MarketingTypes]Number;WS_asMarketingNo;[MarketingTypes]Organization;WS_asMarketingOrgs;\
[MarketingTypes]Security;WS_asMarketingSecurity;[MarketingTypes]SortOrder;WS_asMarketingSortOrder;\
[MarketingTypes]UpperArea;WS_asMarketingUpArea)
WS_ORSuccess:=True
WS_ORErrorCode:=0
WS_ORErrorDescription:=""
Else 
WS_ORSuccess:=False
WS_ORErrorCode:=9999
WS_ORErrorDescription:="No matching Marketing Type records found in database Storman."
End if 
End if 
End if 
Else 
WS_ORSuccess:=False
WS_ORErrorCode:=1099
WS_ORErrorDescription:="Web Service Password is incorrect."
End if 


$String:="End WS_GetMarketingTypes1"+Char(13)
$String:=$String+"WS_ORSuccess: "+String(WS_ORSuccess)+Char(13)
$String:=$String+"WS_ORErrorCode: "+String(WS_ORErrorCode)+Char(13)
$String:=$String+"WS_ORErrorDescription: "+WS_ORErrorDescription+Char(13)
//$sizeofarray:=Size of array(WS_asMarketingFacilities)
//For ($vlElem;1;$sizeofarray)
//$String:=$String+"WS_asMarketingFacilities("+String($vlElem)+"):"+WS_asMarketingFacilities{$vlElem}+Char(13)
//End for 
//$sizeofarray:=Size of array(WS_asMarketingCodes)
//For ($vlElem;1;$sizeofarray)
//$String:=$String+"WS_Facility("+String($vlElem)+"):"+WS_asMarketingCodes{$vlElem}+Char(13)
//End for 
//$sizeofarray:=Size of array(WS_asSortOrder)
//For ($vlElem;1;$sizeofarray)
//$String:=$String+"WS_asSortOrder("+String($vlElem)+"):"+String(WS_asSortOrder{$vlElem})+Char(13)
//End for 
//$sizeofarray:=Size of array(WS_asDescriptions)
//For ($vlElem;1;$sizeofarray)
//$String:=$String+"WS_asDescriptions("+String($vlElem)+"):"+WS_asDescriptions{$vlElem}+Char(13)
//End for 
//$sizeofarray:=Size of array(WS_asMarketingNo)
//For ($vlElem;1;$sizeofarray)
//$String:=$String+"WS_asMarketingNo("+String($vlElem)+"):"+String(WS_asMarketingNo{$vlElem})+Char(13)
//End for 
//$sizeofarray:=Size of array(WS_asMarketingCount)
//For ($vlElem;1;$sizeofarray)
//$String:=$String+"WS_asMarketingCount("+String($vlElem)+"):"+String(WS_asMarketingCount{$vlElem})+Char(13)
//End for 
WSRecordLog ($String)

ReadOnlyAll 
UnloadAll 

